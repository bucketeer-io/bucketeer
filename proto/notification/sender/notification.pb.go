// Copyright 2023 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: proto/notification/sender/notification.proto

package sender

import (
	domain "github.com/bucketeer-io/bucketeer/proto/event/domain"
	experiment "github.com/bucketeer-io/bucketeer/proto/experiment"
	feature "github.com/bucketeer-io/bucketeer/proto/feature"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Notification_Type int32

const (
	Notification_DomainEvent       Notification_Type = 0
	Notification_FeatureStale      Notification_Type = 1
	Notification_ExperimentRunning Notification_Type = 2
	Notification_MauCount          Notification_Type = 3
)

// Enum value maps for Notification_Type.
var (
	Notification_Type_name = map[int32]string{
		0: "DomainEvent",
		1: "FeatureStale",
		2: "ExperimentRunning",
		3: "MauCount",
	}
	Notification_Type_value = map[string]int32{
		"DomainEvent":       0,
		"FeatureStale":      1,
		"ExperimentRunning": 2,
		"MauCount":          3,
	}
)

func (x Notification_Type) Enum() *Notification_Type {
	p := new(Notification_Type)
	*p = x
	return p
}

func (x Notification_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Notification_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notification_sender_notification_proto_enumTypes[0].Descriptor()
}

func (Notification_Type) Type() protoreflect.EnumType {
	return &file_proto_notification_sender_notification_proto_enumTypes[0]
}

func (x Notification_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Notification_Type.Descriptor instead.
func (Notification_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{0, 0}
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                          Notification_Type              `protobuf:"varint,1,opt,name=type,proto3,enum=bucketeer.notification.sender.Notification_Type" json:"type,omitempty"`
	DomainEventNotification       *DomainEventNotification       `protobuf:"bytes,2,opt,name=domain_event_notification,json=domainEventNotification,proto3" json:"domain_event_notification,omitempty"`
	FeatureStaleNotification      *FeatureStaleNotification      `protobuf:"bytes,3,opt,name=feature_stale_notification,json=featureStaleNotification,proto3" json:"feature_stale_notification,omitempty"`
	ExperimentRunningNotification *ExperimentRunningNotification `protobuf:"bytes,4,opt,name=experiment_running_notification,json=experimentRunningNotification,proto3" json:"experiment_running_notification,omitempty"`
	MauCountNotification          *MauCountNotification          `protobuf:"bytes,5,opt,name=mau_count_notification,json=mauCountNotification,proto3" json:"mau_count_notification,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_sender_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_sender_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetType() Notification_Type {
	if x != nil {
		return x.Type
	}
	return Notification_DomainEvent
}

func (x *Notification) GetDomainEventNotification() *DomainEventNotification {
	if x != nil {
		return x.DomainEventNotification
	}
	return nil
}

func (x *Notification) GetFeatureStaleNotification() *FeatureStaleNotification {
	if x != nil {
		return x.FeatureStaleNotification
	}
	return nil
}

func (x *Notification) GetExperimentRunningNotification() *ExperimentRunningNotification {
	if x != nil {
		return x.ExperimentRunningNotification
	}
	return nil
}

func (x *Notification) GetMauCountNotification() *MauCountNotification {
	if x != nil {
		return x.MauCountNotification
	}
	return nil
}

type DomainEventNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Editor        *domain.Editor          `protobuf:"bytes,2,opt,name=editor,proto3" json:"editor,omitempty"`
	EntityType    domain.Event_EntityType `protobuf:"varint,3,opt,name=entity_type,json=entityType,proto3,enum=bucketeer.event.domain.Event_EntityType" json:"entity_type,omitempty"`
	EntityId      string                  `protobuf:"bytes,4,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Type          domain.Event_Type       `protobuf:"varint,5,opt,name=type,proto3,enum=bucketeer.event.domain.Event_Type" json:"type,omitempty"`
	EnvironmentId string                  `protobuf:"bytes,6,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *DomainEventNotification) Reset() {
	*x = DomainEventNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_sender_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainEventNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainEventNotification) ProtoMessage() {}

func (x *DomainEventNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_sender_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainEventNotification.ProtoReflect.Descriptor instead.
func (*DomainEventNotification) Descriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{1}
}

func (x *DomainEventNotification) GetEditor() *domain.Editor {
	if x != nil {
		return x.Editor
	}
	return nil
}

func (x *DomainEventNotification) GetEntityType() domain.Event_EntityType {
	if x != nil {
		return x.EntityType
	}
	return domain.Event_FEATURE
}

func (x *DomainEventNotification) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *DomainEventNotification) GetType() domain.Event_Type {
	if x != nil {
		return x.Type
	}
	return domain.Event_UNKNOWN
}

func (x *DomainEventNotification) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type FeatureStaleNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features      []*feature.Feature `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
	EnvironmentId string             `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *FeatureStaleNotification) Reset() {
	*x = FeatureStaleNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_sender_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureStaleNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureStaleNotification) ProtoMessage() {}

func (x *FeatureStaleNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_sender_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureStaleNotification.ProtoReflect.Descriptor instead.
func (*FeatureStaleNotification) Descriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{2}
}

func (x *FeatureStaleNotification) GetFeatures() []*feature.Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *FeatureStaleNotification) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type ExperimentRunningNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string                   `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Experiments   []*experiment.Experiment `protobuf:"bytes,3,rep,name=experiments,proto3" json:"experiments,omitempty"`
}

func (x *ExperimentRunningNotification) Reset() {
	*x = ExperimentRunningNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_sender_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExperimentRunningNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentRunningNotification) ProtoMessage() {}

func (x *ExperimentRunningNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_sender_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentRunningNotification.ProtoReflect.Descriptor instead.
func (*ExperimentRunningNotification) Descriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{3}
}

func (x *ExperimentRunningNotification) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ExperimentRunningNotification) GetExperiments() []*experiment.Experiment {
	if x != nil {
		return x.Experiments
	}
	return nil
}

type MauCountNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	EventCount    int64  `protobuf:"varint,2,opt,name=event_count,json=eventCount,proto3" json:"event_count,omitempty"`
	UserCount     int64  `protobuf:"varint,3,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	Month         int32  `protobuf:"varint,4,opt,name=month,proto3" json:"month,omitempty"`
}

func (x *MauCountNotification) Reset() {
	*x = MauCountNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_sender_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MauCountNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MauCountNotification) ProtoMessage() {}

func (x *MauCountNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_sender_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MauCountNotification.ProtoReflect.Descriptor instead.
func (*MauCountNotification) Descriptor() ([]byte, []int) {
	return file_proto_notification_sender_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MauCountNotification) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *MauCountNotification) GetEventCount() int64 {
	if x != nil {
		return x.EventCount
	}
	return 0
}

func (x *MauCountNotification) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *MauCountNotification) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

var File_proto_notification_sender_notification_proto protoreflect.FileDescriptor

var file_proto_notification_sender_notification_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x1e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x05,
	0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a, 0x19, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x65, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x17, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x1a, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x84, 0x01, 0x0a, 0x1f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1d, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x69, 0x0a, 0x16, 0x6d, 0x61, 0x75, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x6d, 0x61, 0x75,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x61, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0x03, 0x22, 0x9e, 0x02, 0x0a, 0x17, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a,
	0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x4a, 0x04, 0x08, 0x01,
	0x10, 0x02, 0x22, 0x7f, 0x0a, 0x18, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61,
	0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36,
	0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x22, 0x90, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x4d, 0x61, 0x75, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x42, 0x3d, 0x5a, 0x3b,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x65, 0x65, 0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_notification_sender_notification_proto_rawDescOnce sync.Once
	file_proto_notification_sender_notification_proto_rawDescData = file_proto_notification_sender_notification_proto_rawDesc
)

func file_proto_notification_sender_notification_proto_rawDescGZIP() []byte {
	file_proto_notification_sender_notification_proto_rawDescOnce.Do(func() {
		file_proto_notification_sender_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_notification_sender_notification_proto_rawDescData)
	})
	return file_proto_notification_sender_notification_proto_rawDescData
}

var file_proto_notification_sender_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_notification_sender_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_notification_sender_notification_proto_goTypes = []interface{}{
	(Notification_Type)(0),                // 0: bucketeer.notification.sender.Notification.Type
	(*Notification)(nil),                  // 1: bucketeer.notification.sender.Notification
	(*DomainEventNotification)(nil),       // 2: bucketeer.notification.sender.DomainEventNotification
	(*FeatureStaleNotification)(nil),      // 3: bucketeer.notification.sender.FeatureStaleNotification
	(*ExperimentRunningNotification)(nil), // 4: bucketeer.notification.sender.ExperimentRunningNotification
	(*MauCountNotification)(nil),          // 5: bucketeer.notification.sender.MauCountNotification
	(*domain.Editor)(nil),                 // 6: bucketeer.event.domain.Editor
	(domain.Event_EntityType)(0),          // 7: bucketeer.event.domain.Event.EntityType
	(domain.Event_Type)(0),                // 8: bucketeer.event.domain.Event.Type
	(*feature.Feature)(nil),               // 9: bucketeer.feature.Feature
	(*experiment.Experiment)(nil),         // 10: bucketeer.experiment.Experiment
}
var file_proto_notification_sender_notification_proto_depIdxs = []int32{
	0,  // 0: bucketeer.notification.sender.Notification.type:type_name -> bucketeer.notification.sender.Notification.Type
	2,  // 1: bucketeer.notification.sender.Notification.domain_event_notification:type_name -> bucketeer.notification.sender.DomainEventNotification
	3,  // 2: bucketeer.notification.sender.Notification.feature_stale_notification:type_name -> bucketeer.notification.sender.FeatureStaleNotification
	4,  // 3: bucketeer.notification.sender.Notification.experiment_running_notification:type_name -> bucketeer.notification.sender.ExperimentRunningNotification
	5,  // 4: bucketeer.notification.sender.Notification.mau_count_notification:type_name -> bucketeer.notification.sender.MauCountNotification
	6,  // 5: bucketeer.notification.sender.DomainEventNotification.editor:type_name -> bucketeer.event.domain.Editor
	7,  // 6: bucketeer.notification.sender.DomainEventNotification.entity_type:type_name -> bucketeer.event.domain.Event.EntityType
	8,  // 7: bucketeer.notification.sender.DomainEventNotification.type:type_name -> bucketeer.event.domain.Event.Type
	9,  // 8: bucketeer.notification.sender.FeatureStaleNotification.features:type_name -> bucketeer.feature.Feature
	10, // 9: bucketeer.notification.sender.ExperimentRunningNotification.experiments:type_name -> bucketeer.experiment.Experiment
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_notification_sender_notification_proto_init() }
func file_proto_notification_sender_notification_proto_init() {
	if File_proto_notification_sender_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_notification_sender_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_sender_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainEventNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_sender_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureStaleNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_sender_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExperimentRunningNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_sender_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MauCountNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_notification_sender_notification_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_notification_sender_notification_proto_goTypes,
		DependencyIndexes: file_proto_notification_sender_notification_proto_depIdxs,
		EnumInfos:         file_proto_notification_sender_notification_proto_enumTypes,
		MessageInfos:      file_proto_notification_sender_notification_proto_msgTypes,
	}.Build()
	File_proto_notification_sender_notification_proto = out.File
	file_proto_notification_sender_notification_proto_rawDesc = nil
	file_proto_notification_sender_notification_proto_goTypes = nil
	file_proto_notification_sender_notification_proto_depIdxs = nil
}
