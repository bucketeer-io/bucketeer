// Code generated by MockGen. DO NOT EDIT.
// Source: executor.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAutoOpsExecutor is a mock of AutoOpsExecutor interface.
type MockAutoOpsExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockAutoOpsExecutorMockRecorder
}

// MockAutoOpsExecutorMockRecorder is the mock recorder for MockAutoOpsExecutor.
type MockAutoOpsExecutorMockRecorder struct {
	mock *MockAutoOpsExecutor
}

// NewMockAutoOpsExecutor creates a new mock instance.
func NewMockAutoOpsExecutor(ctrl *gomock.Controller) *MockAutoOpsExecutor {
	mock := &MockAutoOpsExecutor{ctrl: ctrl}
	mock.recorder = &MockAutoOpsExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAutoOpsExecutor) EXPECT() *MockAutoOpsExecutorMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockAutoOpsExecutor) Execute(ctx context.Context, environmentNamespace, ruleID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", ctx, environmentNamespace, ruleID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockAutoOpsExecutorMockRecorder) Execute(ctx, environmentNamespace, ruleID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockAutoOpsExecutor)(nil).Execute), ctx, environmentNamespace, ruleID)
}
