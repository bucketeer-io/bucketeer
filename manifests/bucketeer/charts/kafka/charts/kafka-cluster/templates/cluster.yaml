{{- if .Values.global.kafka.enabled }}
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.metadata.name }}
  namespace: {{ .Values.namespace }}
spec:
  kafka:
    template:
      pod:
        metadata:
          labels:
            app: {{ template "kafka-cluster.name" . }}
            release: {{ .Release.Name }}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions: {{ toYaml .Values.spec.kafka.affinity.nodeAffinity.matchExpressions | nindent 16 }}
          {{- if .Values.spec.kafka.affinity.podAntiAffinity.enabled }}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ template "kafka-cluster.name" . }}
                  release: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: {{ template "kafka-cluster.name" . }}
                    release: {{ .Release.Name }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
          {{- end }}
    version: {{ .Values.spec.kafka.version }}
    replicas: {{ .Values.spec.kafka.replicas }}
    resources: {{ toYaml .Values.spec.kafka.resources | nindent 6 }}
    jvmOptions: {{ toYaml .Values.spec.kafka.jvmOptions | nindent 6 }}
    listeners:
    - name: plain
      port: 9092
      type: internal
      tls: false
      authentication:
        type: scram-sha-512
    - name: external
      port: 9094
      type: nodeport
      tls: false
      authentication:
        type: scram-sha-512
    config: {{ toYaml .Values.spec.kafka.config | nindent 6 }}
    storage: {{ toYaml .Values.spec.kafka.storage | nindent 6 }}
    rack: {{ toYaml .Values.spec.kafka.rack | nindent 6 }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          key: kafka-kafka-jmx-exporter-configuration.yaml
          name: kafka-kafka-jmx-exporter-configuration
  zookeeper:
    template:
      pod:
        metadata:
          labels:
            app: {{ template "kafka-cluster.name" . }}-zookeeper
            release: {{ .Release.Name }}
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:	{{ toYaml .Values.spec.zookeeper.affinity.nodeAffinity.matchExpressions | nindent 16 }}
          {{- if .Values.spec.zookeeper.affinity.podAntiAffinity.enabled }}
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: {{ template "kafka-cluster.name" . }}-zookeeper
                  release: {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: {{ template "kafka-cluster.name" . }}-zookeeper
                    release: {{ .Release.Name }}
                topologyKey: failure-domain.beta.kubernetes.io/zone
          {{- end }}
    replicas: {{ toYaml .Values.spec.zookeeper.replicas }}
    resources: {{ toYaml .Values.spec.zookeeper.resources | nindent 6 }}
    jvmOptions: {{ toYaml .Values.spec.zookeeper.jvmOptions | nindent 6 }}
    storage: {{ toYaml .Values.spec.zookeeper.storage | nindent 6 }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          key: kafka-zookeeper-jmx-exporter-configuration.yaml
          name: kafka-zookeeper-jmx-exporter-configuration
  entityOperator:
    template:
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:	{{ toYaml .Values.spec.entityOperator.affinity.nodeAffinity.matchExpressions | nindent 16 }}
    userOperator:
      resources: {{ toYaml .Values.spec.entityOperator.userOperator.resources | nindent 8 }}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
    template:
      pod:
        metadata:
          labels:
            kafka: metrics
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:	{{ toYaml .Values.spec.kafkaExporter.affinity.nodeAffinity.matchExpressions | nindent 16 }}
    resources: {{ toYaml .Values.spec.kafkaExporter.resources | nindent 6 }}
{{- end }}