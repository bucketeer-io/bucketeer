load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "count_watcher.go",
        "datetime_watcher.go",
        "job.go",
    ],
    importpath = "github.com/bucketeer-io/bucketeer/pkg/opsevent/batch/job",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/autoops/domain:go_default_library",
        "//pkg/environment/domain:go_default_library",
        "//pkg/eventcounter/client:go_default_library",
        "//pkg/feature/client:go_default_library",
        "//pkg/job:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/opsevent/batch/executor:go_default_library",
        "//pkg/opsevent/batch/targetstore:go_default_library",
        "//pkg/opsevent/domain:go_default_library",
        "//pkg/opsevent/storage/v2:go_default_library",
        "//pkg/storage/v2/mysql:go_default_library",
        "//proto/autoops:go_default_library",
        "//proto/eventcounter:go_default_library",
        "//proto/feature:go_default_library",
        "@org_uber_go_zap//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "count_watcher_test.go",
        "datetime_watcher_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/autoops/domain:go_default_library",
        "//pkg/environment/domain:go_default_library",
        "//pkg/eventcounter/client/mock:go_default_library",
        "//pkg/feature/client/mock:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/opsevent/batch/executor/mock:go_default_library",
        "//pkg/opsevent/batch/targetstore/mock:go_default_library",
        "//pkg/storage/v2/mysql/mock:go_default_library",
        "//proto/autoops:go_default_library",
        "//proto/environment:go_default_library",
        "//proto/eventcounter:go_default_library",
        "//proto/feature:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)
