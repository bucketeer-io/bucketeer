// Code generated by MockGen. DO NOT EDIT.
// Source: environment_api_key.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	account "github.com/bucketeer-io/bucketeer/proto/account"
)

// MockEnvironmentAPIKeyCache is a mock of EnvironmentAPIKeyCache interface.
type MockEnvironmentAPIKeyCache struct {
	ctrl     *gomock.Controller
	recorder *MockEnvironmentAPIKeyCacheMockRecorder
}

// MockEnvironmentAPIKeyCacheMockRecorder is the mock recorder for MockEnvironmentAPIKeyCache.
type MockEnvironmentAPIKeyCacheMockRecorder struct {
	mock *MockEnvironmentAPIKeyCache
}

// NewMockEnvironmentAPIKeyCache creates a new mock instance.
func NewMockEnvironmentAPIKeyCache(ctrl *gomock.Controller) *MockEnvironmentAPIKeyCache {
	mock := &MockEnvironmentAPIKeyCache{ctrl: ctrl}
	mock.recorder = &MockEnvironmentAPIKeyCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnvironmentAPIKeyCache) EXPECT() *MockEnvironmentAPIKeyCacheMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockEnvironmentAPIKeyCache) Get(arg0 string) (*account.EnvironmentAPIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*account.EnvironmentAPIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockEnvironmentAPIKeyCacheMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockEnvironmentAPIKeyCache)(nil).Get), arg0)
}

// Put mocks base method.
func (m *MockEnvironmentAPIKeyCache) Put(arg0 *account.EnvironmentAPIKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockEnvironmentAPIKeyCacheMockRecorder) Put(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockEnvironmentAPIKeyCache)(nil).Put), arg0)
}
