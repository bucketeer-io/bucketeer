# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.gateway import service_pb2 as proto_dot_gateway_dot_service__pb2


class GatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/bucketeer.gateway.Gateway/Ping',
                request_serializer=proto_dot_gateway_dot_service__pb2.PingRequest.SerializeToString,
                response_deserializer=proto_dot_gateway_dot_service__pb2.PingResponse.FromString,
                )
        self.GetEvaluations = channel.unary_unary(
                '/bucketeer.gateway.Gateway/GetEvaluations',
                request_serializer=proto_dot_gateway_dot_service__pb2.GetEvaluationsRequest.SerializeToString,
                response_deserializer=proto_dot_gateway_dot_service__pb2.GetEvaluationsResponse.FromString,
                )
        self.GetEvaluation = channel.unary_unary(
                '/bucketeer.gateway.Gateway/GetEvaluation',
                request_serializer=proto_dot_gateway_dot_service__pb2.GetEvaluationRequest.SerializeToString,
                response_deserializer=proto_dot_gateway_dot_service__pb2.GetEvaluationResponse.FromString,
                )
        self.RegisterEvents = channel.unary_unary(
                '/bucketeer.gateway.Gateway/RegisterEvents',
                request_serializer=proto_dot_gateway_dot_service__pb2.RegisterEventsRequest.SerializeToString,
                response_deserializer=proto_dot_gateway_dot_service__pb2.RegisterEventsResponse.FromString,
                )
        self.Track = channel.unary_unary(
                '/bucketeer.gateway.Gateway/Track',
                request_serializer=proto_dot_gateway_dot_service__pb2.TrackRequest.SerializeToString,
                response_deserializer=proto_dot_gateway_dot_service__pb2.TrackResponse.FromString,
                )


class GatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEvaluations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEvaluation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Track(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=proto_dot_gateway_dot_service__pb2.PingRequest.FromString,
                    response_serializer=proto_dot_gateway_dot_service__pb2.PingResponse.SerializeToString,
            ),
            'GetEvaluations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvaluations,
                    request_deserializer=proto_dot_gateway_dot_service__pb2.GetEvaluationsRequest.FromString,
                    response_serializer=proto_dot_gateway_dot_service__pb2.GetEvaluationsResponse.SerializeToString,
            ),
            'GetEvaluation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvaluation,
                    request_deserializer=proto_dot_gateway_dot_service__pb2.GetEvaluationRequest.FromString,
                    response_serializer=proto_dot_gateway_dot_service__pb2.GetEvaluationResponse.SerializeToString,
            ),
            'RegisterEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterEvents,
                    request_deserializer=proto_dot_gateway_dot_service__pb2.RegisterEventsRequest.FromString,
                    response_serializer=proto_dot_gateway_dot_service__pb2.RegisterEventsResponse.SerializeToString,
            ),
            'Track': grpc.unary_unary_rpc_method_handler(
                    servicer.Track,
                    request_deserializer=proto_dot_gateway_dot_service__pb2.TrackRequest.FromString,
                    response_serializer=proto_dot_gateway_dot_service__pb2.TrackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bucketeer.gateway.Gateway', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Gateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.gateway.Gateway/Ping',
            proto_dot_gateway_dot_service__pb2.PingRequest.SerializeToString,
            proto_dot_gateway_dot_service__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEvaluations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.gateway.Gateway/GetEvaluations',
            proto_dot_gateway_dot_service__pb2.GetEvaluationsRequest.SerializeToString,
            proto_dot_gateway_dot_service__pb2.GetEvaluationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEvaluation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.gateway.Gateway/GetEvaluation',
            proto_dot_gateway_dot_service__pb2.GetEvaluationRequest.SerializeToString,
            proto_dot_gateway_dot_service__pb2.GetEvaluationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.gateway.Gateway/RegisterEvents',
            proto_dot_gateway_dot_service__pb2.RegisterEventsRequest.SerializeToString,
            proto_dot_gateway_dot_service__pb2.RegisterEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Track(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.gateway.Gateway/Track',
            proto_dot_gateway_dot_service__pb2.TrackRequest.SerializeToString,
            proto_dot_gateway_dot_service__pb2.TrackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
