global:
  image:
    tag: localenv
    imagePullSecrets:

migration:
  image:
    repository: ghcr.io/bucketeer-io/bucketeer-migration
    tag: localenv

  imagePullSecrets: []

  backoffLimit: 0
  ttlSecondsAfterFinished: 86400

  # URL to access the DB to do the migration
  # E.g. mysql://user:password@host:port/db_name
  dbUrl: mysql://bucketeer:bucketeer@localenv-mysql.default.svc:3306/bucketeer

  # The migration baseline
  # First revision
  dbBaseline: "20240626022133"

backend:
  env:
    gcpEnabled: false
    cloudService: hcv
    profile: false
    bucketeerTestEnabled: true
    bigqueryEmulatorHost: http://localenv-bq.default.svc.cluster.local:9050
    pubsubEmulatorHost: localenv-pubsub.default.svc.cluster.local:8089
    project: bucketeer-test
    mysqlUser: bucketeer
    mysqlPass: bucketeer
    mysqlHost: localenv-mysql-headless.default.svc.cluster.local
    mysqlPort: 3306
    mysqlDbName: bucketeer
    persistentRedis:
      serverName: backend
      addr: localenv-redis-headless.default.svc.cluster.local:6379
      poolMaxIdle: 25
      poolMaxActive: 25
    nonPersistentRedis:
      serverName: backend
      addr: localenv-redis-headless.default.svc.cluster.local:6379
      poolMaxIdle: 25
      poolMaxActive: 25
    bigQueryDataSet: bucketeer
    bigQueryDataLocation: bucketeer
    domainTopic: domain
    bulkSegmentUsersReceivedTopic: bulk-segment-users-received
    timezone: UTC
    logLevel: info
    googleTagManagerId:
  tls:
    service:
      secret: bucketeer-service-cert
      cert:
      key:
    issuer:
      secret: bucketeer-service-cert
      cert:
  serviceToken:
    secret: bucketeer-service-token
  oauth:
    key:
      secret: bucketeer-oauth-key
      public:
    clientId: bucketeer
    clientSecret: oauth-client-secret
    redirectUrls: https://google.com
    issuer: https://accounts.google.com
  webhook:
    baseURL: https://web-gateway.bucketeer.io
    kmsResourceName: vault

api-gateway:
  env:
    gcpEnabled: false
    profile: false
    pubsubEmulatorHost: localenv-pubsub.default.svc.cluster.local:8089
    project: bucketeer-test
    goalTopic: goal
    evaluationTopic: evaluation
    userTopic: user
    metricsTopic: metrics
    publishNumGoroutines: 200
    publishTimeout: 1m
    redis:
      serverName: api-gateway
      poolMaxIdle: 25
      poolMaxActive: 25
      addr: localenv-redis-headless.default.svc.cluster.local:6379
  tls:
    bucketeerJP:
      secrets:
        - hosts:
            - api-gateway.bucketeer.io
          secretName: bucketeer-service-cert
    service:
      secret: bucketeer-service-cert
      cert:
      key:
  serviceToken:
    secret: bucketeer-service-token
  ingress:
    host: api-gateway.bucketeer.io

web-gateway:
  env:
    gcpEnabled: false
  tls:
    bucketeerJP:
      secrets:
        - hosts:
            - web-gateway.bucketeer.io
          secretName: bucketeer-service-cert
    service:
      secret: bucketeer-service-cert
  ingress:
    host: web-gateway.bucketeer.io


batch-server:
  env:
    project: bucketeer-test
    profile: false
    gcpEnabled: false
    mysqlUser: bucketeer
    mysqlPass: bucketeer
    mysqlHost: localenv-mysql-headless.default.svc.cluster.local
    mysqlPort: 3306
    mysqlDbName: bucketeer
    bigqueryEmulatorHost: localenv-bq.default.svc.cluster.local:9060
    pubsubEmulatorHost: localenv-pubsub.default.svc.cluster.local:8089
    notificationService: localhost:9001
    environmentService: localhost:9001
    autoOpsService: localhost:9001
    experimentService: localhost:9001
    eventCounterService: localhost:9001
    featureService: localhost:9001
    webURL: http://localhost:3000
    logLevel: debug
    port: 9090
    metricsPort: 9002
    timezone: UTC
    refreshInterval: 10m
    domainTopic: domain
    domainSubscription: domain-subscription
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: "1000"
    pullerMaxOutstandingBytes: "1000000000"
    runningDurationPerBatch: 15s
    # redis settings
    persistentRedis:
      serverName: batch-peristent-redis
      addr: localenv-redis-headless.default.svc.cluster.local:6379
      poolMaxIdle: 25
      poolMaxActive: 25
    nonPersistentRedis:
      serverName: batch-non-peristent-redis
      addr: localenv-redis-headless.default.svc.cluster.local:6379
      poolMaxIdle: 25
      poolMaxActive: 25

  tls:
    service:
      secret: bucketeer-service-cert

  serviceToken:
    secret: bucketeer-service-token

  cronjob:
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
    webGatewayAddress: https://web-gateway.default.svc.cluster.local:9000
    jobs:
      - name: experiment-status-updater
        jobId: ExperimentStatusUpdater
        schedule: "* * * * *"
      - name: experiment-running-watcher
        jobId: ExperimentRunningWatcher
        schedule: "0 1 * * *"
      - name: feature-stale-watcher
        jobId: FeatureStaleWatcher
        schedule: "0 1 * * MON"
      - name: mau-count-watcher
        jobId: MauCountWatcher
        schedule: "0 1 1 * *"
      - name: ops-datetime-watcher
        jobId: DatetimeWatcher
        schedule: "* * * * *"
      - name: ops-event-count-watcher
        jobId: EventCountWatcher
        schedule: "* * * * *"
      - name: ops-progressive-rollout-watcher
        jobId: ProgressiveRolloutWatcher
        schedule: "* * * * *"
      - name: redis-counter-deleter
        jobId: RedisCounterDeleter
        schedule: "0 0 * * *"
      - name: experiment-calculator
        jobId: ExperimentCalculator
        schedule: "* * * * *"
      - name: mau-summarizer
        jobId: MauSummarizer
        schedule: "30 0 * * *"
      - name: mau-partition-deleter
        jobId: MauPartitionDeleter
        schedule: "0 2 1 * *"
      - name: mau-partition-creator
        jobId: MauPartitionCreator
        schedule: "0 2 2 * *"

experiment-calculator:
  env:
    gcpEnabled: false
    profile: false
    project: bucketeer-test
    stanHost: localhost
    stanPort: 8080
    mysqlUser: bucketeer
    mysqlPass: bucketeer
    mysqlHost: localenv-mysql-headless.default.svc.cluster.local
    mysqlPort: 3306
    mysqlDbName: bucketeer
    environmentService: localhost:9001
    experimentService: localhost:9001
    eventCounterService: localhost:9001
    logLevel: info
    port: 9090
    metricsPort: 9002
    traceSamplingProbability: 0.001
    timezone: UTC
  tls:
    service:
      secret: bucketeer-service-cert
      cert:
      key:
  serviceToken:
    secret: bucketeer-service-token

web:
  tls:
    secret: bucketeer-service-cert
