# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.experiment import service_pb2 as proto_dot_experiment_dot_service__pb2


class ExperimentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGoal = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/GetGoal',
                request_serializer=proto_dot_experiment_dot_service__pb2.GetGoalRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.GetGoalResponse.FromString,
                )
        self.ListGoals = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/ListGoals',
                request_serializer=proto_dot_experiment_dot_service__pb2.ListGoalsRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.ListGoalsResponse.FromString,
                )
        self.CreateGoal = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/CreateGoal',
                request_serializer=proto_dot_experiment_dot_service__pb2.CreateGoalRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.CreateGoalResponse.FromString,
                )
        self.UpdateGoal = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/UpdateGoal',
                request_serializer=proto_dot_experiment_dot_service__pb2.UpdateGoalRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.UpdateGoalResponse.FromString,
                )
        self.ArchiveGoal = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/ArchiveGoal',
                request_serializer=proto_dot_experiment_dot_service__pb2.ArchiveGoalRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.ArchiveGoalResponse.FromString,
                )
        self.DeleteGoal = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/DeleteGoal',
                request_serializer=proto_dot_experiment_dot_service__pb2.DeleteGoalRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.DeleteGoalResponse.FromString,
                )
        self.GetExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/GetExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.GetExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.GetExperimentResponse.FromString,
                )
        self.ListExperiments = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/ListExperiments',
                request_serializer=proto_dot_experiment_dot_service__pb2.ListExperimentsRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.ListExperimentsResponse.FromString,
                )
        self.CreateExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/CreateExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.CreateExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.CreateExperimentResponse.FromString,
                )
        self.UpdateExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/UpdateExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.UpdateExperimentResponse.FromString,
                )
        self.StartExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/StartExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.StartExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.StartExperimentResponse.FromString,
                )
        self.FinishExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/FinishExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.FinishExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.FinishExperimentResponse.FromString,
                )
        self.StopExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/StopExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.StopExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.StopExperimentResponse.FromString,
                )
        self.ArchiveExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/ArchiveExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.ArchiveExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.ArchiveExperimentResponse.FromString,
                )
        self.DeleteExperiment = channel.unary_unary(
                '/bucketeer.experiment.ExperimentService/DeleteExperiment',
                request_serializer=proto_dot_experiment_dot_service__pb2.DeleteExperimentRequest.SerializeToString,
                response_deserializer=proto_dot_experiment_dot_service__pb2.DeleteExperimentResponse.FromString,
                )


class ExperimentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetGoal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGoals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGoal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGoal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ArchiveGoal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteGoal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ArchiveExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGoal': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGoal,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.GetGoalRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.GetGoalResponse.SerializeToString,
            ),
            'ListGoals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGoals,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.ListGoalsRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.ListGoalsResponse.SerializeToString,
            ),
            'CreateGoal': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGoal,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.CreateGoalRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.CreateGoalResponse.SerializeToString,
            ),
            'UpdateGoal': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGoal,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.UpdateGoalRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.UpdateGoalResponse.SerializeToString,
            ),
            'ArchiveGoal': grpc.unary_unary_rpc_method_handler(
                    servicer.ArchiveGoal,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.ArchiveGoalRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.ArchiveGoalResponse.SerializeToString,
            ),
            'DeleteGoal': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteGoal,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.DeleteGoalRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.DeleteGoalResponse.SerializeToString,
            ),
            'GetExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.GetExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.GetExperimentResponse.SerializeToString,
            ),
            'ListExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExperiments,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.ListExperimentsRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.ListExperimentsResponse.SerializeToString,
            ),
            'CreateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.CreateExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.CreateExperimentResponse.SerializeToString,
            ),
            'UpdateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.UpdateExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.UpdateExperimentResponse.SerializeToString,
            ),
            'StartExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.StartExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.StartExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.StartExperimentResponse.SerializeToString,
            ),
            'FinishExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.FinishExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.FinishExperimentResponse.SerializeToString,
            ),
            'StopExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.StopExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.StopExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.StopExperimentResponse.SerializeToString,
            ),
            'ArchiveExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.ArchiveExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.ArchiveExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.ArchiveExperimentResponse.SerializeToString,
            ),
            'DeleteExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExperiment,
                    request_deserializer=proto_dot_experiment_dot_service__pb2.DeleteExperimentRequest.FromString,
                    response_serializer=proto_dot_experiment_dot_service__pb2.DeleteExperimentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bucketeer.experiment.ExperimentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetGoal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/GetGoal',
            proto_dot_experiment_dot_service__pb2.GetGoalRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.GetGoalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGoals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/ListGoals',
            proto_dot_experiment_dot_service__pb2.ListGoalsRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.ListGoalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateGoal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/CreateGoal',
            proto_dot_experiment_dot_service__pb2.CreateGoalRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.CreateGoalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateGoal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/UpdateGoal',
            proto_dot_experiment_dot_service__pb2.UpdateGoalRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.UpdateGoalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ArchiveGoal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/ArchiveGoal',
            proto_dot_experiment_dot_service__pb2.ArchiveGoalRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.ArchiveGoalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteGoal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/DeleteGoal',
            proto_dot_experiment_dot_service__pb2.DeleteGoalRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.DeleteGoalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/GetExperiment',
            proto_dot_experiment_dot_service__pb2.GetExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.GetExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/ListExperiments',
            proto_dot_experiment_dot_service__pb2.ListExperimentsRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.ListExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/CreateExperiment',
            proto_dot_experiment_dot_service__pb2.CreateExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.CreateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/UpdateExperiment',
            proto_dot_experiment_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.UpdateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/StartExperiment',
            proto_dot_experiment_dot_service__pb2.StartExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.StartExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/FinishExperiment',
            proto_dot_experiment_dot_service__pb2.FinishExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.FinishExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/StopExperiment',
            proto_dot_experiment_dot_service__pb2.StopExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.StopExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ArchiveExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/ArchiveExperiment',
            proto_dot_experiment_dot_service__pb2.ArchiveExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.ArchiveExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.experiment.ExperimentService/DeleteExperiment',
            proto_dot_experiment_dot_service__pb2.DeleteExperimentRequest.SerializeToString,
            proto_dot_experiment_dot_service__pb2.DeleteExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
