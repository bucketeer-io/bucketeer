// source: proto/autoops/command.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_autoops_auto_ops_rule_pb = require('../../proto/autoops/auto_ops_rule_pb.js');
goog.object.extend(proto, proto_autoops_auto_ops_rule_pb);
var proto_autoops_clause_pb = require('../../proto/autoops/clause_pb.js');
goog.object.extend(proto, proto_autoops_clause_pb);
goog.exportSymbol('proto.bucketeer.autoops.AddDatetimeClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.AddOpsEventRateClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.AddWebhookClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeDatetimeClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeWebhookClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeWebhookDescriptionCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ChangeWebhookNameCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.CreateAutoOpsRuleCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.CreateProgressiveRolloutCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.CreateWebhookCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.DeleteAutoOpsRuleCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.DeleteClauseCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.DeleteProgressiveRolloutCommand', null, global);
goog.exportSymbol('proto.bucketeer.autoops.DeleteWebhookCommand', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.autoops.CreateAutoOpsRuleCommand.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.autoops.CreateAutoOpsRuleCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.CreateAutoOpsRuleCommand.displayName = 'proto.bucketeer.autoops.CreateAutoOpsRuleCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.displayName = 'proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.DeleteAutoOpsRuleCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.displayName = 'proto.bucketeer.autoops.DeleteAutoOpsRuleCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.displayName = 'proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.AddOpsEventRateClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.AddOpsEventRateClauseCommand.displayName = 'proto.bucketeer.autoops.AddOpsEventRateClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.displayName = 'proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.DeleteClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.DeleteClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.DeleteClauseCommand.displayName = 'proto.bucketeer.autoops.DeleteClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.AddDatetimeClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.AddDatetimeClauseCommand.displayName = 'proto.bucketeer.autoops.AddDatetimeClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeDatetimeClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeDatetimeClauseCommand.displayName = 'proto.bucketeer.autoops.ChangeDatetimeClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.CreateWebhookCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.CreateWebhookCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.CreateWebhookCommand.displayName = 'proto.bucketeer.autoops.CreateWebhookCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeWebhookNameCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeWebhookNameCommand.displayName = 'proto.bucketeer.autoops.ChangeWebhookNameCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeWebhookDescriptionCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.displayName = 'proto.bucketeer.autoops.ChangeWebhookDescriptionCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.DeleteWebhookCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.DeleteWebhookCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.DeleteWebhookCommand.displayName = 'proto.bucketeer.autoops.DeleteWebhookCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.AddWebhookClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.AddWebhookClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.AddWebhookClauseCommand.displayName = 'proto.bucketeer.autoops.AddWebhookClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeWebhookClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeWebhookClauseCommand.displayName = 'proto.bucketeer.autoops.ChangeWebhookClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.CreateProgressiveRolloutCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.CreateProgressiveRolloutCommand.displayName = 'proto.bucketeer.autoops.CreateProgressiveRolloutCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.DeleteProgressiveRolloutCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.displayName = 'proto.bucketeer.autoops.DeleteProgressiveRolloutCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.displayName = 'proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.displayName = 'proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.displayName = 'proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.CreateAutoOpsRuleCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    opsType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    opsEventRateClausesList: jspb.Message.toObjectList(msg.getOpsEventRateClausesList(),
    proto_autoops_clause_pb.OpsEventRateClause.toObject, includeInstance),
    datetimeClausesList: jspb.Message.toObjectList(msg.getDatetimeClausesList(),
    proto_autoops_clause_pb.DatetimeClause.toObject, includeInstance),
    webhookClausesList: jspb.Message.toObjectList(msg.getWebhookClausesList(),
    proto_autoops_clause_pb.WebhookClause.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.CreateAutoOpsRuleCommand;
  return proto.bucketeer.autoops.CreateAutoOpsRuleCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureId(value);
      break;
    case 2:
      var value = /** @type {!proto.bucketeer.autoops.OpsType} */ (reader.readEnum());
      msg.setOpsType(value);
      break;
    case 3:
      var value = new proto_autoops_clause_pb.OpsEventRateClause;
      reader.readMessage(value,proto_autoops_clause_pb.OpsEventRateClause.deserializeBinaryFromReader);
      msg.addOpsEventRateClauses(value);
      break;
    case 4:
      var value = new proto_autoops_clause_pb.DatetimeClause;
      reader.readMessage(value,proto_autoops_clause_pb.DatetimeClause.deserializeBinaryFromReader);
      msg.addDatetimeClauses(value);
      break;
    case 5:
      var value = new proto_autoops_clause_pb.WebhookClause;
      reader.readMessage(value,proto_autoops_clause_pb.WebhookClause.deserializeBinaryFromReader);
      msg.addWebhookClauses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.CreateAutoOpsRuleCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpsType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getOpsEventRateClausesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto_autoops_clause_pb.OpsEventRateClause.serializeBinaryToWriter
    );
  }
  f = message.getDatetimeClausesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto_autoops_clause_pb.DatetimeClause.serializeBinaryToWriter
    );
  }
  f = message.getWebhookClausesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto_autoops_clause_pb.WebhookClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional string feature_id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.getFeatureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OpsType ops_type = 2;
 * @return {!proto.bucketeer.autoops.OpsType}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.getOpsType = function() {
  return /** @type {!proto.bucketeer.autoops.OpsType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bucketeer.autoops.OpsType} value
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.setOpsType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated OpsEventRateClause ops_event_rate_clauses = 3;
 * @return {!Array<!proto.bucketeer.autoops.OpsEventRateClause>}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.getOpsEventRateClausesList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.OpsEventRateClause>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_autoops_clause_pb.OpsEventRateClause, 3));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.OpsEventRateClause>} value
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
*/
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.setOpsEventRateClausesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.bucketeer.autoops.OpsEventRateClause=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.OpsEventRateClause}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.addOpsEventRateClauses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.bucketeer.autoops.OpsEventRateClause, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.clearOpsEventRateClausesList = function() {
  return this.setOpsEventRateClausesList([]);
};


/**
 * repeated DatetimeClause datetime_clauses = 4;
 * @return {!Array<!proto.bucketeer.autoops.DatetimeClause>}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.getDatetimeClausesList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.DatetimeClause>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_autoops_clause_pb.DatetimeClause, 4));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.DatetimeClause>} value
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
*/
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.setDatetimeClausesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.bucketeer.autoops.DatetimeClause=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.DatetimeClause}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.addDatetimeClauses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.bucketeer.autoops.DatetimeClause, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.clearDatetimeClausesList = function() {
  return this.setDatetimeClausesList([]);
};


/**
 * repeated WebhookClause webhook_clauses = 5;
 * @return {!Array<!proto.bucketeer.autoops.WebhookClause>}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.getWebhookClausesList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.WebhookClause>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_autoops_clause_pb.WebhookClause, 5));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.WebhookClause>} value
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
*/
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.setWebhookClausesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.bucketeer.autoops.WebhookClause=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.WebhookClause}
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.addWebhookClauses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.bucketeer.autoops.WebhookClause, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.CreateAutoOpsRuleCommand} returns this
 */
proto.bucketeer.autoops.CreateAutoOpsRuleCommand.prototype.clearWebhookClausesList = function() {
  return this.setWebhookClausesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    opsType: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand;
  return proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.bucketeer.autoops.OpsType} */ (reader.readEnum());
      msg.setOpsType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpsType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional OpsType ops_type = 1;
 * @return {!proto.bucketeer.autoops.OpsType}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.prototype.getOpsType = function() {
  return /** @type {!proto.bucketeer.autoops.OpsType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.bucketeer.autoops.OpsType} value
 * @return {!proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand} returns this
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleOpsTypeCommand.prototype.setOpsType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.DeleteAutoOpsRuleCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.DeleteAutoOpsRuleCommand}
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.DeleteAutoOpsRuleCommand;
  return proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.DeleteAutoOpsRuleCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.DeleteAutoOpsRuleCommand}
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.DeleteAutoOpsRuleCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteAutoOpsRuleCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand;
  return proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeAutoOpsRuleTriggeredAtCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.AddOpsEventRateClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    opsEventRateClause: (f = msg.getOpsEventRateClause()) && proto_autoops_clause_pb.OpsEventRateClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.AddOpsEventRateClauseCommand;
  return proto.bucketeer.autoops.AddOpsEventRateClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_autoops_clause_pb.OpsEventRateClause;
      reader.readMessage(value,proto_autoops_clause_pb.OpsEventRateClause.deserializeBinaryFromReader);
      msg.setOpsEventRateClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.AddOpsEventRateClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpsEventRateClause();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_autoops_clause_pb.OpsEventRateClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional OpsEventRateClause ops_event_rate_clause = 1;
 * @return {?proto.bucketeer.autoops.OpsEventRateClause}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.getOpsEventRateClause = function() {
  return /** @type{?proto.bucketeer.autoops.OpsEventRateClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.OpsEventRateClause, 1));
};


/**
 * @param {?proto.bucketeer.autoops.OpsEventRateClause|undefined} value
 * @return {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand} returns this
*/
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.setOpsEventRateClause = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.AddOpsEventRateClauseCommand} returns this
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.clearOpsEventRateClause = function() {
  return this.setOpsEventRateClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.AddOpsEventRateClauseCommand.prototype.hasOpsEventRateClause = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    opsEventRateClause: (f = msg.getOpsEventRateClause()) && proto_autoops_clause_pb.OpsEventRateClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand;
  return proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto_autoops_clause_pb.OpsEventRateClause;
      reader.readMessage(value,proto_autoops_clause_pb.OpsEventRateClause.deserializeBinaryFromReader);
      msg.setOpsEventRateClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOpsEventRateClause();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_autoops_clause_pb.OpsEventRateClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OpsEventRateClause ops_event_rate_clause = 2;
 * @return {?proto.bucketeer.autoops.OpsEventRateClause}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.getOpsEventRateClause = function() {
  return /** @type{?proto.bucketeer.autoops.OpsEventRateClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.OpsEventRateClause, 2));
};


/**
 * @param {?proto.bucketeer.autoops.OpsEventRateClause|undefined} value
 * @return {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} returns this
*/
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.setOpsEventRateClause = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.clearOpsEventRateClause = function() {
  return this.setOpsEventRateClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.ChangeOpsEventRateClauseCommand.prototype.hasOpsEventRateClause = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.DeleteClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.DeleteClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.DeleteClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.DeleteClauseCommand}
 */
proto.bucketeer.autoops.DeleteClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.DeleteClauseCommand;
  return proto.bucketeer.autoops.DeleteClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.DeleteClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.DeleteClauseCommand}
 */
proto.bucketeer.autoops.DeleteClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.DeleteClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.DeleteClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.DeleteClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.DeleteClauseCommand.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.DeleteClauseCommand} returns this
 */
proto.bucketeer.autoops.DeleteClauseCommand.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.AddDatetimeClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.AddDatetimeClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    datetimeClause: (f = msg.getDatetimeClause()) && proto_autoops_clause_pb.DatetimeClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.AddDatetimeClauseCommand}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.AddDatetimeClauseCommand;
  return proto.bucketeer.autoops.AddDatetimeClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.AddDatetimeClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.AddDatetimeClauseCommand}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_autoops_clause_pb.DatetimeClause;
      reader.readMessage(value,proto_autoops_clause_pb.DatetimeClause.deserializeBinaryFromReader);
      msg.setDatetimeClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.AddDatetimeClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.AddDatetimeClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatetimeClause();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_autoops_clause_pb.DatetimeClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatetimeClause datetime_clause = 1;
 * @return {?proto.bucketeer.autoops.DatetimeClause}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.getDatetimeClause = function() {
  return /** @type{?proto.bucketeer.autoops.DatetimeClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.DatetimeClause, 1));
};


/**
 * @param {?proto.bucketeer.autoops.DatetimeClause|undefined} value
 * @return {!proto.bucketeer.autoops.AddDatetimeClauseCommand} returns this
*/
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.setDatetimeClause = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.AddDatetimeClauseCommand} returns this
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.clearDatetimeClause = function() {
  return this.setDatetimeClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.AddDatetimeClauseCommand.prototype.hasDatetimeClause = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeDatetimeClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datetimeClause: (f = msg.getDatetimeClause()) && proto_autoops_clause_pb.DatetimeClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeDatetimeClauseCommand;
  return proto.bucketeer.autoops.ChangeDatetimeClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto_autoops_clause_pb.DatetimeClause;
      reader.readMessage(value,proto_autoops_clause_pb.DatetimeClause.deserializeBinaryFromReader);
      msg.setDatetimeClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeDatetimeClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatetimeClause();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_autoops_clause_pb.DatetimeClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DatetimeClause datetime_clause = 2;
 * @return {?proto.bucketeer.autoops.DatetimeClause}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.getDatetimeClause = function() {
  return /** @type{?proto.bucketeer.autoops.DatetimeClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.DatetimeClause, 2));
};


/**
 * @param {?proto.bucketeer.autoops.DatetimeClause|undefined} value
 * @return {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} returns this
*/
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.setDatetimeClause = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.ChangeDatetimeClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.clearDatetimeClause = function() {
  return this.setDatetimeClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.ChangeDatetimeClauseCommand.prototype.hasDatetimeClause = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.CreateWebhookCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.CreateWebhookCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateWebhookCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.CreateWebhookCommand}
 */
proto.bucketeer.autoops.CreateWebhookCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.CreateWebhookCommand;
  return proto.bucketeer.autoops.CreateWebhookCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.CreateWebhookCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.CreateWebhookCommand}
 */
proto.bucketeer.autoops.CreateWebhookCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.CreateWebhookCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.CreateWebhookCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateWebhookCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.CreateWebhookCommand} returns this
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.CreateWebhookCommand} returns this
 */
proto.bucketeer.autoops.CreateWebhookCommand.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeWebhookNameCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeWebhookNameCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeWebhookNameCommand}
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeWebhookNameCommand;
  return proto.bucketeer.autoops.ChangeWebhookNameCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeWebhookNameCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeWebhookNameCommand}
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeWebhookNameCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeWebhookNameCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeWebhookNameCommand} returns this
 */
proto.bucketeer.autoops.ChangeWebhookNameCommand.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand}
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeWebhookDescriptionCommand;
  return proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand}
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string description = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeWebhookDescriptionCommand} returns this
 */
proto.bucketeer.autoops.ChangeWebhookDescriptionCommand.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.DeleteWebhookCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.DeleteWebhookCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.DeleteWebhookCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteWebhookCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.DeleteWebhookCommand}
 */
proto.bucketeer.autoops.DeleteWebhookCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.DeleteWebhookCommand;
  return proto.bucketeer.autoops.DeleteWebhookCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.DeleteWebhookCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.DeleteWebhookCommand}
 */
proto.bucketeer.autoops.DeleteWebhookCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.DeleteWebhookCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.DeleteWebhookCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.DeleteWebhookCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteWebhookCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.AddWebhookClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.AddWebhookClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhookClause: (f = msg.getWebhookClause()) && proto_autoops_clause_pb.WebhookClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.AddWebhookClauseCommand}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.AddWebhookClauseCommand;
  return proto.bucketeer.autoops.AddWebhookClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.AddWebhookClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.AddWebhookClauseCommand}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_autoops_clause_pb.WebhookClause;
      reader.readMessage(value,proto_autoops_clause_pb.WebhookClause.deserializeBinaryFromReader);
      msg.setWebhookClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.AddWebhookClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.AddWebhookClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhookClause();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_autoops_clause_pb.WebhookClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional WebhookClause webhook_clause = 1;
 * @return {?proto.bucketeer.autoops.WebhookClause}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.getWebhookClause = function() {
  return /** @type{?proto.bucketeer.autoops.WebhookClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.WebhookClause, 1));
};


/**
 * @param {?proto.bucketeer.autoops.WebhookClause|undefined} value
 * @return {!proto.bucketeer.autoops.AddWebhookClauseCommand} returns this
*/
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.setWebhookClause = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.AddWebhookClauseCommand} returns this
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.clearWebhookClause = function() {
  return this.setWebhookClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.AddWebhookClauseCommand.prototype.hasWebhookClause = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeWebhookClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    webhookClause: (f = msg.getWebhookClause()) && proto_autoops_clause_pb.WebhookClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeWebhookClauseCommand}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeWebhookClauseCommand;
  return proto.bucketeer.autoops.ChangeWebhookClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeWebhookClauseCommand}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto_autoops_clause_pb.WebhookClause;
      reader.readMessage(value,proto_autoops_clause_pb.WebhookClause.deserializeBinaryFromReader);
      msg.setWebhookClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeWebhookClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWebhookClause();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_autoops_clause_pb.WebhookClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional WebhookClause webhook_clause = 2;
 * @return {?proto.bucketeer.autoops.WebhookClause}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.getWebhookClause = function() {
  return /** @type{?proto.bucketeer.autoops.WebhookClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.WebhookClause, 2));
};


/**
 * @param {?proto.bucketeer.autoops.WebhookClause|undefined} value
 * @return {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} returns this
*/
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.setWebhookClause = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.ChangeWebhookClauseCommand} returns this
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.clearWebhookClause = function() {
  return this.setWebhookClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.ChangeWebhookClauseCommand.prototype.hasWebhookClause = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.CreateProgressiveRolloutCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    progressiveRolloutManualScheduleClause: (f = msg.getProgressiveRolloutManualScheduleClause()) && proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.toObject(includeInstance, f),
    progressiveRolloutTemplateScheduleClause: (f = msg.getProgressiveRolloutTemplateScheduleClause()) && proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.CreateProgressiveRolloutCommand;
  return proto.bucketeer.autoops.CreateProgressiveRolloutCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureId(value);
      break;
    case 2:
      var value = new proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause;
      reader.readMessage(value,proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.deserializeBinaryFromReader);
      msg.setProgressiveRolloutManualScheduleClause(value);
      break;
    case 3:
      var value = new proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause;
      reader.readMessage(value,proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.deserializeBinaryFromReader);
      msg.setProgressiveRolloutTemplateScheduleClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.CreateProgressiveRolloutCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProgressiveRolloutManualScheduleClause();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.serializeBinaryToWriter
    );
  }
  f = message.getProgressiveRolloutTemplateScheduleClause();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional string feature_id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.getFeatureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} returns this
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ProgressiveRolloutManualScheduleClause progressive_rollout_manual_schedule_clause = 2;
 * @return {?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.getProgressiveRolloutManualScheduleClause = function() {
  return /** @type{?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause, 2));
};


/**
 * @param {?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause|undefined} value
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} returns this
*/
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.setProgressiveRolloutManualScheduleClause = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} returns this
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.clearProgressiveRolloutManualScheduleClause = function() {
  return this.setProgressiveRolloutManualScheduleClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.hasProgressiveRolloutManualScheduleClause = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ProgressiveRolloutTemplateScheduleClause progressive_rollout_template_schedule_clause = 3;
 * @return {?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.getProgressiveRolloutTemplateScheduleClause = function() {
  return /** @type{?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause, 3));
};


/**
 * @param {?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause|undefined} value
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} returns this
*/
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.setProgressiveRolloutTemplateScheduleClause = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.CreateProgressiveRolloutCommand} returns this
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.clearProgressiveRolloutTemplateScheduleClause = function() {
  return this.setProgressiveRolloutTemplateScheduleClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.CreateProgressiveRolloutCommand.prototype.hasProgressiveRolloutTemplateScheduleClause = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.DeleteProgressiveRolloutCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.DeleteProgressiveRolloutCommand}
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.DeleteProgressiveRolloutCommand;
  return proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.DeleteProgressiveRolloutCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.DeleteProgressiveRolloutCommand}
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.DeleteProgressiveRolloutCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DeleteProgressiveRolloutCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    clause: (f = msg.getClause()) && proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand;
  return proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause;
      reader.readMessage(value,proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.deserializeBinaryFromReader);
      msg.setClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClause();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProgressiveRolloutManualScheduleClause clause = 1;
 * @return {?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.getClause = function() {
  return /** @type{?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.ProgressiveRolloutManualScheduleClause, 1));
};


/**
 * @param {?proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause|undefined} value
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand} returns this
*/
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.setClause = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand} returns this
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.clearClause = function() {
  return this.setClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.AddProgressiveRolloutManualScheduleClauseCommand.prototype.hasClause = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    clause: (f = msg.getClause()) && proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand;
  return proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause;
      reader.readMessage(value,proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.deserializeBinaryFromReader);
      msg.setClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClause();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProgressiveRolloutTemplateScheduleClause clause = 1;
 * @return {?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.getClause = function() {
  return /** @type{?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} */ (
    jspb.Message.getWrapperField(this, proto_autoops_clause_pb.ProgressiveRolloutTemplateScheduleClause, 1));
};


/**
 * @param {?proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause|undefined} value
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand} returns this
*/
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.setClause = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand} returns this
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.clearClause = function() {
  return this.setClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.AddProgressiveRolloutTemplateScheduleClauseCommand.prototype.hasClause = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand}
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand;
  return proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand}
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schedule_id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.prototype.getScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand} returns this
 */
proto.bucketeer.autoops.ChangeProgressiveRolloutScheduleTriggeredAtCommand.prototype.setScheduleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.bucketeer.autoops);
