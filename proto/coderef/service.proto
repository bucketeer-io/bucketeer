// Copyright 2025 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package bucketeer.coderef;
option go_package = "github.com/bucketeer-io/bucketeer/proto/coderef";

import "proto/coderef/code_reference.proto";

message GetCodeReferenceRequest {
  string id = 1;
  string environment_id = 2;
}

message GetCodeReferenceResponse {
  CodeReference code_reference = 1;
}

message ListCodeReferencesRequest {
  enum OrderBy {
    DEFAULT = 0;
    CREATED_AT = 1;
    UPDATED_AT = 2;
  }
  enum OrderDirection {
    ASC = 0;
    DESC = 1;
  }
  string environment_id = 1;
  string feature_id = 2;
  string repository_name = 3;
  string repository_owner = 4;
  CodeReference.RepositoryType repository_type = 5;
  string repository_branch = 6;
  string cursor = 7;
  int64 page_size = 8;
  OrderBy order_by = 9;
  OrderDirection order_direction = 10;
}

message ListCodeReferencesResponse {
  repeated CodeReference code_references = 1;
  string cursor = 2;
  int64 total_count = 3;
}

message CreateCodeReferenceRequest {
  string feature_id = 1;
  string environment_id = 2;
  string file_path = 3;
  int32 line_number = 4;
  string code_snippet = 5;
  string content_hash = 6;
  repeated string aliases = 7;
  string repository_name = 8;
  string repository_owner = 9;
  CodeReference.RepositoryType repository_type = 10;
  string repository_branch = 11;
  string commit_hash = 12;
}

message CreateCodeReferenceResponse {
  CodeReference code_reference = 1;
}

message UpdateCodeReferenceRequest {
  string id = 1;
  string environment_id = 2;
  string file_path = 3;
  int32 line_number = 4;
  string code_snippet = 5;
  string content_hash = 6;
  repeated string aliases = 7;
  string repository_name = 8;
  string repository_owner = 9;
  CodeReference.RepositoryType repository_type = 10;
  string repository_branch = 11;
  string commit_hash = 12;
}

message UpdateCodeReferenceResponse {
  CodeReference code_reference = 1;
}

message DeleteCodeReferenceRequest {
  string id = 1;
  string environment_id = 2;
}

message DeleteCodeReferenceResponse {}

service CodeReferenceService {
  rpc GetCodeReference(GetCodeReferenceRequest)
      returns (GetCodeReferenceResponse) {}
  rpc ListCodeReferences(ListCodeReferencesRequest)
      returns (ListCodeReferencesResponse) {}
  rpc CreateCodeReference(CreateCodeReferenceRequest)
      returns (CreateCodeReferenceResponse) {}
  rpc UpdateCodeReference(UpdateCodeReferenceRequest)
      returns (UpdateCodeReferenceResponse) {}
  rpc DeleteCodeReference(DeleteCodeReferenceRequest)
      returns (DeleteCodeReferenceResponse) {}
}