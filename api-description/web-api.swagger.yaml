swagger: "2.0"
info:
  title: Bucketeer Web Service
  version: "1.0"
tags:
  - name: Authentication
host: ENDPOINT
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/account/change_api_key_name:
    post:
      summary: Change API Key Name
      description: Change the API Key Name. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.change_api_key_name
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountChangeAPIKeyNameResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountChangeAPIKeyNameRequest'
      tags:
        - API Key
  /v1/account/create_account:
    post:
      summary: Create
      description: Create an account to have access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.create_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateAccountV2Request'
      tags:
        - Account
  /v1/account/create_api_key:
    post:
      summary: Create
      description: Create an API key to be used on the client SDK. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.create_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateAPIKeyRequest'
      tags:
        - API Key
  /v1/account/create_search_filter:
    post:
      summary: Create Search Filter
      description: Create a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.create_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateSearchFilterRequest'
      tags:
        - Account
  /v1/account/delete_account:
    post:
      summary: Delete
      description: Delete an account. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.delete_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDeleteAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDeleteAccountV2Request'
      tags:
        - Account
  /v1/account/delete_search_filter:
    post:
      summary: Delete Search Filter
      description: Delete a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.delete_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDeleteSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDeleteSearchFilterRequest'
      tags:
        - Account
  /v1/account/disable_account:
    post:
      summary: Disable
      description: Disable an account to block access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.disable_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDisableAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDisableAccountV2Request'
      tags:
        - Account
  /v1/account/disable_api_key:
    post:
      summary: Disable
      description: Disable an API Key. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.disable_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDisableAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDisableAPIKeyRequest'
      tags:
        - API Key
  /v1/account/enable_account:
    post:
      summary: Enable
      description: Enable an account to have access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.enable_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountEnableAccountV2Response'
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountEnableAccountV2Request'
      tags:
        - Account
  /v1/account/enable_api_key:
    post:
      summary: Enable
      description: Enable an API Key. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.enable_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountEnableAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountEnableAPIKeyRequest'
      tags:
        - API Key
  /v1/account/get_account:
    get:
      summary: Get
      description: Get an account.
      operationId: web.v1.account.get_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: email
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/account/get_account_by_environment:
    get:
      summary: Get Account By Environment
      description: Get an account by environment.
      operationId: web.v1.account.get_account_by_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAccountV2ByEnvironmentIDResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: email
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/account/get_api_key:
    get:
      summary: Get
      description: Get an API Key.
      operationId: web.v1.account.get_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - API Key
  /v1/account/get_environment_api_key:
    get:
      summary: Get Environment API Key
      description: Get an environment API Key.
      operationId: web.v1.account.get_environment_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetEnvironmentAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: apiKey
          in: query
          required: false
          type: string
      tags:
        - API Key
  /v1/account/get_me:
    get:
      summary: Get Me
      description: Get the user console account.
      operationId: web.v1.account.get_me
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMeResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/account/list_accounts:
    get:
      summary: List
      description: List accounts.
      operationId: web.v1.account.list_accounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountListAccountsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - EMAIL
            - CREATED_AT
            - UPDATED_AT
            - ORGANIZATION_ROLE
            - ENVIRONMENT_COUNT
            - LAST_SEEN
            - STATE
            - TAGS
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: organizationRole
          in: query
          required: false
          type: integer
          format: int32
        - name: environmentId
          in: query
          required: false
          type: string
        - name: environmentRole
          in: query
          required: false
          type: integer
          format: int32
        - name: tags
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Account
  /v1/account/list_api_keys:
    get:
      summary: List
      description: List API Keys.
      operationId: web.v1.account.list_api_keys
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountListAPIKeysResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - ROLE
            - ENVIRONMENT
            - STATE
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: environmentId
          in: query
          required: false
          type: string
        - name: environmentIds
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: organizationId
          in: query
          required: true
          type: string
      tags:
        - API Key
  /v1/account/my_organizations:
    get:
      summary: Get My Organizations
      description: Get all the organizations for a specific user.
      operationId: web.v1.account.my_organizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - Account
  /v1/account/my_organizations_by_email:
    get:
      summary: Get My Organizations By Email
      description: Get all the organizations by email.
      operationId: web.v1.account.my_organizations_by_email
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: email
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/account/update_account:
    post:
      summary: Update
      description: Update an account. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.update_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountUpdateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountUpdateAccountV2Request'
      tags:
        - Account
  /v1/account/update_api_key:
    patch:
      summary: Update API Key
      description: Update an API Key. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.update_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountUpdateAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountUpdateAPIKeyRequest'
      tags:
        - API Key
  /v1/account/update_search_filter:
    post:
      summary: Update Search Filter
      description: Update a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.update_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountUpdateSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountUpdateSearchFilterRequest'
      tags:
        - Account
  /v1/auth/authentication_url:
    post:
      summary: Get Authentication URL
      description: |-
        The OAuth credentials must be configured on the server to call this API. It will return the Authentication URL.
        Currently, we only support Google.
      operationId: web.v1.auth.authentication_url
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authGetAuthenticationURLResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authGetAuthenticationURLRequest'
      tags:
        - Authentication
  /v1/auth/exchange_token:
    post:
      summary: Exchange Token
      description: |-
        Exchange the token from the OAuth provider to the Bucketeer token.
        Currently, we only support Google.
      operationId: web.v1.auth.exchange_token
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authExchangeTokenResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authExchangeTokenRequest'
      tags:
        - Authentication
  /v1/auth/refresh_token:
    post:
      summary: Refresh Token
      description: Refresh the Bucketeer token maintained by the web console.
      operationId: web.v1.auth.refresh_token
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authRefreshTokenResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authRefreshTokenRequest'
      tags:
        - Authentication
  /v1/auth/signin:
    post:
      summary: Sign In
      description: Sign in on the web console using an email and password.
      operationId: web.v1.auth.signin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authSignInResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authSignInRequest'
      tags:
        - Authentication
  /v1/environment/archive_environment:
    post:
      summary: Archive
      description: Archive an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.archive_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentArchiveEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentArchiveEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/archive_organization:
    post:
      summary: Archive
      description: Archive an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.archive_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentArchiveOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentArchiveOrganizationRequest'
      tags:
        - Organization
  /v1/environment/convert_trial_organization:
    post:
      summary: Convert Trial
      description: Convert a trial organization to a paid one. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.convert_trial_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentConvertTrialOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentConvertTrialOrganizationRequest'
      tags:
        - Organization
  /v1/environment/convert_trial_project:
    post:
      summary: Convert Trial
      description: Convert a trial project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.convert_trial_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentConvertTrialProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentConvertTrialProjectRequest'
      tags:
        - Project
  /v1/environment/create_environment:
    post:
      summary: Create
      description: Create an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/create_organization:
    post:
      summary: Create
      description: Create an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateOrganizationRequest'
      tags:
        - Organization
  /v1/environment/create_project:
    post:
      summary: Create
      description: Create a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateProjectRequest'
      tags:
        - Project
  /v1/environment/create_trial_project:
    post:
      summary: Create Trial
      description: Create a trial project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_trial_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateTrialProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateTrialProjectRequest'
      tags:
        - Project
  /v1/environment/disable_organization:
    post:
      summary: Disable
      description: Disable an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.disable_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentDisableOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentDisableOrganizationRequest'
      tags:
        - Organization
  /v1/environment/disable_project:
    post:
      summary: Disable
      description: Disable a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.disable_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentDisableProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentDisableProjectRequest'
      tags:
        - Project
  /v1/environment/enable_organization:
    post:
      summary: Enable
      description: Enable an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.enable_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentEnableOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentEnableOrganizationRequest'
      tags:
        - Organization
  /v1/environment/enable_project:
    post:
      summary: Enable
      description: Enable a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.enable_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentEnableProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentEnableProjectRequest'
      tags:
        - Project
  /v1/environment/get_environment:
    get:
      summary: Get
      description: Get an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.get_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Environment
  /v1/environment/get_organization:
    get:
      summary: Get
      description: Get an organization. To call this API, you need at least a MEMBER role.
      operationId: web.v1.environment.get_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Organization
  /v1/environment/get_project:
    get:
      summary: Get
      description: Get a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.get_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Project
  /v1/environment/list_environments:
    get:
      summary: List
      description: List environments. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_environments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListEnvironmentsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - ID
            - NAME
            - URL_CODE
            - CREATED_AT
            - UPDATED_AT
            - FEATURE_COUNT
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: projectId
          in: query
          required: false
          type: string
        - name: archived
          in: query
          required: false
          type: boolean
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Environment
  /v1/environment/list_organizations:
    get:
      summary: List
      description: List organizations. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_organizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - ID
            - CREATED_AT
            - UPDATED_AT
            - NAME
            - URL_CODE
            - PROJECT_COUNT
            - ENVIRONMENT_COUNT
            - USER_COUNT
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: archived
          in: query
          required: false
          type: boolean
      tags:
        - Organization
  /v1/environment/list_projects:
    get:
      summary: List
      description: List projects. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_projects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListProjectsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - ID
            - CREATED_AT
            - UPDATED_AT
            - NAME
            - URL_CODE
            - ENVIRONMENT_COUNT
            - FEATURE_COUNT
            - CREATOR_EMAIL
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: organizationIds
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Project
  /v1/environment/list_projects_v2:
    get:
      summary: List Projects V2
      description: List projects with V2 API. To call this API, you need at least a MEMBER role in the specified organizations.
      operationId: web.v1.environment.list_projects_v2
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListProjectsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - ID
            - CREATED_AT
            - UPDATED_AT
            - NAME
            - URL_CODE
            - ENVIRONMENT_COUNT
            - FEATURE_COUNT
            - CREATOR_EMAIL
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: organizationIds
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Project
  /v1/environment/unarchive_environment:
    post:
      summary: Unarchive
      description: Unarchive an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.unarchive_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUnarchiveEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUnarchiveEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/unarchive_organization:
    post:
      summary: Unarchive
      description: Unarchive an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.unarchive_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUnarchiveOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUnarchiveOrganizationRequest'
      tags:
        - Organization
  /v1/environment/update_environment:
    post:
      summary: Update
      description: Update an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.update_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/update_organization:
    post:
      summary: Update
      description: Update an organization. To call this API, you need an `ADMIN` role.
      operationId: web.v1.environment.update_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateOrganizationRequest'
      tags:
        - Organization
  /v1/environment/update_project:
    post:
      summary: Update
      description: Update a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.update_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateProjectRequest'
      tags:
        - Project
  /v1/experiment:
    get:
      summary: Get
      description: Get an experiment.
      operationId: web.v1.experiment.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentGetExperimentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - experiment
    post:
      summary: Create
      description: Create an experiment.
      operationId: web.v1.experiment.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentCreateExperimentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/experimentCreateExperimentRequest'
      tags:
        - experiment
  /v1/experiments:
    get:
      summary: List
      description: List experiments.
      operationId: web.v1.experiment.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentListExperimentsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: featureId
          in: query
          required: false
          type: string
        - name: featureVersion
          in: query
          required: false
          type: integer
          format: int32
        - name: from
          in: query
          required: false
          type: string
          format: int64
        - name: to
          in: query
          required: false
          type: string
          format: int64
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: status
          description: '[deprecated = true];'
          in: query
          required: false
          type: integer
          format: int32
        - name: maintainer
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: archived
          in: query
          required: false
          type: boolean
        - name: statuses
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - WAITING
              - RUNNING
              - STOPPED
              - FORCE_STOPPED
          collectionFormat: multi
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - experiment
  /v1/goal:
    get:
      summary: Get
      description: Get a goal.
      operationId: web.v1.goal.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentGetGoalResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - goal
    post:
      summary: Create
      description: Create a goal.
      operationId: web.v1.goal.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentCreateGoalResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/experimentCreateGoalRequest'
      tags:
        - goal
    patch:
      summary: Update
      description: Update a goal.
      operationId: web.v1.goal.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentUpdateGoalResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/experimentUpdateGoalRequest'
      tags:
        - goal
  /v1/goals:
    get:
      summary: List
      description: List goals.
      operationId: web.v1.goals.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/experimentListGoalsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - CONNECTION_TYPE
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: isInUseStatus
          in: query
          required: false
          type: boolean
        - name: archived
          in: query
          required: false
          type: boolean
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - goal
  /v1/push:
    get:
      summary: Get
      description: Get a push.
      operationId: web.v1.push.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pushGetPushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: environmentId
          in: query
          required: true
          type: string
        - name: id
          in: query
          required: true
          type: string
      tags:
        - push
    post:
      summary: Create
      description: Create a push.
      operationId: web.v1.push.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pushCreatePushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pushCreatePushRequest'
      tags:
        - push
    patch:
      summary: Update
      description: Update a push.
      operationId: web.v1.push.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pushUpdatePushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/pushUpdatePushRequest'
      tags:
        - push
  /v1/pushes:
    get:
      summary: List
      description: List pushes.
      operationId: web.v1.push.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/pushListPushesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - ENVIRONMENT
            - STATE
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
      tags:
        - push
  /v1/segment:
    get:
      summary: Get
      description: Get a segment.
      operationId: web.v1.segment.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureGetSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - segment
    delete:
      summary: Delete
      description: Delete a segment.
      operationId: web.v1.segment.delete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureDeleteSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - segment
    post:
      summary: Create
      description: Create a segment.
      operationId: web.v1.segment.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureCreateSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/featureCreateSegmentRequest'
      tags:
        - segment
    patch:
      summary: Update
      description: Update a segment.
      operationId: web.v1.segment.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureUpdateSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/featureUpdateSegmentRequest'
      tags:
        - segment
  /v1/segment_users/bulk_download:
    get:
      summary: Bulk download
      description: Bulk download segment users.
      operationId: web.v1.segment_users.bulk_download
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureBulkDownloadSegmentUsersResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: segmentId
          in: query
          required: true
          type: string
        - name: state
          in: query
          required: false
          type: string
          enum:
            - INCLUDED
            - EXCLUDED
          default: INCLUDED
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - segment
  /v1/segment_users/bulk_upload:
    post:
      summary: Bulk upload
      description: Bulk upload segment users.
      operationId: web.v1.segment_users.bulk_upload
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureBulkUploadSegmentUsersResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/featureBulkUploadSegmentUsersRequest'
      tags:
        - segment
  /v1/segments:
    get:
      summary: List
      description: List segments.
      operationId: web.v1.segment.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureListSegmentsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - CONNECTIONS
            - USERS
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: integer
          format: int32
        - name: isInUseStatus
          in: query
          required: false
          type: boolean
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - segment
  /v1/subscription:
    get:
      summary: Get
      description: Get subscription.
      operationId: web.v1.subscription.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/notificationGetSubscriptionResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - subscription
    post:
      summary: Create
      description: Create subscription.
      operationId: web.v1.subscription.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/notificationCreateSubscriptionResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/notificationCreateSubscriptionRequest'
      tags:
        - subscription
    patch:
      summary: Update
      description: Update subscription.
      operationId: web.v1.subscription.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/notificationUpdateSubscriptionResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/notificationUpdateSubscriptionRequest'
      tags:
        - subscription
  /v1/subscriptions:
    get:
      summary: List
      description: List subscriptions.
      operationId: web.v1.subscription.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/notificationListSubscriptionsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: sourceTypes
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - DOMAIN_EVENT_FEATURE
              - DOMAIN_EVENT_GOAL
              - DOMAIN_EVENT_EXPERIMENT
              - DOMAIN_EVENT_ACCOUNT
              - DOMAIN_EVENT_APIKEY
              - DOMAIN_EVENT_SEGMENT
              - DOMAIN_EVENT_ENVIRONMENT
              - DOMAIN_EVENT_ADMIN_ACCOUNT
              - DOMAIN_EVENT_AUTOOPS_RULE
              - DOMAIN_EVENT_PUSH
              - DOMAIN_EVENT_SUBSCRIPTION
              - DOMAIN_EVENT_ADMIN_SUBSCRIPTION
              - DOMAIN_EVENT_PROJECT
              - DOMAIN_EVENT_WEBHOOK
              - DOMAIN_EVENT_PROGRESSIVE_ROLLOUT
              - DOMAIN_EVENT_ORGANIZATION
              - DOMAIN_EVENT_FLAG_TRIGGER
              - DOMAIN_EVENT_TAG
              - FEATURE_STALE
              - EXPERIMENT_RUNNING
              - MAU_COUNT
          collectionFormat: multi
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - ENVIRONMENT
            - STATE
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: environmentId
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: true
          type: string
      tags:
        - subscription
  /v1/tag:
    delete:
      summary: Delete
      description: Delete a tag.
      operationId: web.v1.tag.delete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tagDeleteTagResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: environmentId
          in: query
          required: true
          type: string
      tags:
        - tag
    post:
      summary: Create
      description: Create a tag.
      operationId: web.v1.tag.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/tagCreateTagResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/tagCreateTagRequest'
      tags:
        - tag
  /v1/tags:
    get:
      summary: List
      description: List tags.
      operationId: web.v1.tag.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeertagListTagsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - ENTITY_TYPE
            - ENVIRONMENT
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - tag
  /webhook/triggers/{token}:
    post:
      operationId: FeatureService_FlagTriggerWebhook
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/featureFlagTriggerWebhookResponse'
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: token
          in: path
          required: true
          type: string
definitions:
  AccountV2RoleOrganization:
    type: string
    enum:
      - Organization_UNASSIGNED
      - Organization_MEMBER
      - Organization_ADMIN
      - Organization_OWNER
    default: Organization_UNASSIGNED
  ChangeAccountV2EnvironmentRolesCommandWriteType:
    type: string
    enum:
      - WriteType_UNSPECIFIED
      - WriteType_OVERRIDE
      - WriteType_PATCH
    default: WriteType_UNSPECIFIED
  ExperimentGoalReference:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  FeatureVariationType:
    type: string
    enum:
      - STRING
      - BOOLEAN
      - NUMBER
      - JSON
    default: STRING
  FlagTriggerAction:
    type: string
    enum:
      - Action_UNKNOWN
      - Action_ON
      - Action_OFF
    default: Action_UNKNOWN
  GoalConnectionType:
    type: string
    enum:
      - UNKNOWN
      - EXPERIMENT
      - OPERATION
    default: UNKNOWN
  ListFlagTriggersResponseFlagTriggerWithUrl:
    type: object
    properties:
      flagTrigger:
        $ref: '#/definitions/featureFlagTrigger'
      url:
        type: string
  RecipientLanguage:
    type: string
    enum:
      - ENGLISH
      - JAPANESE
    default: ENGLISH
  RoleEnvironment:
    type: string
    enum:
      - Environment_UNASSIGNED
      - Environment_VIEWER
      - Environment_EDITOR
    default: Environment_UNASSIGNED
  SubscriptionSourceType:
    type: string
    enum:
      - DOMAIN_EVENT_FEATURE
      - DOMAIN_EVENT_GOAL
      - DOMAIN_EVENT_EXPERIMENT
      - DOMAIN_EVENT_ACCOUNT
      - DOMAIN_EVENT_APIKEY
      - DOMAIN_EVENT_SEGMENT
      - DOMAIN_EVENT_ENVIRONMENT
      - DOMAIN_EVENT_ADMIN_ACCOUNT
      - DOMAIN_EVENT_AUTOOPS_RULE
      - DOMAIN_EVENT_PUSH
      - DOMAIN_EVENT_SUBSCRIPTION
      - DOMAIN_EVENT_ADMIN_SUBSCRIPTION
      - DOMAIN_EVENT_PROJECT
      - DOMAIN_EVENT_WEBHOOK
      - DOMAIN_EVENT_PROGRESSIVE_ROLLOUT
      - DOMAIN_EVENT_ORGANIZATION
      - DOMAIN_EVENT_FLAG_TRIGGER
      - DOMAIN_EVENT_TAG
      - FEATURE_STALE
      - EXPERIMENT_RUNNING
      - MAU_COUNT
    default: DOMAIN_EVENT_FEATURE
  TagEntityType:
    type: string
    enum:
      - UNKNOWN
      - FEATURE_FLAG
      - ACCOUNT
    default: UNKNOWN
  UpdateAccountV2RequestAccountV2Avatar:
    type: object
    properties:
      avatarImage:
        type: string
        format: byte
      avatarFileType:
        type: string
  UpdateAccountV2RequestOrganizationRoleValue:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccountV2RoleOrganization'
  UpdateFeatureTargetingRequestFrom:
    type: string
    enum:
      - UNKNOWN
      - USER
      - OPS
    default: UNKNOWN
  UserData:
    type: object
    properties:
      value:
        type: object
        additionalProperties:
          type: string
  accountAPIKey:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      maintainer:
        type: string
      apiKey:
        type: string
      description:
        type: string
      environmentName:
        type: string
  accountAPIKeyRole:
    type: string
    enum:
      - UNKNOWN
      - SDK_CLIENT
      - SDK_SERVER
      - PUBLIC_API_READ_ONLY
      - PUBLIC_API_WRITE
      - PUBLIC_API_ADMIN
    default: UNKNOWN
    title: '- PUBLIC_API_ADMIN: For sensitive data'
  accountAccountV2:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationId:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      lastSeen:
        type: string
        format: int64
      avatarFileType:
        type: string
      avatarImage:
        type: string
        format: byte
      environmentCount:
        type: integer
        format: int32
      tags:
        type: array
        items:
          type: string
  accountAccountV2EnvironmentRole:
    type: object
    properties:
      environmentId:
        type: string
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountChangeAPIKeyNameCommand:
    type: object
    properties:
      name:
        type: string
  accountChangeAPIKeyNameRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountChangeAPIKeyNameCommand'
      environmentId:
        type: string
  accountChangeAPIKeyNameResponse:
    type: object
  accountChangeAccountV2AvatarCommand:
    type: object
    properties:
      avatarImage:
        type: string
        format: byte
      avatarFileType:
        type: string
  accountChangeAccountV2AvatarImageUrlCommand:
    type: object
    properties:
      avatarImageUrl:
        type: string
  accountChangeAccountV2EnvironmentRolesCommand:
    type: object
    properties:
      roles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      writeType:
        $ref: '#/definitions/ChangeAccountV2EnvironmentRolesCommandWriteType'
  accountChangeAccountV2FirstNameCommand:
    type: object
    properties:
      firstName:
        type: string
  accountChangeAccountV2LanguageCommand:
    type: object
    properties:
      language:
        type: string
  accountChangeAccountV2LastNameCommand:
    type: object
    properties:
      lastName:
        type: string
  accountChangeAccountV2LastSeenCommand:
    type: object
    properties:
      lastSeen:
        type: string
        format: int64
  accountChangeAccountV2NameCommand:
    type: object
    properties:
      name:
        type: string
  accountChangeAccountV2OrganizationRoleCommand:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccountV2RoleOrganization'
  accountChangeAccountV2TagsCommand:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
  accountChangeDefaultSearchFilterCommand:
    type: object
    properties:
      id:
        type: string
      defaultFilter:
        type: boolean
  accountChangeSearchFilterNameCommand:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  accountChangeSearchFilterQueryCommand:
    type: object
    properties:
      id:
        type: string
      query:
        type: string
  accountConsoleAccount:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarUrl:
        type: string
      isSystemAdmin:
        type: boolean
      organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountConsoleAccountEnvironmentRole'
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      avatarFileType:
        type: string
      avatarImage:
        type: string
        format: byte
      lastSeen:
        type: string
        format: int64
  accountConsoleAccountEnvironmentRole:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
      project:
        $ref: '#/definitions/environmentProject'
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountCreateAPIKeyCommand:
    type: object
    properties:
      name:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
  accountCreateAPIKeyRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/accountCreateAPIKeyCommand'
      environmentId:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
      maintainer:
        type: string
      description:
        type: string
  accountCreateAPIKeyResponse:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/accountAPIKey'
  accountCreateAccountV2Command:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      tags:
        type: array
        items:
          type: string
  accountCreateAccountV2Request:
    type: object
    properties:
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountCreateAccountV2Command'
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      tags:
        type: array
        items:
          type: string
  accountCreateAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountCreateSearchFilterCommand:
    type: object
    properties:
      name:
        type: string
      query:
        type: string
      filterTargetType:
        $ref: '#/definitions/accountFilterTargetType'
      environmentId:
        type: string
      defaultFilter:
        type: boolean
  accountCreateSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      command:
        $ref: '#/definitions/accountCreateSearchFilterCommand'
  accountCreateSearchFilterResponse:
    type: object
  accountDeleteAccountV2Command:
    type: object
  accountDeleteAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountDeleteAccountV2Command'
  accountDeleteAccountV2Response:
    type: object
  accountDeleteSearchFilterCommand:
    type: object
    properties:
      id:
        type: string
  accountDeleteSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      command:
        $ref: '#/definitions/accountDeleteSearchFilterCommand'
  accountDeleteSearchFilterResponse:
    type: object
  accountDisableAPIKeyCommand:
    type: object
  accountDisableAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountDisableAPIKeyCommand'
      environmentId:
        type: string
  accountDisableAPIKeyResponse:
    type: object
  accountDisableAccountV2Command:
    type: object
  accountDisableAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountDisableAccountV2Command'
  accountDisableAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountEnableAPIKeyCommand:
    type: object
  accountEnableAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountEnableAPIKeyCommand'
      environmentId:
        type: string
  accountEnableAPIKeyResponse:
    type: object
  accountEnableAccountV2Command:
    type: object
  accountEnableAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountEnableAccountV2Command'
  accountEnableAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountEnvironmentAPIKey:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/accountAPIKey'
      environmentDisabled:
        type: boolean
      projectId:
        type: string
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
      projectUrlCode:
        type: string
  accountFilterTargetType:
    type: string
    enum:
      - UNKNOWN
      - FEATURE_FLAG
    default: UNKNOWN
  accountGetAPIKeyResponse:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/accountAPIKey'
  accountGetAccountV2ByEnvironmentIDResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountGetAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountGetEnvironmentAPIKeyResponse:
    type: object
    properties:
      environmentApiKey:
        $ref: '#/definitions/accountEnvironmentAPIKey'
  accountGetMeResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountConsoleAccount'
  accountGetMyOrganizationsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerenvironmentOrganization'
  accountListAPIKeysRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - ROLE
      - ENVIRONMENT
      - STATE
    default: DEFAULT
  accountListAPIKeysRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  accountListAPIKeysResponse:
    type: object
    properties:
      apiKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAPIKey'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  accountListAccountsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - EMAIL
      - CREATED_AT
      - UPDATED_AT
      - ORGANIZATION_ROLE
      - ENVIRONMENT_COUNT
      - LAST_SEEN
      - STATE
      - TAGS
    default: DEFAULT
  accountListAccountsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  accountListAccountsV2Response:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  accountSearchFilter:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      query:
        type: string
      filterTargetType:
        $ref: '#/definitions/accountFilterTargetType'
      environmentId:
        type: string
      defaultFilter:
        type: boolean
  accountUpdateAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      environmentId:
        type: string
      name:
        type: string
      description:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
      disabled:
        type: boolean
      maintainer:
        type: string
  accountUpdateAPIKeyResponse:
    type: object
  accountUpdateAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      changeNameCommand:
        $ref: '#/definitions/accountChangeAccountV2NameCommand'
      changeAvatarUrlCommand:
        $ref: '#/definitions/accountChangeAccountV2AvatarImageUrlCommand'
      changeOrganizationRoleCommand:
        $ref: '#/definitions/accountChangeAccountV2OrganizationRoleCommand'
      changeEnvironmentRolesCommand:
        $ref: '#/definitions/accountChangeAccountV2EnvironmentRolesCommand'
      changeFirstNameCommand:
        $ref: '#/definitions/accountChangeAccountV2FirstNameCommand'
      changeLastNameCommand:
        $ref: '#/definitions/accountChangeAccountV2LastNameCommand'
      changeLanguageCommand:
        $ref: '#/definitions/accountChangeAccountV2LanguageCommand'
      changeLastSeenCommand:
        $ref: '#/definitions/accountChangeAccountV2LastSeenCommand'
      changeAvatarCommand:
        $ref: '#/definitions/accountChangeAccountV2AvatarCommand'
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationRole:
        $ref: '#/definitions/UpdateAccountV2RequestOrganizationRoleValue'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      lastSeen:
        type: string
        format: int64
      avatar:
        $ref: '#/definitions/UpdateAccountV2RequestAccountV2Avatar'
      disabled:
        type: boolean
      tags:
        type: array
        items:
          type: string
      changeTagsCommand:
        $ref: '#/definitions/accountChangeAccountV2TagsCommand'
  accountUpdateAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountUpdateSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      changeNameCommand:
        $ref: '#/definitions/accountChangeSearchFilterNameCommand'
      changeQueryCommand:
        $ref: '#/definitions/accountChangeSearchFilterQueryCommand'
      changeDefaultFilterCommand:
        $ref: '#/definitions/accountChangeDefaultSearchFilterCommand'
  accountUpdateSearchFilterResponse:
    type: object
  authAuthType:
    type: string
    enum:
      - AUTH_TYPE_UNSPECIFIED
      - AUTH_TYPE_USER_PASSWORD
      - AUTH_TYPE_GOOGLE
      - AUTH_TYPE_GITHUB
    default: AUTH_TYPE_UNSPECIFIED
  authExchangeTokenRequest:
    type: object
    properties:
      code:
        type: string
      redirectUrl:
        type: string
      type:
        $ref: '#/definitions/authAuthType'
  authExchangeTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authGetAuthenticationURLRequest:
    type: object
    properties:
      state:
        type: string
      redirectUrl:
        type: string
      type:
        $ref: '#/definitions/authAuthType'
  authGetAuthenticationURLResponse:
    type: object
    properties:
      url:
        type: string
  authRefreshTokenRequest:
    type: object
    properties:
      refreshToken:
        type: string
  authRefreshTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authSignInRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  authSignInResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authToken:
    type: object
    properties:
      accessToken:
        type: string
      tokenType:
        type: string
      refreshToken:
        type: string
      expiry:
        type: string
        format: int64
  autoopsActionType:
    type: string
    enum:
      - UNKNOWN
      - ENABLE
      - DISABLE
    default: UNKNOWN
  autoopsAutoOpsRule:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      opsType:
        $ref: '#/definitions/autoopsOpsType'
      clauses:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerautoopsClause'
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      deleted:
        type: boolean
      autoOpsStatus:
        $ref: '#/definitions/autoopsAutoOpsStatus'
  autoopsAutoOpsStatus:
    type: string
    enum:
      - WAITING
      - RUNNING
      - FINISHED
      - STOPPED
    default: WAITING
  autoopsOpsType:
    type: string
    enum:
      - TYPE_UNKNOWN
      - SCHEDULE
      - EVENT_RATE
    default: TYPE_UNKNOWN
  bucketeerautoopsClause:
    type: object
    properties:
      id:
        type: string
      clause:
        $ref: '#/definitions/protobufAny'
      actionType:
        $ref: '#/definitions/autoopsActionType'
  bucketeerenvironmentOrganization:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      archived:
        type: boolean
      trial:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      systemAdmin:
        type: boolean
      projectCount:
        type: integer
        format: int32
      environmentCount:
        type: integer
        format: int32
      userCount:
        type: integer
        format: int32
      ownerEmail:
        type: string
  bucketeerfeatureClause:
    type: object
    properties:
      id:
        type: string
      attribute:
        type: string
      operator:
        $ref: '#/definitions/featureClauseOperator'
      values:
        type: array
        items:
          type: string
  bucketeerfeatureListTagsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
    default: DEFAULT
  bucketeerfeatureListTagsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  bucketeerfeatureListTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureTag'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeerfeatureTag:
    type: object
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      name:
        type: string
  bucketeerfeatureVariation:
    type: object
    properties:
      id:
        type: string
      value:
        type: string
        title: this is called value because it could be a string,
      name:
        type: string
        title: number or even json object
      description:
        type: string
  bucketeertagListTagsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - ENTITY_TYPE
      - ENVIRONMENT
    default: DEFAULT
  bucketeertagListTagsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  bucketeertagListTagsResponse:
    type: object
    properties:
      tags:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeertagTag'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeertagTag:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      entityType:
        $ref: '#/definitions/TagEntityType'
      environmentId:
        type: string
  environmentArchiveEnvironmentV2Command:
    type: object
  environmentArchiveEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentArchiveEnvironmentV2Command'
  environmentArchiveEnvironmentV2Response:
    type: object
  environmentArchiveOrganizationCommand:
    type: object
  environmentArchiveOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentArchiveOrganizationCommand'
  environmentArchiveOrganizationResponse:
    type: object
  environmentChangeDescriptionEnvironmentV2Command:
    type: object
    properties:
      description:
        type: string
  environmentChangeDescriptionOrganizationCommand:
    type: object
    properties:
      description:
        type: string
  environmentChangeDescriptionProjectCommand:
    type: object
    properties:
      description:
        type: string
  environmentChangeNameOrganizationCommand:
    type: object
    properties:
      name:
        type: string
  environmentChangeOwnerEmailOrganizationCommand:
    type: object
    properties:
      ownerEmail:
        type: string
  environmentChangeRequireCommentCommand:
    type: object
    properties:
      requireComment:
        type: boolean
  environmentConvertTrialOrganizationCommand:
    type: object
  environmentConvertTrialOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentConvertTrialOrganizationCommand'
  environmentConvertTrialOrganizationResponse:
    type: object
  environmentConvertTrialProjectCommand:
    type: object
  environmentConvertTrialProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentConvertTrialProjectCommand'
  environmentConvertTrialProjectResponse:
    type: object
  environmentCreateEnvironmentV2Command:
    type: object
    properties:
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      projectId:
        type: string
      requireComment:
        type: boolean
  environmentCreateEnvironmentV2Request:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateEnvironmentV2Command'
  environmentCreateEnvironmentV2Response:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
  environmentCreateOrganizationCommand:
    type: object
    properties:
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      isTrial:
        type: boolean
      isSystemAdmin:
        type: boolean
      ownerEmail:
        type: string
    title: Deprecated
  environmentCreateOrganizationRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateOrganizationCommand'
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      isTrial:
        type: boolean
      isSystemAdmin:
        type: boolean
      ownerEmail:
        type: string
  environmentCreateOrganizationResponse:
    type: object
    properties:
      Organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
  environmentCreateProjectCommand:
    type: object
    properties:
      organizationId:
        type: string
      name:
        type: string
      description:
        type: string
        title: optional
      urlCode:
        type: string
  environmentCreateProjectRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateProjectCommand'
  environmentCreateProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/environmentProject'
  environmentCreateTrialProjectCommand:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      name:
        type: string
      urlCode:
        type: string
      ownerEmail:
        type: string
  environmentCreateTrialProjectRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateTrialProjectCommand'
  environmentCreateTrialProjectResponse:
    type: object
  environmentDisableOrganizationCommand:
    type: object
  environmentDisableOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentDisableOrganizationCommand'
  environmentDisableOrganizationResponse:
    type: object
  environmentDisableProjectCommand:
    type: object
  environmentDisableProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentDisableProjectCommand'
  environmentDisableProjectResponse:
    type: object
  environmentEnableOrganizationCommand:
    type: object
  environmentEnableOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentEnableOrganizationCommand'
  environmentEnableOrganizationResponse:
    type: object
  environmentEnableProjectCommand:
    type: object
  environmentEnableProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentEnableProjectCommand'
  environmentEnableProjectResponse:
    type: object
  environmentEnvironmentV2:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      projectId:
        type: string
      archived:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      organizationId:
        type: string
      requireComment:
        type: boolean
      featureFlagCount:
        type: integer
        format: int32
  environmentGetEnvironmentV2Response:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
  environmentGetOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
  environmentGetProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/environmentProject'
  environmentListEnvironmentsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - NAME
      - URL_CODE
      - CREATED_AT
      - UPDATED_AT
      - FEATURE_COUNT
    default: DEFAULT
  environmentListEnvironmentsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListEnvironmentsV2Response:
    type: object
    properties:
      environments:
        type: array
        items:
          type: object
          $ref: '#/definitions/environmentEnvironmentV2'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentListOrganizationsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
      - URL_CODE
      - PROJECT_COUNT
      - ENVIRONMENT_COUNT
      - USER_COUNT
    default: DEFAULT
  environmentListOrganizationsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListOrganizationsResponse:
    type: object
    properties:
      Organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerenvironmentOrganization'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentListProjectsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
      - URL_CODE
      - ENVIRONMENT_COUNT
      - FEATURE_COUNT
      - CREATOR_EMAIL
    default: DEFAULT
  environmentListProjectsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListProjectsResponse:
    type: object
    properties:
      projects:
        type: array
        items:
          type: object
          $ref: '#/definitions/environmentProject'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentListProjectsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
      - URL_CODE
      - ENVIRONMENT_COUNT
      - FEATURE_COUNT
      - CREATOR_EMAIL
    default: DEFAULT
  environmentListProjectsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListProjectsV2Response:
    type: object
    properties:
      projects:
        type: array
        items:
          type: object
          $ref: '#/definitions/environmentProject'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentProject:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      trial:
        type: boolean
      creatorEmail:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      name:
        type: string
      urlCode:
        type: string
      organizationId:
        type: string
      environmentCount:
        type: integer
        format: int32
      featureFlagCount:
        type: integer
        format: int32
  environmentRenameEnvironmentV2Command:
    type: object
    properties:
      name:
        type: string
  environmentRenameProjectCommand:
    type: object
    properties:
      name:
        type: string
  environmentUnarchiveEnvironmentV2Command:
    type: object
  environmentUnarchiveEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentUnarchiveEnvironmentV2Command'
  environmentUnarchiveEnvironmentV2Response:
    type: object
  environmentUnarchiveOrganizationCommand:
    type: object
  environmentUnarchiveOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentUnarchiveOrganizationCommand'
  environmentUnarchiveOrganizationResponse:
    type: object
  environmentUpdateEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      renameCommand:
        $ref: '#/definitions/environmentRenameEnvironmentV2Command'
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionEnvironmentV2Command'
      changeRequireCommentCommand:
        $ref: '#/definitions/environmentChangeRequireCommentCommand'
  environmentUpdateEnvironmentV2Response:
    type: object
  environmentUpdateOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      renameCommand:
        $ref: '#/definitions/environmentChangeNameOrganizationCommand'
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionOrganizationCommand'
      changeOwnerEmailCommand:
        $ref: '#/definitions/environmentChangeOwnerEmailOrganizationCommand'
  environmentUpdateOrganizationResponse:
    type: object
  environmentUpdateProjectRequest:
    type: object
    properties:
      id:
        type: string
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionProjectCommand'
      renameCommand:
        $ref: '#/definitions/environmentRenameProjectCommand'
  environmentUpdateProjectResponse:
    type: object
  experimentArchiveExperimentCommand:
    type: object
  experimentArchiveExperimentResponse:
    type: object
  experimentArchiveGoalCommand:
    type: object
  experimentArchiveGoalResponse:
    type: object
  experimentChangeDescriptionGoalCommand:
    type: object
    properties:
      description:
        type: string
  experimentChangeExperimentDescriptionCommand:
    type: object
    properties:
      description:
        type: string
  experimentChangeExperimentNameCommand:
    type: object
    properties:
      name:
        type: string
  experimentChangeExperimentPeriodCommand:
    type: object
    properties:
      startAt:
        type: string
        format: int64
      stopAt:
        type: string
        format: int64
  experimentCreateExperimentCommand:
    type: object
    properties:
      featureId:
        type: string
      startAt:
        type: string
        format: int64
      stopAt:
        type: string
        format: int64
      goalIds:
        type: array
        items:
          type: string
      name:
        type: string
      description:
        type: string
      baseVariationId:
        type: string
  experimentCreateExperimentRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/experimentCreateExperimentCommand'
        description: deprecated
      environmentId:
        type: string
      featureId:
        type: string
      startAt:
        type: string
        format: int64
      stopAt:
        type: string
        format: int64
      goalIds:
        type: array
        items:
          type: string
      name:
        type: string
      description:
        type: string
      baseVariationId:
        type: string
    required:
      - environmentId
  experimentCreateExperimentResponse:
    type: object
    properties:
      experiment:
        $ref: '#/definitions/experimentExperiment'
  experimentCreateGoalCommand:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      connectionType:
        $ref: '#/definitions/GoalConnectionType'
  experimentCreateGoalRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/experimentCreateGoalCommand'
        description: deprecated
      environmentId:
        type: string
      id:
        type: string
      name:
        type: string
      description:
        type: string
      connectionType:
        $ref: '#/definitions/GoalConnectionType'
    required:
      - environmentId
      - id
      - name
  experimentCreateGoalResponse:
    type: object
    properties:
      goal:
        $ref: '#/definitions/experimentGoal'
  experimentDeleteExperimentCommand:
    type: object
  experimentDeleteExperimentResponse:
    type: object
  experimentDeleteGoalCommand:
    type: object
  experimentDeleteGoalResponse:
    type: object
  experimentExperiment:
    type: object
    properties:
      id:
        type: string
      goalId:
        type: string
      featureId:
        type: string
      featureVersion:
        type: integer
        format: int32
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      startAt:
        type: string
        format: int64
      stopAt:
        type: string
        format: int64
      stopped:
        type: boolean
      stoppedAt:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      deleted:
        type: boolean
      goalIds:
        type: array
        items:
          type: string
      name:
        type: string
      description:
        type: string
      baseVariationId:
        type: string
      status:
        $ref: '#/definitions/experimentExperimentStatus'
      maintainer:
        type: string
      archived:
        type: boolean
      goals:
        type: array
        items:
          type: object
          $ref: '#/definitions/ExperimentGoalReference'
  experimentExperimentStatus:
    type: string
    enum:
      - WAITING
      - RUNNING
      - STOPPED
      - FORCE_STOPPED
    default: WAITING
  experimentFinishExperimentCommand:
    type: object
  experimentFinishExperimentResponse:
    type: object
  experimentGetExperimentResponse:
    type: object
    properties:
      experiment:
        $ref: '#/definitions/experimentExperiment'
  experimentGetGoalResponse:
    type: object
    properties:
      goal:
        $ref: '#/definitions/experimentGoal'
  experimentGoal:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      deleted:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      isInUseStatus:
        type: boolean
        description: This field is set only when APIs return.
      archived:
        type: boolean
      connectionType:
        $ref: '#/definitions/GoalConnectionType'
      experiments:
        type: array
        items:
          type: object
          $ref: '#/definitions/experimentExperiment'
      autoOpsRules:
        type: array
        items:
          type: object
          $ref: '#/definitions/autoopsAutoOpsRule'
  experimentListExperimentsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  experimentListExperimentsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  experimentListExperimentsResponse:
    type: object
    properties:
      experiments:
        type: array
        items:
          type: object
          $ref: '#/definitions/experimentExperiment'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  experimentListGoalsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - CONNECTION_TYPE
    default: DEFAULT
  experimentListGoalsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  experimentListGoalsResponse:
    type: object
    properties:
      goals:
        type: array
        items:
          type: object
          $ref: '#/definitions/experimentGoal'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  experimentRenameGoalCommand:
    type: object
    properties:
      name:
        type: string
  experimentStartExperimentCommand:
    type: object
  experimentStartExperimentResponse:
    type: object
  experimentStopExperimentCommand:
    type: object
  experimentStopExperimentResponse:
    type: object
  experimentUpdateExperimentResponse:
    type: object
  experimentUpdateGoalRequest:
    type: object
    properties:
      id:
        type: string
      renameCommand:
        $ref: '#/definitions/experimentRenameGoalCommand'
        description: deprecated
      changeDescriptionCommand:
        $ref: '#/definitions/experimentChangeDescriptionGoalCommand'
        description: deprecated
      environmentId:
        type: string
      name:
        type: string
      description:
        type: string
      archived:
        type: boolean
        description: if true, the goal will be archived
    required:
      - id
      - environmentId
  experimentUpdateGoalResponse:
    type: object
    properties:
      goal:
        $ref: '#/definitions/experimentGoal'
  featureAddSegmentUserCommand:
    type: object
    properties:
      userIds:
        type: array
        items:
          type: string
      state:
        $ref: '#/definitions/featureSegmentUserState'
  featureAddSegmentUserResponse:
    type: object
  featureAddTagCommand:
    type: object
    properties:
      tag:
        type: string
  featureArchiveFeatureCommand:
    type: object
  featureArchiveFeatureResponse:
    type: object
  featureBulkDownloadSegmentUsersResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: segment user ids separated by new line
  featureBulkUploadSegmentUsersCommand:
    type: object
    properties:
      data:
        type: string
        format: byte
        title: segment user ids separated by comma or new line
      state:
        $ref: '#/definitions/featureSegmentUserState'
  featureBulkUploadSegmentUsersRequest:
    type: object
    properties:
      segmentId:
        type: string
      command:
        $ref: '#/definitions/featureBulkUploadSegmentUsersCommand'
        description: deprecated
      environmentId:
        type: string
      data:
        type: string
        format: byte
        description: segment user ids separated by comma or new line
      state:
        $ref: '#/definitions/featureSegmentUserState'
  featureBulkUploadSegmentUsersResponse:
    type: object
  featureChangeDescriptionCommand:
    type: object
    properties:
      description:
        type: string
  featureChangeFlagTriggerDescriptionCommand:
    type: object
    properties:
      description:
        type: string
  featureClauseOperator:
    type: string
    enum:
      - EQUALS
      - IN
      - ENDS_WITH
      - STARTS_WITH
      - SEGMENT
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - BEFORE
      - AFTER
      - FEATURE_FLAG
      - PARTIALLY_MATCH
    default: EQUALS
    description: ' - FEATURE_FLAG: Attribute is feature ID, and value is variation ID.'
  featureCloneFeatureCommand:
    type: object
    properties:
      environmentId:
        type: string
  featureCloneFeatureResponse:
    type: object
  featureCommand:
    type: object
    properties:
      command:
        $ref: '#/definitions/protobufAny'
  featureCreateFeatureCommand:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
        title: This is an optional field
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      tags:
        type: array
        items:
          type: string
      defaultOnVariationIndex:
        type: integer
        format: int32
      defaultOffVariationIndex:
        type: integer
        format: int32
      variationType:
        $ref: '#/definitions/FeatureVariationType'
  featureCreateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  featureCreateFlagTriggerCommand:
    type: object
    properties:
      featureId:
        type: string
      type:
        $ref: '#/definitions/featureFlagTriggerType'
      action:
        $ref: '#/definitions/FlagTriggerAction'
      description:
        type: string
  featureCreateFlagTriggerResponse:
    type: object
    properties:
      flagTrigger:
        $ref: '#/definitions/featureFlagTrigger'
      url:
        type: string
  featureCreateSegmentCommand:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  featureCreateSegmentRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/featureCreateSegmentCommand'
        description: deprecated
      name:
        type: string
      environmentId:
        type: string
      description:
        type: string
    required:
      - name
      - environmentId
  featureCreateSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  featureDeleteFeatureCommand:
    type: object
  featureDeleteFeatureResponse:
    type: object
  featureDeleteFlagTriggerCommand:
    type: object
  featureDeleteFlagTriggerResponse:
    type: object
  featureDeleteSegmentCommand:
    type: object
  featureDeleteSegmentResponse:
    type: object
  featureDeleteSegmentUserCommand:
    type: object
    properties:
      userIds:
        type: array
        items:
          type: string
      state:
        $ref: '#/definitions/featureSegmentUserState'
  featureDeleteSegmentUserResponse:
    type: object
  featureDisableFeatureCommand:
    type: object
  featureDisableFeatureResponse:
    type: object
  featureDisableFlagTriggerCommand:
    type: object
  featureDisableFlagTriggerResponse:
    type: object
  featureEnableFeatureCommand:
    type: object
  featureEnableFeatureResponse:
    type: object
  featureEnableFlagTriggerCommand:
    type: object
  featureEnableFlagTriggerResponse:
    type: object
  featureEvaluateFeaturesResponse:
    type: object
    properties:
      userEvaluations:
        $ref: '#/definitions/featureUserEvaluations'
  featureEvaluation:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      featureVersion:
        type: integer
        format: int32
      userId:
        type: string
      variationId:
        type: string
      variation:
        $ref: '#/definitions/bucketeerfeatureVariation'
      reason:
        $ref: '#/definitions/featureReason'
      variationValue:
        type: string
      variationName:
        type: string
  featureFeature:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      deleted:
        type: boolean
      evaluationUndelayable:
        type: boolean
      ttl:
        type: integer
        format: int32
      version:
        type: integer
        format: int32
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      targets:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTarget'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      defaultStrategy:
        $ref: '#/definitions/featureStrategy'
      offVariation:
        type: string
      tags:
        type: array
        items:
          type: string
      lastUsedInfo:
        $ref: '#/definitions/featureFeatureLastUsedInfo'
      maintainer:
        type: string
      variationType:
        $ref: '#/definitions/FeatureVariationType'
      archived:
        type: boolean
      prerequisites:
        type: array
        items:
          type: object
          $ref: '#/definitions/featurePrerequisite'
      samplingSeed:
        type: string
  featureFeatureLastUsedInfo:
    type: object
    properties:
      featureId:
        type: string
      version:
        type: integer
        format: int32
      lastUsedAt:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
      clientOldestVersion:
        type: string
      clientLatestVersion:
        type: string
  featureFixedStrategy:
    type: object
    properties:
      variation:
        type: string
  featureFlagTrigger:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      type:
        $ref: '#/definitions/featureFlagTriggerType'
      action:
        $ref: '#/definitions/FlagTriggerAction'
      description:
        type: string
      triggerCount:
        type: integer
        format: int32
      lastTriggeredAt:
        type: string
        format: int64
      token:
        type: string
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      environmentId:
        type: string
  featureFlagTriggerType:
    type: string
    enum:
      - Type_UNKNOWN
      - Type_WEBHOOK
    default: Type_UNKNOWN
  featureFlagTriggerWebhookResponse:
    type: object
  featureGetFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  featureGetFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
  featureGetFlagTriggerResponse:
    type: object
    properties:
      flagTrigger:
        $ref: '#/definitions/featureFlagTrigger'
      url:
        type: string
  featureGetSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  featureGetSegmentUserResponse:
    type: object
    properties:
      user:
        $ref: '#/definitions/featureSegmentUser'
  featureListEnabledFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
      cursor:
        type: string
  featureListFeaturesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - TAGS
      - ENABLED
    default: DEFAULT
  featureListFeaturesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featureListFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  featureListFlagTriggersRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  featureListFlagTriggersRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featureListFlagTriggersResponse:
    type: object
    properties:
      flagTriggers:
        type: array
        items:
          type: object
          $ref: '#/definitions/ListFlagTriggersResponseFlagTriggerWithUrl'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  featureListSegmentUsersResponse:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegmentUser'
      cursor:
        type: string
  featureListSegmentsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - CONNECTIONS
      - USERS
    default: DEFAULT
  featureListSegmentsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featureListSegmentsResponse:
    type: object
    properties:
      segments:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegment'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  featurePrerequisite:
    type: object
    properties:
      featureId:
        type: string
      variationId:
        type: string
  featureReason:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureReasonType'
      ruleId:
        type: string
  featureReasonType:
    type: string
    enum:
      - TARGET
      - RULE
      - DEFAULT
      - CLIENT
      - OFF_VARIATION
      - PREREQUISITE
    default: TARGET
  featureRemoveTagCommand:
    type: object
    properties:
      tag:
        type: string
  featureRenameFeatureCommand:
    type: object
    properties:
      name:
        type: string
  featureResetFlagTriggerCommand:
    type: object
  featureResetFlagTriggerResponse:
    type: object
    properties:
      flagTrigger:
        $ref: '#/definitions/featureFlagTrigger'
      url:
        type: string
  featureRolloutStrategy:
    type: object
    properties:
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRolloutStrategyVariation'
  featureRolloutStrategyVariation:
    type: object
    properties:
      variation:
        type: string
      weight:
        type: integer
        format: int32
  featureRule:
    type: object
    properties:
      id:
        type: string
      strategy:
        $ref: '#/definitions/featureStrategy'
      clauses:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureClause'
  featureSegment:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      version:
        type: string
        format: int64
      deleted:
        type: boolean
      includedUserCount:
        type: string
        format: int64
      excludedUserCount:
        type: string
        format: int64
      status:
        $ref: '#/definitions/featureSegmentStatus'
      isInUseStatus:
        type: boolean
        description: This field is set only when APIs return.
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
  featureSegmentStatus:
    type: string
    enum:
      - INITIAL
      - UPLOADING
      - SUCEEDED
      - FAILED
    default: INITIAL
  featureSegmentUser:
    type: object
    properties:
      id:
        type: string
      segmentId:
        type: string
      userId:
        type: string
      state:
        $ref: '#/definitions/featureSegmentUserState'
      deleted:
        type: boolean
  featureSegmentUserState:
    type: string
    enum:
      - INCLUDED
      - EXCLUDED
    default: INCLUDED
  featureStrategy:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureStrategyType'
      fixedStrategy:
        $ref: '#/definitions/featureFixedStrategy'
      rolloutStrategy:
        $ref: '#/definitions/featureRolloutStrategy'
  featureStrategyType:
    type: string
    enum:
      - FIXED
      - ROLLOUT
    default: FIXED
  featureTarget:
    type: object
    properties:
      variation:
        type: string
      users:
        type: array
        items:
          type: string
  featureUnarchiveFeatureCommand:
    type: object
  featureUnarchiveFeatureResponse:
    type: object
  featureUpdateFeatureDetailsResponse:
    type: object
  featureUpdateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  featureUpdateFeatureTargetingResponse:
    type: object
  featureUpdateFeatureVariationsResponse:
    type: object
  featureUpdateFlagTriggerResponse:
    type: object
  featureUpdateSegmentRequest:
    type: object
    properties:
      id:
        type: string
      commands:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureCommand'
        description: deprecated
      environmentId:
        type: string
      name:
        type: string
      description:
        type: string
    required:
      - environmentId
  featureUpdateSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  featureUserEvaluations:
    type: object
    properties:
      id:
        type: string
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureEvaluation'
      createdAt:
        type: string
        format: int64
      archivedFeatureIds:
        type: array
        items:
          type: string
      forceUpdate:
        type: boolean
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  notificationAddAdminSubscriptionSourceTypesCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
  notificationAddSourceTypesCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
  notificationCreateAdminSubscriptionCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
      recipient:
        $ref: '#/definitions/notificationRecipient'
      name:
        type: string
  notificationCreateAdminSubscriptionResponse:
    type: object
  notificationCreateSubscriptionCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
      recipient:
        $ref: '#/definitions/notificationRecipient'
      name:
        type: string
  notificationCreateSubscriptionRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/notificationCreateSubscriptionCommand'
      environmentId:
        type: string
      name:
        type: string
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
      recipient:
        $ref: '#/definitions/notificationRecipient'
    required:
      - environmentId
      - name
      - sourceTypes
      - recipient
  notificationCreateSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/notificationSubscription'
  notificationDeleteAdminSubscriptionCommand:
    type: object
  notificationDeleteAdminSubscriptionResponse:
    type: object
  notificationDeleteAdminSubscriptionSourceTypesCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
  notificationDeleteSourceTypesCommand:
    type: object
    properties:
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
  notificationDeleteSubscriptionCommand:
    type: object
  notificationDeleteSubscriptionResponse:
    type: object
  notificationDisableAdminSubscriptionCommand:
    type: object
  notificationDisableAdminSubscriptionResponse:
    type: object
  notificationDisableSubscriptionCommand:
    type: object
  notificationDisableSubscriptionResponse:
    type: object
  notificationEnableAdminSubscriptionCommand:
    type: object
  notificationEnableAdminSubscriptionResponse:
    type: object
  notificationEnableSubscriptionCommand:
    type: object
  notificationEnableSubscriptionResponse:
    type: object
  notificationGetAdminSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/notificationSubscription'
  notificationGetSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/notificationSubscription'
  notificationListAdminSubscriptionsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  notificationListAdminSubscriptionsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  notificationListAdminSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/notificationSubscription'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  notificationListEnabledAdminSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/notificationSubscription'
      cursor:
        type: string
  notificationListEnabledSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/notificationSubscription'
      cursor:
        type: string
  notificationListSubscriptionsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - ENVIRONMENT
      - STATE
    default: DEFAULT
  notificationListSubscriptionsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  notificationListSubscriptionsResponse:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: object
          $ref: '#/definitions/notificationSubscription'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  notificationRecipient:
    type: object
    properties:
      type:
        $ref: '#/definitions/notificationRecipientType'
      slackChannelRecipient:
        $ref: '#/definitions/notificationSlackChannelRecipient'
      language:
        $ref: '#/definitions/RecipientLanguage'
  notificationRecipientType:
    type: string
    enum:
      - SlackChannel
    default: SlackChannel
  notificationRenameAdminSubscriptionCommand:
    type: object
    properties:
      name:
        type: string
  notificationRenameSubscriptionCommand:
    type: object
    properties:
      name:
        type: string
  notificationSlackChannelRecipient:
    type: object
    properties:
      webhookUrl:
        type: string
  notificationSubscription:
    type: object
    properties:
      id:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      disabled:
        type: boolean
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
      recipient:
        $ref: '#/definitions/notificationRecipient'
      name:
        type: string
      environmentId:
        type: string
      environmentName:
        type: string
  notificationUpdateAdminSubscriptionResponse:
    type: object
  notificationUpdateSubscriptionRequest:
    type: object
    properties:
      id:
        type: string
      addSourceTypesCommand:
        $ref: '#/definitions/notificationAddSourceTypesCommand'
        description: deprecated. use source_types instead.
      deleteSourceTypesCommand:
        $ref: '#/definitions/notificationDeleteSourceTypesCommand'
        description: deprecated. use source_types instead.
      renameSubscriptionCommand:
        $ref: '#/definitions/notificationRenameSubscriptionCommand'
        description: deprecated. use name instead.
      environmentId:
        type: string
      sourceTypes:
        type: array
        items:
          $ref: '#/definitions/SubscriptionSourceType'
      name:
        type: string
      disabled:
        type: boolean
        description: if true, the subscription is disabled, otherwise enabled.
        title: disabled
    required:
      - id
      - environmentId
  notificationUpdateSubscriptionResponse:
    type: object
    properties:
      subscription:
        $ref: '#/definitions/notificationSubscription'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  pushAddPushTagsCommand:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
  pushCreatePushCommand:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
      name:
        type: string
      fcmServiceAccount:
        type: string
        format: byte
  pushCreatePushRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/pushCreatePushCommand'
      tags:
        type: array
        items:
          type: string
      name:
        type: string
      fcmServiceAccount:
        type: string
        format: byte
      environmentId:
        type: string
  pushCreatePushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  pushDeletePushCommand:
    type: object
  pushDeletePushResponse:
    type: object
  pushDeletePushTagsCommand:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
  pushGetPushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  pushListPushesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - ENVIRONMENT
      - STATE
    default: DEFAULT
  pushListPushesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  pushListPushesResponse:
    type: object
    properties:
      pushes:
        type: array
        items:
          type: object
          $ref: '#/definitions/pushPush'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  pushPush:
    type: object
    properties:
      id:
        type: string
      tags:
        type: array
        items:
          type: string
      deleted:
        type: boolean
      name:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      fcmServiceAccount:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: string
      environmentName:
        type: string
  pushRenamePushCommand:
    type: object
    properties:
      name:
        type: string
  pushUpdatePushRequest:
    type: object
    properties:
      id:
        type: string
      addPushTagsCommand:
        $ref: '#/definitions/pushAddPushTagsCommand'
      deletePushTagsCommand:
        $ref: '#/definitions/pushDeletePushTagsCommand'
      renamePushCommand:
        $ref: '#/definitions/pushRenamePushCommand'
      tags:
        type: array
        items:
          type: string
      name:
        type: string
      environmentId:
        type: string
      disabled:
        type: boolean
    required:
      - id
      - environmentId
  pushUpdatePushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  tagCreateTagRequest:
    type: object
    properties:
      name:
        type: string
      entityType:
        $ref: '#/definitions/TagEntityType'
      environmentId:
        type: string
    required:
      - name
      - entityType
      - environmentId
  tagCreateTagResponse:
    type: object
    properties:
      tag:
        $ref: '#/definitions/bucketeertagTag'
  tagDeleteTagResponse:
    type: object
  userUser:
    type: object
    properties:
      id:
        type: string
      data:
        type: object
        additionalProperties:
          type: string
        title: used by the sdk client
      taggedData:
        type: object
        additionalProperties:
          $ref: '#/definitions/UserData'
      lastSeen:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
