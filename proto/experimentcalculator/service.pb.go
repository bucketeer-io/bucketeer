// Copyright 2023 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: proto/experimentcalculator/service.proto

package experimentcalculator

import (
	context "context"
	experiment "github.com/bucketeer-io/bucketeer/proto/experiment"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchCalcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentId string                 `protobuf:"bytes,1,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Experiment    *experiment.Experiment `protobuf:"bytes,2,opt,name=experiment,proto3" json:"experiment,omitempty"`
}

func (x *BatchCalcRequest) Reset() {
	*x = BatchCalcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_experimentcalculator_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCalcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCalcRequest) ProtoMessage() {}

func (x *BatchCalcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_experimentcalculator_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCalcRequest.ProtoReflect.Descriptor instead.
func (*BatchCalcRequest) Descriptor() ([]byte, []int) {
	return file_proto_experimentcalculator_service_proto_rawDescGZIP(), []int{0}
}

func (x *BatchCalcRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *BatchCalcRequest) GetExperiment() *experiment.Experiment {
	if x != nil {
		return x.Experiment
	}
	return nil
}

type BatchCalcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchCalcResponse) Reset() {
	*x = BatchCalcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_experimentcalculator_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCalcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCalcResponse) ProtoMessage() {}

func (x *BatchCalcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_experimentcalculator_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCalcResponse.ProtoReflect.Descriptor instead.
func (*BatchCalcResponse) Descriptor() ([]byte, []int) {
	return file_proto_experimentcalculator_service_proto_rawDescGZIP(), []int{1}
}

var File_proto_experimentcalculator_service_proto protoreflect.FileDescriptor

var file_proto_experimentcalculator_service_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7b, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x96, 0x01, 0x0a, 0x1b, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x77, 0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72,
	0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_experimentcalculator_service_proto_rawDescOnce sync.Once
	file_proto_experimentcalculator_service_proto_rawDescData = file_proto_experimentcalculator_service_proto_rawDesc
)

func file_proto_experimentcalculator_service_proto_rawDescGZIP() []byte {
	file_proto_experimentcalculator_service_proto_rawDescOnce.Do(func() {
		file_proto_experimentcalculator_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_experimentcalculator_service_proto_rawDescData)
	})
	return file_proto_experimentcalculator_service_proto_rawDescData
}

var file_proto_experimentcalculator_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_experimentcalculator_service_proto_goTypes = []interface{}{
	(*BatchCalcRequest)(nil),      // 0: bucketeer.experimentcalculator.BatchCalcRequest
	(*BatchCalcResponse)(nil),     // 1: bucketeer.experimentcalculator.BatchCalcResponse
	(*experiment.Experiment)(nil), // 2: bucketeer.experiment.Experiment
}
var file_proto_experimentcalculator_service_proto_depIdxs = []int32{
	2, // 0: bucketeer.experimentcalculator.BatchCalcRequest.experiment:type_name -> bucketeer.experiment.Experiment
	0, // 1: bucketeer.experimentcalculator.ExperimentCalculatorService.CalcExperiment:input_type -> bucketeer.experimentcalculator.BatchCalcRequest
	1, // 2: bucketeer.experimentcalculator.ExperimentCalculatorService.CalcExperiment:output_type -> bucketeer.experimentcalculator.BatchCalcResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_experimentcalculator_service_proto_init() }
func file_proto_experimentcalculator_service_proto_init() {
	if File_proto_experimentcalculator_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_experimentcalculator_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCalcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_experimentcalculator_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCalcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_experimentcalculator_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_experimentcalculator_service_proto_goTypes,
		DependencyIndexes: file_proto_experimentcalculator_service_proto_depIdxs,
		MessageInfos:      file_proto_experimentcalculator_service_proto_msgTypes,
	}.Build()
	File_proto_experimentcalculator_service_proto = out.File
	file_proto_experimentcalculator_service_proto_rawDesc = nil
	file_proto_experimentcalculator_service_proto_goTypes = nil
	file_proto_experimentcalculator_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExperimentCalculatorServiceClient is the client API for ExperimentCalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExperimentCalculatorServiceClient interface {
	CalcExperiment(ctx context.Context, in *BatchCalcRequest, opts ...grpc.CallOption) (*BatchCalcResponse, error)
}

type experimentCalculatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExperimentCalculatorServiceClient(cc grpc.ClientConnInterface) ExperimentCalculatorServiceClient {
	return &experimentCalculatorServiceClient{cc}
}

func (c *experimentCalculatorServiceClient) CalcExperiment(ctx context.Context, in *BatchCalcRequest, opts ...grpc.CallOption) (*BatchCalcResponse, error) {
	out := new(BatchCalcResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.experimentcalculator.ExperimentCalculatorService/CalcExperiment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExperimentCalculatorServiceServer is the server API for ExperimentCalculatorService service.
type ExperimentCalculatorServiceServer interface {
	CalcExperiment(context.Context, *BatchCalcRequest) (*BatchCalcResponse, error)
}

// UnimplementedExperimentCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExperimentCalculatorServiceServer struct {
}

func (*UnimplementedExperimentCalculatorServiceServer) CalcExperiment(context.Context, *BatchCalcRequest) (*BatchCalcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalcExperiment not implemented")
}

func RegisterExperimentCalculatorServiceServer(s *grpc.Server, srv ExperimentCalculatorServiceServer) {
	s.RegisterService(&_ExperimentCalculatorService_serviceDesc, srv)
}

func _ExperimentCalculatorService_CalcExperiment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchCalcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExperimentCalculatorServiceServer).CalcExperiment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.experimentcalculator.ExperimentCalculatorService/CalcExperiment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExperimentCalculatorServiceServer).CalcExperiment(ctx, req.(*BatchCalcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExperimentCalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bucketeer.experimentcalculator.ExperimentCalculatorService",
	HandlerType: (*ExperimentCalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CalcExperiment",
			Handler:    _ExperimentCalculatorService_CalcExperiment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/experimentcalculator/service.proto",
}
