// Code generated by MockGen. DO NOT EDIT.
// Source: user_evaluations.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	feature "github.com/bucketeer-io/bucketeer/proto/feature"
)

// MockUserEvaluationsStorage is a mock of UserEvaluationsStorage interface.
type MockUserEvaluationsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockUserEvaluationsStorageMockRecorder
}

// MockUserEvaluationsStorageMockRecorder is the mock recorder for MockUserEvaluationsStorage.
type MockUserEvaluationsStorageMockRecorder struct {
	mock *MockUserEvaluationsStorage
}

// NewMockUserEvaluationsStorage creates a new mock instance.
func NewMockUserEvaluationsStorage(ctrl *gomock.Controller) *MockUserEvaluationsStorage {
	mock := &MockUserEvaluationsStorage{ctrl: ctrl}
	mock.recorder = &MockUserEvaluationsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserEvaluationsStorage) EXPECT() *MockUserEvaluationsStorageMockRecorder {
	return m.recorder
}

// GetUserEvaluations mocks base method.
func (m *MockUserEvaluationsStorage) GetUserEvaluations(ctx context.Context, userID, environmentNamespace, tag string) ([]*feature.Evaluation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserEvaluations", ctx, userID, environmentNamespace, tag)
	ret0, _ := ret[0].([]*feature.Evaluation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserEvaluations indicates an expected call of GetUserEvaluations.
func (mr *MockUserEvaluationsStorageMockRecorder) GetUserEvaluations(ctx, userID, environmentNamespace, tag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserEvaluations", reflect.TypeOf((*MockUserEvaluationsStorage)(nil).GetUserEvaluations), ctx, userID, environmentNamespace, tag)
}

// UpsertUserEvaluation mocks base method.
func (m *MockUserEvaluationsStorage) UpsertUserEvaluation(ctx context.Context, evaluation *feature.Evaluation, environmentNamespace, tag string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertUserEvaluation", ctx, evaluation, environmentNamespace, tag)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertUserEvaluation indicates an expected call of UpsertUserEvaluation.
func (mr *MockUserEvaluationsStorageMockRecorder) UpsertUserEvaluation(ctx, evaluation, environmentNamespace, tag interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertUserEvaluation", reflect.TypeOf((*MockUserEvaluationsStorage)(nil).UpsertUserEvaluation), ctx, evaluation, environmentNamespace, tag)
}
