// Copyright 2022 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: proto/feature/clause.proto

package feature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Clause_Operator int32

const (
	Clause_EQUALS           Clause_Operator = 0
	Clause_IN               Clause_Operator = 1
	Clause_ENDS_WITH        Clause_Operator = 2
	Clause_STARTS_WITH      Clause_Operator = 3
	Clause_SEGMENT          Clause_Operator = 4
	Clause_GREATER          Clause_Operator = 5
	Clause_GREATER_OR_EQUAL Clause_Operator = 6
	Clause_LESS             Clause_Operator = 7
	Clause_LESS_OR_EQUAL    Clause_Operator = 8
	Clause_BEFORE           Clause_Operator = 9
	Clause_AFTER            Clause_Operator = 10
)

// Enum value maps for Clause_Operator.
var (
	Clause_Operator_name = map[int32]string{
		0:  "EQUALS",
		1:  "IN",
		2:  "ENDS_WITH",
		3:  "STARTS_WITH",
		4:  "SEGMENT",
		5:  "GREATER",
		6:  "GREATER_OR_EQUAL",
		7:  "LESS",
		8:  "LESS_OR_EQUAL",
		9:  "BEFORE",
		10: "AFTER",
	}
	Clause_Operator_value = map[string]int32{
		"EQUALS":           0,
		"IN":               1,
		"ENDS_WITH":        2,
		"STARTS_WITH":      3,
		"SEGMENT":          4,
		"GREATER":          5,
		"GREATER_OR_EQUAL": 6,
		"LESS":             7,
		"LESS_OR_EQUAL":    8,
		"BEFORE":           9,
		"AFTER":            10,
	}
)

func (x Clause_Operator) Enum() *Clause_Operator {
	p := new(Clause_Operator)
	*p = x
	return p
}

func (x Clause_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Clause_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_feature_clause_proto_enumTypes[0].Descriptor()
}

func (Clause_Operator) Type() protoreflect.EnumType {
	return &file_proto_feature_clause_proto_enumTypes[0]
}

func (x Clause_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Clause_Operator.Descriptor instead.
func (Clause_Operator) EnumDescriptor() ([]byte, []int) {
	return file_proto_feature_clause_proto_rawDescGZIP(), []int{0, 0}
}

type Clause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attribute string          `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
	Operator  Clause_Operator `protobuf:"varint,3,opt,name=operator,proto3,enum=bucketeer.feature.Clause_Operator" json:"operator,omitempty"`
	Values    []string        `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Clause) Reset() {
	*x = Clause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_feature_clause_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clause) ProtoMessage() {}

func (x *Clause) ProtoReflect() protoreflect.Message {
	mi := &file_proto_feature_clause_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clause.ProtoReflect.Descriptor instead.
func (*Clause) Descriptor() ([]byte, []int) {
	return file_proto_feature_clause_proto_rawDescGZIP(), []int{0}
}

func (x *Clause) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Clause) GetAttribute() string {
	if x != nil {
		return x.Attribute
	}
	return ""
}

func (x *Clause) GetOperator() Clause_Operator {
	if x != nil {
		return x.Operator
	}
	return Clause_EQUALS
}

func (x *Clause) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_proto_feature_clause_proto protoreflect.FileDescriptor

var file_proto_feature_clause_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f,
	0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xb3, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43,
	0x6c, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xa2, 0x01, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0a, 0x0a,
	0x06, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x02,
	0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x52, 0x54, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x47, 0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x47,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10,
	0x06, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x45, 0x53, 0x53, 0x5f, 0x4f, 0x52, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x08, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x46,
	0x54, 0x45, 0x52, 0x10, 0x0a, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2d, 0x69, 0x6f,
	0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_feature_clause_proto_rawDescOnce sync.Once
	file_proto_feature_clause_proto_rawDescData = file_proto_feature_clause_proto_rawDesc
)

func file_proto_feature_clause_proto_rawDescGZIP() []byte {
	file_proto_feature_clause_proto_rawDescOnce.Do(func() {
		file_proto_feature_clause_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_feature_clause_proto_rawDescData)
	})
	return file_proto_feature_clause_proto_rawDescData
}

var file_proto_feature_clause_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_feature_clause_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_feature_clause_proto_goTypes = []interface{}{
	(Clause_Operator)(0), // 0: bucketeer.feature.Clause.Operator
	(*Clause)(nil),       // 1: bucketeer.feature.Clause
}
var file_proto_feature_clause_proto_depIdxs = []int32{
	0, // 0: bucketeer.feature.Clause.operator:type_name -> bucketeer.feature.Clause.Operator
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_feature_clause_proto_init() }
func file_proto_feature_clause_proto_init() {
	if File_proto_feature_clause_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_feature_clause_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_feature_clause_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_feature_clause_proto_goTypes,
		DependencyIndexes: file_proto_feature_clause_proto_depIdxs,
		EnumInfos:         file_proto_feature_clause_proto_enumTypes,
		MessageInfos:      file_proto_feature_clause_proto_msgTypes,
	}.Build()
	File_proto_feature_clause_proto = out.File
	file_proto_feature_clause_proto_rawDesc = nil
	file_proto_feature_clause_proto_goTypes = nil
	file_proto_feature_clause_proto_depIdxs = nil
}
