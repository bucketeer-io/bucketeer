// source: proto/tag/tag.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

goog.exportSymbol('proto.bucketeer.tag.Tag', null, global);
goog.exportSymbol('proto.bucketeer.tag.Tag.EntityType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.tag.Tag = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.tag.Tag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.tag.Tag.displayName = 'proto.bucketeer.tag.Tag';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.tag.Tag.prototype.toObject = function (opt_includeInstance) {
    return proto.bucketeer.tag.Tag.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.tag.Tag} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.tag.Tag.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        name: jspb.Message.getFieldWithDefault(msg, 2, ''),
        createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
        updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
        entityType: jspb.Message.getFieldWithDefault(msg, 5, 0),
        environmentId: jspb.Message.getFieldWithDefault(msg, 6, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.tag.Tag}
 */
proto.bucketeer.tag.Tag.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.tag.Tag();
  return proto.bucketeer.tag.Tag.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.tag.Tag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.tag.Tag}
 */
proto.bucketeer.tag.Tag.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setCreatedAt(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setUpdatedAt(value);
        break;
      case 5:
        var value = /** @type {!proto.bucketeer.tag.Tag.EntityType} */ (
          reader.readEnum()
        );
        msg.setEntityType(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setEnvironmentId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.tag.Tag.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.tag.Tag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.tag.Tag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.tag.Tag.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(4, f);
  }
  f = message.getEntityType();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getEnvironmentId();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * @enum {number}
 */
proto.bucketeer.tag.Tag.EntityType = {
  UNKNOWN: 0,
  FEATURE_FLAG: 1,
  ACCOUNT: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.tag.Tag.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.bucketeer.tag.Tag.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional int64 created_at = 3;
 * @return {number}
 */
proto.bucketeer.tag.Tag.prototype.getCreatedAt = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setCreatedAt = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional int64 updated_at = 4;
 * @return {number}
 */
proto.bucketeer.tag.Tag.prototype.getUpdatedAt = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};

/**
 * optional EntityType entity_type = 5;
 * @return {!proto.bucketeer.tag.Tag.EntityType}
 */
proto.bucketeer.tag.Tag.prototype.getEntityType = function () {
  return /** @type {!proto.bucketeer.tag.Tag.EntityType} */ (
    jspb.Message.getFieldWithDefault(this, 5, 0)
  );
};

/**
 * @param {!proto.bucketeer.tag.Tag.EntityType} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setEntityType = function (value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};

/**
 * optional string environment_id = 6;
 * @return {string}
 */
proto.bucketeer.tag.Tag.prototype.getEnvironmentId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.tag.Tag} returns this
 */
proto.bucketeer.tag.Tag.prototype.setEnvironmentId = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

goog.object.extend(exports, proto.bucketeer.tag);
