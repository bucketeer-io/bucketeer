// Code generated by MockGen. DO NOT EDIT.
// Source: evaluation_event.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	client "github.com/bucketeer-io/bucketeer/proto/event/client"
	gomock "github.com/golang/mock/gomock"
)

// MockEvaluationEventStorage is a mock of EvaluationEventStorage interface.
type MockEvaluationEventStorage struct {
	ctrl     *gomock.Controller
	recorder *MockEvaluationEventStorageMockRecorder
}

// MockEvaluationEventStorageMockRecorder is the mock recorder for MockEvaluationEventStorage.
type MockEvaluationEventStorageMockRecorder struct {
	mock *MockEvaluationEventStorage
}

// NewMockEvaluationEventStorage creates a new mock instance.
func NewMockEvaluationEventStorage(ctrl *gomock.Controller) *MockEvaluationEventStorage {
	mock := &MockEvaluationEventStorage{ctrl: ctrl}
	mock.recorder = &MockEvaluationEventStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEvaluationEventStorage) EXPECT() *MockEvaluationEventStorageMockRecorder {
	return m.recorder
}

// CreateEvaluationEvent mocks base method.
func (m *MockEvaluationEventStorage) CreateEvaluationEvent(ctx context.Context, event *client.EvaluationEvent, id, environmentNamespace string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEvaluationEvent", ctx, event, id, environmentNamespace)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateEvaluationEvent indicates an expected call of CreateEvaluationEvent.
func (mr *MockEvaluationEventStorageMockRecorder) CreateEvaluationEvent(ctx, event, id, environmentNamespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEvaluationEvent", reflect.TypeOf((*MockEvaluationEventStorage)(nil).CreateEvaluationEvent), ctx, event, id, environmentNamespace)
}
