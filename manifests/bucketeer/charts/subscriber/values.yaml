image:
  repository: ghcr.io/bucketeer-io/bucketeer-subscriber
  pullPolicy: IfNotPresent

namespace: default
fullnameOverride: "subscriber"


env:
  project:
  profile: true
  gcpEnabled: true
  mysqlUser:
  mysqlPass:
  mysqlHost:
  mysqlPort:
  mysqlDbName:
  mysqlDbOpenConns: 50
  pubsubEmulatorHost:
  notificationService: localhost:9001
  environmentService: localhost:9001
  pushService: localhost:9001
  autoOpsService: localhost:9001
  experimentService: localhost:9001
  featureService: localhost:9001
  batchService: localhost:9001
  webURL:
  logLevel: info
  port: 9090
  metricsPort: 9002
  refreshInterval: 10m
  # redis settings
  persistentRedis:
    serverName:
    addr:
    poolMaxIdle: 25
    poolMaxActive: 25
  nonPersistentRedis:
    serverName:
    addr:
    poolMaxIdle: 25
    poolMaxActive: 25

affinity: {}

nodeSelector: {}

pdb:
  enabled:
  maxUnavailable: 50%

hpa:
  enabled:
  minReplicas:
  maxReplicas:
  metrics:
    cpu:
      targetAverageUtilization:

envoy:
  image:
    repository: ghcr.io/bucketeer-io/bucketeer-envoy
    tag: v1.31.0
    pullPolicy: IfNotPresent
  lbPolicy: LEAST_REQUEST
  config:
  adminPort: 8001
  resources: {}

tls:
  service:
    secret:
    cert:
    key:

serviceToken:
  secret:

service:
  type: ClusterIP
  clusterIP: None

health:
  livenessProbe:
    initialDelaySeconds: 10
    periodSeconds: 3
    failureThreshold: 5
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 3
    failureThreshold: 2

resources: {}

serviceAccount:
  annotations: {}

subscribers:
  # This is the processor's name. It must match the same name defined in the
  # pkg/subscriber/processor/processors.go
  auditLogPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  domainEventInformer:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  evaluationCountEventPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  metricsEventPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  pushSender:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 500
    pullerMaxOutstandingBytes: 50000000
    maxMps: 100
    workerNum: 1
  segmentUserPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  userEventPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 10
    pullerMaxOutstandingMessages: 10000
    pullerMaxOutstandingBytes: 100000000
    maxMps: 1000
    workerNum: 5

onDemandSubscribers:
  evaluationCountEventDWHPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 100000000
    maxMps: 100
    workerNum: 1
    checkInterval: 10
  evaluationCountEventOPSPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 100000000
    maxMps: 100
    workerNum: 1
    checkInterval: 10
  goalCountEventDWHPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 100000000
    maxMps: 100
    workerNum: 1
    checkInterval: 10
  goalCountEventOPSPersister:
    project:
    topic:
    subscription:
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 100000000
    maxMps: 100
    workerNum: 1
    checkInterval: 10

# This configuration is used for add custom params to Processors
processors:
  # This is the processor's name. It must match the same name defined in the
  # pkg/subscriber/processor/processors.go
  auditLogPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
  evaluationCountEventPersister:
    flushSize: 100
    flushInterval: 10
    writeCacheInterval: 10
  segmentUserPersister:
    domainEventProject:
    domainEventTopic:
    flushSize: 100
    flushInterval: 10
  userEventPersister:
    flushSize: 200
    flushInterval: 5

onDemandProcessors:
  evaluationCountEventDWHPersister:
    flushSize: 20
    flushInterval: 5
    flushTimeout: 30
    project:
    bigQueryDataSet:
    bigQueryBatchSize:
    timezone: UTC
  evaluationCountEventOPSPersister:
    flushSize: 20
    flushInterval: 5
    flushTimeout: 30
  goalCountEventDWHPersister:
    flushSize: 20
    flushInterval: 5
    flushTimeout: 30
    project:
    bigQueryDataSet:
    bigQueryBatchSize:
    timezone: UTC
  goalCountEventOPSPersister:
    flushSize: 20
    flushInterval: 5
    flushTimeout: 30
