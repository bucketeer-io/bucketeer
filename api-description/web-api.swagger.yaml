swagger: "2.0"
info:
  title: Bucketeer Web Service
  version: "1.0"
tags:
  - name: Authentication
host: ENDPOINT
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/account/change_api_key_name:
    post:
      summary: Change API Key Name
      description: Change the API Key Name. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.change_api_key_name
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountChangeAPIKeyNameResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountChangeAPIKeyNameRequest'
      tags:
        - API Key
  /v1/account/create_account:
    post:
      summary: Create
      description: Create an account to have access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.create_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateAccountV2Request'
      tags:
        - Account
  /v1/account/create_api_key:
    post:
      summary: Create
      description: Create an API key to be used on the client SDK. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.create_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateAPIKeyRequest'
      tags:
        - API Key
  /v1/account/create_search_filter:
    post:
      summary: Create Search Filter
      description: Create a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.create_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountCreateSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountCreateSearchFilterRequest'
      tags:
        - Account
  /v1/account/delete_account:
    post:
      summary: Delete
      description: Delete an account. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.delete_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDeleteAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDeleteAccountV2Request'
      tags:
        - Account
  /v1/account/delete_search_filter:
    post:
      summary: Delete Search Filter
      description: Delete a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.delete_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDeleteSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDeleteSearchFilterRequest'
      tags:
        - Account
  /v1/account/disable_account:
    post:
      summary: Disable
      description: Disable an account to block access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.disable_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDisableAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDisableAccountV2Request'
      tags:
        - Account
  /v1/account/disable_api_key:
    post:
      summary: Disable
      description: Disable an API Key. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.disable_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountDisableAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountDisableAPIKeyRequest'
      tags:
        - API Key
  /v1/account/enable_account:
    post:
      summary: Enable
      description: Enable an account to have access to the console. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.enable_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountEnableAccountV2Response'
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountEnableAccountV2Request'
      tags:
        - Account
  /v1/account/enable_api_key:
    post:
      summary: Enable
      description: Enable an API Key. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.enable_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountEnableAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountEnableAPIKeyRequest'
      tags:
        - API Key
  /v1/account/get_account:
    post:
      summary: Get
      description: Get an account.
      operationId: web.v1.account.get_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetAccountV2Request'
      tags:
        - Account
  /v1/account/get_account_by_environment:
    post:
      summary: Get Account By Environment
      description: Get an account by environment.
      operationId: web.v1.account.get_account_by_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAccountV2ByEnvironmentIDResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetAccountV2ByEnvironmentIDRequest'
      tags:
        - Account
  /v1/account/get_api_key:
    post:
      summary: Get
      description: Get an API Key.
      operationId: web.v1.account.get_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAPIKeyResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetAPIKeyRequest'
      tags:
        - API Key
  /v1/account/get_environment_api_key:
    post:
      summary: Get Environment API Key
      description: Get an environment API Key.
      operationId: web.v1.account.get_environment_api_key
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetAPIKeyBySearchingAllEnvironmentsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetAPIKeyBySearchingAllEnvironmentsRequest'
      tags:
        - API Key
  /v1/account/get_me:
    post:
      summary: Get Me
      description: Get the user console account.
      operationId: web.v1.account.get_me
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMeResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: |-
            account is retrieved by IDToken.
            it's called from WebUI.
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetMeRequest'
      tags:
        - Account
  /v1/account/list_accounts:
    post:
      summary: List
      description: List accounts.
      operationId: web.v1.account.list_accounts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountListAccountsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountListAccountsV2Request'
      tags:
        - Account
  /v1/account/list_api_keys:
    post:
      summary: List
      description: List API Keys.
      operationId: web.v1.account.list_api_keys
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountListAPIKeysResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountListAPIKeysRequest'
      tags:
        - API Key
  /v1/account/my_organizations:
    post:
      summary: Get My Organizations
      description: Get all the organizations for a specific user.
      operationId: web.v1.account.my_organizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsRequest'
      tags:
        - Account
  /v1/account/my_organizations_by_email:
    post:
      summary: Get My Organizations By Email
      description: Get all the organizations by email.
      operationId: web.v1.account.my_organizations_by_email
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          description: |-
            Retrieve the organization to which the account belongs by email.
            it's called from another microservice.
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountGetMyOrganizationsByEmailRequest'
      tags:
        - Account
  /v1/account/update_account:
    post:
      summary: Update
      description: Update an account. To call this API, you need an `ADMIN` role.
      operationId: web.v1.account.update_account
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountUpdateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountUpdateAccountV2Request'
      tags:
        - Account
  /v1/account/update_search_filter:
    post:
      summary: Update Search Filter
      description: Update a search filter. To call this API, you need an `VIEWER` role.
      operationId: web.v1.account.update_search_filter
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/accountUpdateSearchFilterResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/accountUpdateSearchFilterRequest'
      tags:
        - Account
  /v1/auth/authentication_url:
    post:
      summary: Get Authentication URL
      description: |-
        The OAuth credentials must be configured on the server to call this API. It will return the Authentication URL.
        Currently, we only support Google.
      operationId: web.v1.auth.authentication_url
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authGetAuthenticationURLResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authGetAuthenticationURLRequest'
      tags:
        - Authentication
  /v1/auth/exchange_token:
    post:
      summary: Exchange Token
      description: |-
        Exchange the token from the OAuth provider to the Bucketeer token.
        Currently, we only support Google.
      operationId: web.v1.auth.exchange_token
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authExchangeTokenResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authExchangeTokenRequest'
      tags:
        - Authentication
  /v1/auth/refresh_token:
    post:
      summary: Refresh Token
      description: Refresh the Bucketeer token maintained by the web console.
      operationId: web.v1.auth.refresh_token
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authRefreshTokenResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authRefreshTokenRequest'
      tags:
        - Authentication
  /v1/auth/signin:
    post:
      summary: Sign In
      description: Sign in on the web console using an email and password.
      operationId: web.v1.auth.signin
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/authSignInResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/authSignInRequest'
      tags:
        - Authentication
  /v1/environment/archive_environment:
    post:
      summary: Archive
      description: Archive an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.archive_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentArchiveEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentArchiveEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/archive_organization:
    post:
      summary: Archive
      description: Archive an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.archive_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentArchiveOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentArchiveOrganizationRequest'
      tags:
        - Organization
  /v1/environment/convert_trial_organization:
    post:
      summary: Convert Trial
      description: Convert a trial organization to a paid one. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.convert_trial_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentConvertTrialOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentConvertTrialOrganizationRequest'
      tags:
        - Organization
  /v1/environment/convert_trial_project:
    post:
      summary: Convert Trial
      description: Convert a trial project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.convert_trial_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentConvertTrialProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentConvertTrialProjectRequest'
      tags:
        - Project
  /v1/environment/create_environment:
    post:
      summary: Create
      description: Create an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/create_organization:
    post:
      summary: Create
      description: Create an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateOrganizationRequest'
      tags:
        - Organization
  /v1/environment/create_project:
    post:
      summary: Create
      description: Create a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateProjectRequest'
      tags:
        - Project
  /v1/environment/create_trial_project:
    post:
      summary: Create Trial
      description: Create a trial project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.create_trial_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentCreateTrialProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentCreateTrialProjectRequest'
      tags:
        - Project
  /v1/environment/disable_organization:
    post:
      summary: Disable
      description: Disable an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.disable_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentDisableOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentDisableOrganizationRequest'
      tags:
        - Organization
  /v1/environment/disable_project:
    post:
      summary: Disable
      description: Disable a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.disable_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentDisableProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentDisableProjectRequest'
      tags:
        - Project
  /v1/environment/enable_organization:
    post:
      summary: Enable
      description: Enable an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.enable_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentEnableOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentEnableOrganizationRequest'
      tags:
        - Organization
  /v1/environment/enable_project:
    post:
      summary: Enable
      description: Enable a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.enable_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentEnableProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentEnableProjectRequest'
      tags:
        - Project
  /v1/environment/get_environment:
    post:
      summary: Get
      description: Get an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.get_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentGetEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/get_organization:
    post:
      summary: Get
      description: Get an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.get_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentGetOrganizationRequest'
      tags:
        - Organization
  /v1/environment/get_project:
    post:
      summary: Get
      description: Get a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.get_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentGetProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentGetProjectRequest'
      tags:
        - Project
  /v1/environment/list_environments:
    post:
      summary: List
      description: List environments. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_environments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListEnvironmentsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentListEnvironmentsV2Request'
      tags:
        - Environment
  /v1/environment/list_organizations:
    post:
      summary: List
      description: List organizations. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_organizations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListOrganizationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentListOrganizationsRequest'
      tags:
        - Organization
  /v1/environment/list_projects:
    post:
      summary: List
      description: List projects. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.list_projects
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentListProjectsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentListProjectsRequest'
      tags:
        - Project
  /v1/environment/unarchive_environment:
    post:
      summary: Unarchive
      description: Unarchive an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.unarchive_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUnarchiveEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUnarchiveEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/unarchive_organization:
    post:
      summary: Unarchive
      description: Unarchive an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.unarchive_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUnarchiveOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUnarchiveOrganizationRequest'
      tags:
        - Organization
  /v1/environment/update_environment:
    post:
      summary: Update
      description: Update an environment. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.update_environment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateEnvironmentV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateEnvironmentV2Request'
      tags:
        - Environment
  /v1/environment/update_organization:
    post:
      summary: Update
      description: Update an organization. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.update_organization
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateOrganizationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateOrganizationRequest'
      tags:
        - Organization
  /v1/environment/update_project:
    post:
      summary: Update
      description: Update a project. To call this API, you need an `SYSTEM_ADMIN` role.
      operationId: web.v1.environment.update_project
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/environmentUpdateProjectResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        "503":
          description: Returned for internal errors.
          schema:
            $ref: '#/definitions/rpcStatus'
          examples:
            application/json:
              code: 13
              details: []
              message: internal
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/environmentUpdateProjectRequest'
      tags:
        - Project
definitions:
  AccountV2RoleOrganization:
    type: string
    enum:
      - Organization_UNASSIGNED
      - Organization_MEMBER
      - Organization_ADMIN
      - Organization_OWNER
    default: Organization_UNASSIGNED
  ChangeAccountV2EnvironmentRolesCommandWriteType:
    type: string
    enum:
      - WriteType_UNSPECIFIED
      - WriteType_OVERRIDE
      - WriteType_PATCH
    default: WriteType_UNSPECIFIED
  RoleEnvironment:
    type: string
    enum:
      - Environment_UNASSIGNED
      - Environment_VIEWER
      - Environment_EDITOR
    default: Environment_UNASSIGNED
  accountAPIKey:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
  accountAPIKeyRole:
    type: string
    enum:
      - UNKNOWN
      - SDK_CLIENT
      - SDK_SERVER
      - PUBLIC_API_READ_ONLY
      - PUBLIC_API_WRITE
      - PUBLIC_API_ADMIN
    default: UNKNOWN
    title: '- PUBLIC_API_ADMIN: For sensitive data'
  accountAccountV2:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationId:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
  accountAccountV2EnvironmentRole:
    type: object
    properties:
      environmentId:
        type: string
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountChangeAPIKeyNameCommand:
    type: object
    properties:
      name:
        type: string
  accountChangeAPIKeyNameRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountChangeAPIKeyNameCommand'
      environmentNamespace:
        type: string
  accountChangeAPIKeyNameResponse:
    type: object
  accountChangeAccountV2AvatarImageUrlCommand:
    type: object
    properties:
      avatarImageUrl:
        type: string
  accountChangeAccountV2EnvironmentRolesCommand:
    type: object
    properties:
      roles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      writeType:
        $ref: '#/definitions/ChangeAccountV2EnvironmentRolesCommandWriteType'
  accountChangeAccountV2NameCommand:
    type: object
    properties:
      name:
        type: string
  accountChangeAccountV2OrganizationRoleCommand:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccountV2RoleOrganization'
  accountChangeDefaultSearchFilterCommand:
    type: object
    properties:
      id:
        type: string
      defaultFilter:
        type: boolean
  accountChangeSearchFilterNameCommand:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  accountChangeSearchFilterQueryCommand:
    type: object
    properties:
      id:
        type: string
      query:
        type: string
  accountConsoleAccount:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarUrl:
        type: string
      isSystemAdmin:
        type: boolean
      organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountConsoleAccountEnvironmentRole'
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
  accountConsoleAccountEnvironmentRole:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
      project:
        $ref: '#/definitions/environmentProject'
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountCreateAPIKeyCommand:
    type: object
    properties:
      name:
        type: string
      role:
        $ref: '#/definitions/accountAPIKeyRole'
  accountCreateAPIKeyRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/accountCreateAPIKeyCommand'
      environmentNamespace:
        type: string
  accountCreateAPIKeyResponse:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/accountAPIKey'
  accountCreateAccountV2Command:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
  accountCreateAccountV2Request:
    type: object
    properties:
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountCreateAccountV2Command'
  accountCreateAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountCreateSearchFilterCommand:
    type: object
    properties:
      name:
        type: string
      query:
        type: string
      filterTargetType:
        $ref: '#/definitions/accountFilterTargetType'
      environmentId:
        type: string
      defaultFilter:
        type: boolean
  accountCreateSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      command:
        $ref: '#/definitions/accountCreateSearchFilterCommand'
  accountCreateSearchFilterResponse:
    type: object
  accountDeleteAccountV2Command:
    type: object
  accountDeleteAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountDeleteAccountV2Command'
  accountDeleteAccountV2Response:
    type: object
  accountDeleteSearchFilterCommand:
    type: object
    properties:
      id:
        type: string
  accountDeleteSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      command:
        $ref: '#/definitions/accountDeleteSearchFilterCommand'
  accountDeleteSearchFilterResponse:
    type: object
  accountDisableAPIKeyCommand:
    type: object
  accountDisableAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountDisableAPIKeyCommand'
      environmentNamespace:
        type: string
  accountDisableAPIKeyResponse:
    type: object
  accountDisableAccountV2Command:
    type: object
  accountDisableAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountDisableAccountV2Command'
  accountDisableAccountV2Response:
    type: object
  accountEnableAPIKeyCommand:
    type: object
  accountEnableAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/accountEnableAPIKeyCommand'
      environmentNamespace:
        type: string
  accountEnableAPIKeyResponse:
    type: object
  accountEnableAccountV2Command:
    type: object
  accountEnableAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      command:
        $ref: '#/definitions/accountEnableAccountV2Command'
  accountEnableAccountV2Response:
    type: object
  accountEnvironmentAPIKey:
    type: object
    properties:
      environmentNamespace:
        type: string
      apiKey:
        $ref: '#/definitions/accountAPIKey'
      environmentDisabled:
        type: boolean
      projectId:
        type: string
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
      projectUrlCode:
        type: string
  accountFilterTargetType:
    type: string
    enum:
      - UNKNOWN
      - FEATURE_FLAG
    default: UNKNOWN
  accountGetAPIKeyBySearchingAllEnvironmentsRequest:
    type: object
    properties:
      id:
        type: string
  accountGetAPIKeyBySearchingAllEnvironmentsResponse:
    type: object
    properties:
      environmentApiKey:
        $ref: '#/definitions/accountEnvironmentAPIKey'
  accountGetAPIKeyRequest:
    type: object
    properties:
      id:
        type: string
      environmentNamespace:
        type: string
  accountGetAPIKeyResponse:
    type: object
    properties:
      apiKey:
        $ref: '#/definitions/accountAPIKey'
  accountGetAccountV2ByEnvironmentIDRequest:
    type: object
    properties:
      email:
        type: string
      environmentId:
        type: string
  accountGetAccountV2ByEnvironmentIDResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountGetAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
  accountGetAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  accountGetMeRequest:
    type: object
    properties:
      organizationId:
        type: string
    description: |-
      account is retrieved by IDToken.
      it's called from WebUI.
  accountGetMeResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountConsoleAccount'
  accountGetMyOrganizationsByEmailRequest:
    type: object
    properties:
      email:
        type: string
    description: |-
      Retrieve the organization to which the account belongs by email.
      it's called from another microservice.
  accountGetMyOrganizationsRequest:
    type: object
  accountGetMyOrganizationsResponse:
    type: object
    properties:
      organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerenvironmentOrganization'
  accountListAPIKeysRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
      environmentNamespace:
        type: string
      orderBy:
        $ref: '#/definitions/accountListAPIKeysRequestOrderBy'
      orderDirection:
        $ref: '#/definitions/accountListAPIKeysRequestOrderDirection'
      searchKeyword:
        type: string
      disabled:
        type: boolean
  accountListAPIKeysRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  accountListAPIKeysRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  accountListAPIKeysResponse:
    type: object
    properties:
      apiKeys:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAPIKey'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  accountListAccountsV2Request:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
      organizationId:
        type: string
      orderBy:
        $ref: '#/definitions/accountListAccountsV2RequestOrderBy'
      orderDirection:
        $ref: '#/definitions/accountListAccountsV2RequestOrderDirection'
      searchKeyword:
        type: string
      disabled:
        type: boolean
      organizationRole:
        type: integer
        format: int32
      environmentId:
        type: string
      environmentRole:
        type: integer
        format: int32
  accountListAccountsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - EMAIL
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  accountListAccountsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  accountListAccountsV2Response:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  accountSearchFilter:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      query:
        type: string
      filterTargetType:
        $ref: '#/definitions/accountFilterTargetType'
      environmentId:
        type: string
      defaultFilter:
        type: boolean
  accountUpdateAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      changeNameCommand:
        $ref: '#/definitions/accountChangeAccountV2NameCommand'
      changeAvatarUrlCommand:
        $ref: '#/definitions/accountChangeAccountV2AvatarImageUrlCommand'
      changeOrganizationRoleCommand:
        $ref: '#/definitions/accountChangeAccountV2OrganizationRoleCommand'
      changeEnvironmentRolesCommand:
        $ref: '#/definitions/accountChangeAccountV2EnvironmentRolesCommand'
  accountUpdateAccountV2Response:
    type: object
  accountUpdateSearchFilterRequest:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      environmentId:
        type: string
      changeNameCommand:
        $ref: '#/definitions/accountChangeSearchFilterNameCommand'
      changeQueryCommand:
        $ref: '#/definitions/accountChangeSearchFilterQueryCommand'
      changeDefaultFilterCommand:
        $ref: '#/definitions/accountChangeDefaultSearchFilterCommand'
  accountUpdateSearchFilterResponse:
    type: object
  authAuthType:
    type: string
    enum:
      - AUTH_TYPE_UNSPECIFIED
      - AUTH_TYPE_USER_PASSWORD
      - AUTH_TYPE_GOOGLE
      - AUTH_TYPE_GITHUB
    default: AUTH_TYPE_UNSPECIFIED
  authExchangeTokenRequest:
    type: object
    properties:
      code:
        type: string
      redirectUrl:
        type: string
      type:
        $ref: '#/definitions/authAuthType'
  authExchangeTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authGetAuthenticationURLRequest:
    type: object
    properties:
      state:
        type: string
      redirectUrl:
        type: string
      type:
        $ref: '#/definitions/authAuthType'
  authGetAuthenticationURLResponse:
    type: object
    properties:
      url:
        type: string
  authRefreshTokenRequest:
    type: object
    properties:
      refreshToken:
        type: string
  authRefreshTokenResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authSignInRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  authSignInResponse:
    type: object
    properties:
      token:
        $ref: '#/definitions/authToken'
  authToken:
    type: object
    properties:
      accessToken:
        type: string
      tokenType:
        type: string
      refreshToken:
        type: string
      expiry:
        type: string
        format: int64
  bucketeerenvironmentOrganization:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      archived:
        type: boolean
      trial:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      systemAdmin:
        type: boolean
      projectCount:
        type: integer
        format: int32
      environmentCount:
        type: integer
        format: int32
      userCount:
        type: integer
        format: int32
  environmentArchiveEnvironmentV2Command:
    type: object
  environmentArchiveEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentArchiveEnvironmentV2Command'
  environmentArchiveEnvironmentV2Response:
    type: object
  environmentArchiveOrganizationCommand:
    type: object
  environmentArchiveOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentArchiveOrganizationCommand'
  environmentArchiveOrganizationResponse:
    type: object
  environmentChangeDescriptionEnvironmentV2Command:
    type: object
    properties:
      description:
        type: string
  environmentChangeDescriptionOrganizationCommand:
    type: object
    properties:
      description:
        type: string
  environmentChangeDescriptionProjectCommand:
    type: object
    properties:
      description:
        type: string
  environmentChangeNameOrganizationCommand:
    type: object
    properties:
      name:
        type: string
  environmentChangeRequireCommentCommand:
    type: object
    properties:
      requireComment:
        type: boolean
  environmentConvertTrialOrganizationCommand:
    type: object
  environmentConvertTrialOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentConvertTrialOrganizationCommand'
  environmentConvertTrialOrganizationResponse:
    type: object
  environmentConvertTrialProjectCommand:
    type: object
  environmentConvertTrialProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentConvertTrialProjectCommand'
  environmentConvertTrialProjectResponse:
    type: object
  environmentCreateEnvironmentV2Command:
    type: object
    properties:
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      projectId:
        type: string
      requireComment:
        type: boolean
  environmentCreateEnvironmentV2Request:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateEnvironmentV2Command'
  environmentCreateEnvironmentV2Response:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
  environmentCreateOrganizationCommand:
    type: object
    properties:
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      isTrial:
        type: boolean
      isSystemAdmin:
        type: boolean
  environmentCreateOrganizationRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateOrganizationCommand'
  environmentCreateOrganizationResponse:
    type: object
    properties:
      Organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
  environmentCreateProjectCommand:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
        title: optional
      name:
        type: string
      urlCode:
        type: string
    description: 'TODO: add organizationID once we support organization create UI.'
  environmentCreateProjectRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateProjectCommand'
  environmentCreateProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/environmentProject'
  environmentCreateTrialProjectCommand:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      name:
        type: string
      urlCode:
        type: string
  environmentCreateTrialProjectRequest:
    type: object
    properties:
      command:
        $ref: '#/definitions/environmentCreateTrialProjectCommand'
  environmentCreateTrialProjectResponse:
    type: object
  environmentDisableOrganizationCommand:
    type: object
  environmentDisableOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentDisableOrganizationCommand'
  environmentDisableOrganizationResponse:
    type: object
  environmentDisableProjectCommand:
    type: object
  environmentDisableProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentDisableProjectCommand'
  environmentDisableProjectResponse:
    type: object
  environmentEnableOrganizationCommand:
    type: object
  environmentEnableOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentEnableOrganizationCommand'
  environmentEnableOrganizationResponse:
    type: object
  environmentEnableProjectCommand:
    type: object
  environmentEnableProjectRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentEnableProjectCommand'
  environmentEnableProjectResponse:
    type: object
  environmentEnvironmentV2:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      projectId:
        type: string
      archived:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      organizationId:
        type: string
      requireComment:
        type: boolean
      featureFlagCount:
        type: integer
        format: int32
  environmentGetEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
  environmentGetEnvironmentV2Response:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
  environmentGetOrganizationRequest:
    type: object
    properties:
      id:
        type: string
  environmentGetOrganizationResponse:
    type: object
    properties:
      organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
  environmentGetProjectRequest:
    type: object
    properties:
      id:
        type: string
  environmentGetProjectResponse:
    type: object
    properties:
      project:
        $ref: '#/definitions/environmentProject'
  environmentListEnvironmentsV2Request:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
      orderBy:
        $ref: '#/definitions/environmentListEnvironmentsV2RequestOrderBy'
      orderDirection:
        $ref: '#/definitions/environmentListEnvironmentsV2RequestOrderDirection'
      projectId:
        type: string
      archived:
        type: boolean
      searchKeyword:
        type: string
      organizationId:
        type: string
  environmentListEnvironmentsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - NAME
      - URL_CODE
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  environmentListEnvironmentsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListEnvironmentsV2Response:
    type: object
    properties:
      environments:
        type: array
        items:
          type: object
          $ref: '#/definitions/environmentEnvironmentV2'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentListOrganizationsRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
      orderBy:
        $ref: '#/definitions/environmentListOrganizationsRequestOrderBy'
      orderDirection:
        $ref: '#/definitions/environmentListOrganizationsRequestOrderDirection'
      searchKeyword:
        type: string
      disabled:
        type: boolean
      archived:
        type: boolean
  environmentListOrganizationsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
      - URL_CODE
    default: DEFAULT
  environmentListOrganizationsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListOrganizationsResponse:
    type: object
    properties:
      Organizations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerenvironmentOrganization'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentListProjectsRequest:
    type: object
    properties:
      pageSize:
        type: string
        format: int64
      cursor:
        type: string
      orderBy:
        $ref: '#/definitions/environmentListProjectsRequestOrderBy'
      orderDirection:
        $ref: '#/definitions/environmentListProjectsRequestOrderDirection'
      searchKeyword:
        type: string
      disabled:
        type: boolean
      organizationIds:
        type: array
        items:
          type: string
  environmentListProjectsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - ID
      - CREATED_AT
      - UPDATED_AT
      - NAME
      - URL_CODE
    default: DEFAULT
  environmentListProjectsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  environmentListProjectsResponse:
    type: object
    properties:
      projects:
        type: array
        items:
          type: object
          $ref: '#/definitions/environmentProject'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  environmentProject:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      trial:
        type: boolean
      creatorEmail:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      name:
        type: string
      urlCode:
        type: string
      organizationId:
        type: string
      environmentCount:
        type: integer
        format: int32
      featureFlagCount:
        type: integer
        format: int32
  environmentRenameEnvironmentV2Command:
    type: object
    properties:
      name:
        type: string
  environmentRenameProjectCommand:
    type: object
    properties:
      name:
        type: string
  environmentUnarchiveEnvironmentV2Command:
    type: object
  environmentUnarchiveEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentUnarchiveEnvironmentV2Command'
  environmentUnarchiveEnvironmentV2Response:
    type: object
  environmentUnarchiveOrganizationCommand:
    type: object
  environmentUnarchiveOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      command:
        $ref: '#/definitions/environmentUnarchiveOrganizationCommand'
  environmentUnarchiveOrganizationResponse:
    type: object
  environmentUpdateEnvironmentV2Request:
    type: object
    properties:
      id:
        type: string
      renameCommand:
        $ref: '#/definitions/environmentRenameEnvironmentV2Command'
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionEnvironmentV2Command'
      changeRequireCommentCommand:
        $ref: '#/definitions/environmentChangeRequireCommentCommand'
  environmentUpdateEnvironmentV2Response:
    type: object
  environmentUpdateOrganizationRequest:
    type: object
    properties:
      id:
        type: string
      renameCommand:
        $ref: '#/definitions/environmentChangeNameOrganizationCommand'
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionOrganizationCommand'
  environmentUpdateOrganizationResponse:
    type: object
  environmentUpdateProjectRequest:
    type: object
    properties:
      id:
        type: string
      changeDescriptionCommand:
        $ref: '#/definitions/environmentChangeDescriptionProjectCommand'
      renameCommand:
        $ref: '#/definitions/environmentRenameProjectCommand'
  environmentUpdateProjectResponse:
    type: object
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
