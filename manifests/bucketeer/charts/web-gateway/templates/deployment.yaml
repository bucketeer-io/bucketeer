apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "web-gateway.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "web-gateway.name" . }}
    chart: {{ template "web-gateway.chart" . }}
    release: {{ template "web-gateway.fullname" . }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "web-gateway.name" . }}
      release: {{ template "web-gateway.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "web-gateway.name" . }}
        release: {{ template "web-gateway.fullname" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/envoy-configmap.yaml") . | sha256sum }}
    spec:
      volumes:
        - name: envoy-config
          configMap:
            name: {{ template "web-gateway.fullname" . }}-envoy-config
        - name: envoy-account-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-account
        - name: envoy-auditlog-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-auditlog
        - name: envoy-auth-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-auth
        - name: envoy-autoops-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-autoops
        - name: envoy-environment-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-environment
        - name: envoy-eventcounter-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-eventcounter
        - name: envoy-experiment-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-experiment
        - name: envoy-feature-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-feature
        - name: envoy-notification-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-notification
        - name: envoy-push-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-push
        - name: envoy-migration-descriptor-secret
          secret:
            secretName: {{ template "web-gateway.fullname" . }}-migration
        - name: service-cert-secret
          secret:
            secretName: {{ template "service-cert-secret" . }}
      {{- if .Values.serviceAccount.annotations }}
      serviceAccountName: {{ template "web-gateway.fullname" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "busybox wget -O- --post-data='{}' http://localhost:$ENVOY_ADMIN_PORT/healthcheck/fail; sleep 15"
          command: ["envoy"]
          args:
            - "-c"
            - "/usr/local/conf/config.yaml"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ENVOY_ADMIN_PORT
              value: "{{ .Values.envoy.adminPort }}"
          volumeMounts:
            - name: envoy-config
              mountPath: /usr/local/conf
              readOnly: true
            - name: envoy-account-descriptor-secret
              mountPath: /usr/local/account-secret
              readOnly: true
            - name: envoy-auditlog-descriptor-secret
              mountPath: /usr/local/auditlog-secret
              readOnly: true
            - name: envoy-auth-descriptor-secret
              mountPath: /usr/local/auth-secret
              readOnly: true
            - name: envoy-autoops-descriptor-secret
              mountPath: /usr/local/autoops-secret
              readOnly: true
            - name: envoy-environment-descriptor-secret
              mountPath: /usr/local/environment-secret
              readOnly: true
            - name: envoy-eventcounter-descriptor-secret
              mountPath: /usr/local/eventcounter-secret
              readOnly: true
            - name: envoy-experiment-descriptor-secret
              mountPath: /usr/local/experiment-secret
              readOnly: true
            - name: envoy-feature-descriptor-secret
              mountPath: /usr/local/feature-secret
              readOnly: true
            - name: envoy-notification-descriptor-secret
              mountPath: /usr/local/notification-secret
              readOnly: true
            - name: envoy-push-descriptor-secret
              mountPath: /usr/local/push-secret
              readOnly: true
            - name: envoy-migration-descriptor-secret
              mountPath: /usr/local/migration-secret
              readOnly: true
            - name: service-cert-secret
              mountPath: /usr/local/certs/service
              readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.service.externalPort }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.envoy.adminPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.health.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.health.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.health.livenessProbe.failureThreshold }}
            httpGet:
              path: /ready
              port: admin
              scheme: HTTP
          readinessProbe:
            initialDelaySeconds: {{ .Values.health.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.health.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.health.readinessProbe.failureThreshold }}
            httpGet:
              path: /ready
              port: admin
              scheme: HTTP
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  strategy:
    type: RollingUpdate
