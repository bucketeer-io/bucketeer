// source: proto/team/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
  (typeof globalThis !== 'undefined' && globalThis) ||
  (typeof window !== 'undefined' && window) ||
  (typeof global !== 'undefined' && global) ||
  (typeof self !== 'undefined' && self) ||
  function () {
    return this;
  }.call(null) ||
  Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_field_behavior_pb = require('../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var proto_team_team_pb = require('../../proto/team/team_pb.js');
goog.object.extend(proto, proto_team_team_pb);
goog.exportSymbol('proto.bucketeer.team.CreateTeamRequest', null, global);
goog.exportSymbol('proto.bucketeer.team.CreateTeamResponse', null, global);
goog.exportSymbol('proto.bucketeer.team.DeleteTeamRequest', null, global);
goog.exportSymbol('proto.bucketeer.team.DeleteTeamResponse', null, global);
goog.exportSymbol('proto.bucketeer.team.ListTeamsRequest', null, global);
goog.exportSymbol(
  'proto.bucketeer.team.ListTeamsRequest.OrderBy',
  null,
  global
);
goog.exportSymbol(
  'proto.bucketeer.team.ListTeamsRequest.OrderDirection',
  null,
  global
);
goog.exportSymbol('proto.bucketeer.team.ListTeamsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.CreateTeamRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.team.CreateTeamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.CreateTeamRequest.displayName =
    'proto.bucketeer.team.CreateTeamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.CreateTeamResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.team.CreateTeamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.CreateTeamResponse.displayName =
    'proto.bucketeer.team.CreateTeamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.DeleteTeamRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.team.DeleteTeamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.DeleteTeamRequest.displayName =
    'proto.bucketeer.team.DeleteTeamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.DeleteTeamResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.team.DeleteTeamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.DeleteTeamResponse.displayName =
    'proto.bucketeer.team.DeleteTeamResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.ListTeamsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.team.ListTeamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.ListTeamsRequest.displayName =
    'proto.bucketeer.team.ListTeamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.team.ListTeamsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.bucketeer.team.ListTeamsResponse.repeatedFields_,
    null
  );
};
goog.inherits(proto.bucketeer.team.ListTeamsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.team.ListTeamsResponse.displayName =
    'proto.bucketeer.team.ListTeamsResponse';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.CreateTeamRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.CreateTeamRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.CreateTeamRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.CreateTeamRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        name: jspb.Message.getFieldWithDefault(msg, 1, ''),
        description: jspb.Message.getFieldWithDefault(msg, 2, ''),
        organizationId: jspb.Message.getFieldWithDefault(msg, 3, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.CreateTeamRequest}
 */
proto.bucketeer.team.CreateTeamRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.CreateTeamRequest();
  return proto.bucketeer.team.CreateTeamRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.CreateTeamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.CreateTeamRequest}
 */
proto.bucketeer.team.CreateTeamRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setName(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setOrganizationId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.CreateTeamRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.team.CreateTeamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.CreateTeamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.CreateTeamRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.bucketeer.team.CreateTeamRequest.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.CreateTeamRequest} returns this
 */
proto.bucketeer.team.CreateTeamRequest.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string description = 2;
 * @return {string}
 */
proto.bucketeer.team.CreateTeamRequest.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.CreateTeamRequest} returns this
 */
proto.bucketeer.team.CreateTeamRequest.prototype.setDescription = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string organization_id = 3;
 * @return {string}
 */
proto.bucketeer.team.CreateTeamRequest.prototype.getOrganizationId =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 3, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.CreateTeamRequest} returns this
 */
proto.bucketeer.team.CreateTeamRequest.prototype.setOrganizationId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.CreateTeamResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.CreateTeamResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.CreateTeamResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.CreateTeamResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        team:
          (f = msg.getTeam()) &&
          proto_team_team_pb.Team.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.CreateTeamResponse}
 */
proto.bucketeer.team.CreateTeamResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.CreateTeamResponse();
  return proto.bucketeer.team.CreateTeamResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.CreateTeamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.CreateTeamResponse}
 */
proto.bucketeer.team.CreateTeamResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto_team_team_pb.Team();
        reader.readMessage(
          value,
          proto_team_team_pb.Team.deserializeBinaryFromReader
        );
        msg.setTeam(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.CreateTeamResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.bucketeer.team.CreateTeamResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.CreateTeamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.CreateTeamResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTeam();
  if (f != null) {
    writer.writeMessage(1, f, proto_team_team_pb.Team.serializeBinaryToWriter);
  }
};

/**
 * optional Team team = 1;
 * @return {?proto.bucketeer.team.Team}
 */
proto.bucketeer.team.CreateTeamResponse.prototype.getTeam = function () {
  return /** @type{?proto.bucketeer.team.Team} */ (
    jspb.Message.getWrapperField(this, proto_team_team_pb.Team, 1)
  );
};

/**
 * @param {?proto.bucketeer.team.Team|undefined} value
 * @return {!proto.bucketeer.team.CreateTeamResponse} returns this
 */
proto.bucketeer.team.CreateTeamResponse.prototype.setTeam = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.team.CreateTeamResponse} returns this
 */
proto.bucketeer.team.CreateTeamResponse.prototype.clearTeam = function () {
  return this.setTeam(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.team.CreateTeamResponse.prototype.hasTeam = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.DeleteTeamRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.DeleteTeamRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.DeleteTeamRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.DeleteTeamRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        organizationId: jspb.Message.getFieldWithDefault(msg, 2, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.DeleteTeamRequest}
 */
proto.bucketeer.team.DeleteTeamRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.DeleteTeamRequest();
  return proto.bucketeer.team.DeleteTeamRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.DeleteTeamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.DeleteTeamRequest}
 */
proto.bucketeer.team.DeleteTeamRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOrganizationId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.DeleteTeamRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.team.DeleteTeamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.DeleteTeamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.DeleteTeamRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.team.DeleteTeamRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.DeleteTeamRequest} returns this
 */
proto.bucketeer.team.DeleteTeamRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string organization_id = 2;
 * @return {string}
 */
proto.bucketeer.team.DeleteTeamRequest.prototype.getOrganizationId =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.DeleteTeamRequest} returns this
 */
proto.bucketeer.team.DeleteTeamRequest.prototype.setOrganizationId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.DeleteTeamResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.DeleteTeamResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.DeleteTeamResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.DeleteTeamResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.DeleteTeamResponse}
 */
proto.bucketeer.team.DeleteTeamResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.DeleteTeamResponse();
  return proto.bucketeer.team.DeleteTeamResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.DeleteTeamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.DeleteTeamResponse}
 */
proto.bucketeer.team.DeleteTeamResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.DeleteTeamResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.bucketeer.team.DeleteTeamResponse.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.DeleteTeamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.DeleteTeamResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.ListTeamsRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.ListTeamsRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.ListTeamsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.ListTeamsRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
        cursor: jspb.Message.getFieldWithDefault(msg, 2, ''),
        orderBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
        orderDirection: jspb.Message.getFieldWithDefault(msg, 4, 0),
        organizationId: jspb.Message.getFieldWithDefault(msg, 5, ''),
        searchKeyword: jspb.Message.getFieldWithDefault(msg, 6, '')
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.ListTeamsRequest}
 */
proto.bucketeer.team.ListTeamsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.ListTeamsRequest();
  return proto.bucketeer.team.ListTeamsRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.ListTeamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.ListTeamsRequest}
 */
proto.bucketeer.team.ListTeamsRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setPageSize(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setCursor(value);
        break;
      case 3:
        var value =
          /** @type {!proto.bucketeer.team.ListTeamsRequest.OrderBy} */ (
            reader.readEnum()
          );
        msg.setOrderBy(value);
        break;
      case 4:
        var value =
          /** @type {!proto.bucketeer.team.ListTeamsRequest.OrderDirection} */ (
            reader.readEnum()
          );
        msg.setOrderDirection(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setOrganizationId(value);
        break;
      case 6:
        var value = /** @type {string} */ (reader.readString());
        msg.setSearchKeyword(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.team.ListTeamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.ListTeamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.ListTeamsRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(1, f);
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getOrderBy();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getOrderDirection();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getOrganizationId();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getSearchKeyword();
  if (f.length > 0) {
    writer.writeString(6, f);
  }
};

/**
 * @enum {number}
 */
proto.bucketeer.team.ListTeamsRequest.OrderBy = {
  DEFAULT: 0,
  NAME: 1,
  CREATED_AT: 2,
  UPDATED_AT: 3,
  ORGANIZATION: 4
};

/**
 * @enum {number}
 */
proto.bucketeer.team.ListTeamsRequest.OrderDirection = {
  ASC: 0,
  DESC: 1
};

/**
 * optional int64 page_size = 1;
 * @return {number}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getPageSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setPageSize = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getCursor = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setCursor = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional OrderBy order_by = 3;
 * @return {!proto.bucketeer.team.ListTeamsRequest.OrderBy}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getOrderBy = function () {
  return /** @type {!proto.bucketeer.team.ListTeamsRequest.OrderBy} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  );
};

/**
 * @param {!proto.bucketeer.team.ListTeamsRequest.OrderBy} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setOrderBy = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional OrderDirection order_direction = 4;
 * @return {!proto.bucketeer.team.ListTeamsRequest.OrderDirection}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getOrderDirection =
  function () {
    return /** @type {!proto.bucketeer.team.ListTeamsRequest.OrderDirection} */ (
      jspb.Message.getFieldWithDefault(this, 4, 0)
    );
  };

/**
 * @param {!proto.bucketeer.team.ListTeamsRequest.OrderDirection} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setOrderDirection = function (
  value
) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * optional string organization_id = 5;
 * @return {string}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getOrganizationId =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 5, '')
    );
  };

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setOrganizationId = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional string search_keyword = 6;
 * @return {string}
 */
proto.bucketeer.team.ListTeamsRequest.prototype.getSearchKeyword = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.ListTeamsRequest} returns this
 */
proto.bucketeer.team.ListTeamsRequest.prototype.setSearchKeyword = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 6, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.team.ListTeamsResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.bucketeer.team.ListTeamsResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.bucketeer.team.ListTeamsResponse.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.bucketeer.team.ListTeamsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.bucketeer.team.ListTeamsResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        teamsList: jspb.Message.toObjectList(
          msg.getTeamsList(),
          proto_team_team_pb.Team.toObject,
          includeInstance
        ),
        nextCursor: jspb.Message.getFieldWithDefault(msg, 2, ''),
        totalCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.team.ListTeamsResponse}
 */
proto.bucketeer.team.ListTeamsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.team.ListTeamsResponse();
  return proto.bucketeer.team.ListTeamsResponse.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.team.ListTeamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.team.ListTeamsResponse}
 */
proto.bucketeer.team.ListTeamsResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto_team_team_pb.Team();
        reader.readMessage(
          value,
          proto_team_team_pb.Team.deserializeBinaryFromReader
        );
        msg.addTeams(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setNextCursor(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setTotalCount(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.team.ListTeamsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.team.ListTeamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.team.ListTeamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.team.ListTeamsResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getTeamsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_team_team_pb.Team.serializeBinaryToWriter
    );
  }
  f = message.getNextCursor();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(3, f);
  }
};

/**
 * repeated Team teams = 1;
 * @return {!Array<!proto.bucketeer.team.Team>}
 */
proto.bucketeer.team.ListTeamsResponse.prototype.getTeamsList = function () {
  return /** @type{!Array<!proto.bucketeer.team.Team>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_team_team_pb.Team, 1)
  );
};

/**
 * @param {!Array<!proto.bucketeer.team.Team>} value
 * @return {!proto.bucketeer.team.ListTeamsResponse} returns this
 */
proto.bucketeer.team.ListTeamsResponse.prototype.setTeamsList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.bucketeer.team.Team=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.team.Team}
 */
proto.bucketeer.team.ListTeamsResponse.prototype.addTeams = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.bucketeer.team.Team,
    opt_index
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.team.ListTeamsResponse} returns this
 */
proto.bucketeer.team.ListTeamsResponse.prototype.clearTeamsList = function () {
  return this.setTeamsList([]);
};

/**
 * optional string next_cursor = 2;
 * @return {string}
 */
proto.bucketeer.team.ListTeamsResponse.prototype.getNextCursor = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.bucketeer.team.ListTeamsResponse} returns this
 */
proto.bucketeer.team.ListTeamsResponse.prototype.setNextCursor = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional int64 total_count = 3;
 * @return {number}
 */
proto.bucketeer.team.ListTeamsResponse.prototype.getTotalCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.bucketeer.team.ListTeamsResponse} returns this
 */
proto.bucketeer.team.ListTeamsResponse.prototype.setTotalCount = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

goog.object.extend(exports, proto.bucketeer.team);
