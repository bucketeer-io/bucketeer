apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "api-gateway.fullname" . }}-envoy-config
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "api-gateway.name" . }}
    chart: {{ template "api-gateway.chart" . }}
    release: {{ template "api-gateway.fullname" . }}
    heritage: {{ .Release.Service }}
data:
  config.yaml: |-
    admin:
      access_log:
        - name: envoy.access_loggers.file
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
    static_resources:
      clusters:
        - name: api-gateway
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          health_checks:
            - grpc_health_check: {}
              healthy_threshold: 1
              interval: 10s
              interval_jitter: 1s
              no_traffic_interval: 2s
              timeout: 1s
              unhealthy_threshold: 2
          circuit_breakers:
            thresholds:
              - priority: DEFAULT
                max_retries: 3
                max_pending_requests: 3500
                max_requests: 3500
                max_connections: 3500
          load_assignment:
            cluster_name: api-gateway
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: localhost
                        port_value: 9090
          dns_lookup_family: V4_ONLY
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key
          type: strict_dns
        - name: api-gateway-rest-v1
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          health_checks:
            - http_health_check:
                path: /v1/gateway/health
                codec_client_type: 1 # http2.0
              healthy_threshold: 1
              interval: 10s
              interval_jitter: 1s
              no_traffic_interval: 2s
              timeout: 1s
              unhealthy_threshold: 2
          circuit_breakers:
            thresholds:
              - priority: DEFAULT
                max_retries: 3
                max_pending_requests: 3500
                max_requests: 3500
                max_connections: 3500
          load_assignment:
            cluster_name: api-gateway-rest-v1
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: localhost
                        port_value: 8000
          dns_lookup_family: V4_ONLY
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                  - certificate_chain:
                      filename: /usr/local/certs/service/tls.crt
                    private_key:
                      filename: /usr/local/certs/service/tls.key
          type: strict_dns
        - name: feature
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          health_checks:
            - grpc_health_check: {}
              healthy_threshold: 1
              interval: 10s
              interval_jitter: 1s
              no_traffic_interval: 2s
              timeout: 1s
              unhealthy_threshold: 2
          circuit_breakers:
            thresholds:
              - priority: DEFAULT
                max_retries: 3
                # we don't want to break a circuit by number of request, so set a large number.
                max_pending_requests: 100000000
                max_requests: 100000000
          load_assignment:
            cluster_name: feature
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: feature.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 9000
          dns_lookup_family: V4_ONLY
          lb_policy: least_request
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key
          type: strict_dns
        - name: account
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          health_checks:
            - grpc_health_check: {}
              healthy_threshold: 1
              interval: 10s
              interval_jitter: 1s
              no_traffic_interval: 2s
              timeout: 1s
              unhealthy_threshold: 2
          circuit_breakers:
            thresholds:
              - priority: DEFAULT
                max_retries: 3
                # we don't want to break a circuit by number of request, so set a large number.
                max_pending_requests: 100000000
                max_requests: 100000000
          load_assignment:
            cluster_name: account
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: account.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 9000
          dns_lookup_family: V4_ONLY
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key
          type: strict_dns
      listeners:
        - name: ingress
          address:
              socket_address:
                address: 0.0.0.0
                port_value: 9000
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: ingress_http
                  access_log:
                    name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                  codec_type: auto
                  common_http_protocol_options:
                    # set longer timeout than lb session timeout (600s)
                    idle_timeout: 620s
                  http_filters:
                    - name: envoy.filters.http.health_check
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                        cluster_min_healthy_percentages:
                          api-gateway:
                            value: 25
                        pass_through_mode: false
                        headers:
                          - name: :path
                            string_match:
                              exact: /health
                    - name: envoy.filters.http.cors
                    - name: envoy.filters.http.grpc_web
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        proto_descriptor: /usr/local/secret/gateway_proto_descriptor.pb
                        services:
                          - bucketeer.gateway.Gateway
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.router
                  route_config:
                    virtual_hosts:
                      - name: ingress_services
                        domains:
                          - "*"
                        cors:
                          allow_origin_string_match:
                            - prefix: "*"
                          allow_headers: "content-type, x-grpc-web, authorization"
                          allow_methods: "GET,POST"
                          allow_credentials: true
                          max_age: "86400"
                        routes:
                          - match:
                              prefix: /v1/gateway
                              headers:
                                - name: content-type
                                  string_match:
                                    exact: application/json
                            route:
                              cluster: api-gateway-rest-v1
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /
                            route:
                              cluster: api-gateway
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  require_client_certificate: true
                  common_tls_context:
                    alpn_protocols: ["h2"]
                    tls_certificates:
                      - certificate_chain:
                          filename: /usr/local/certs/service/tls.crt
                        private_key:
                          filename: /usr/local/certs/service/tls.key
        - name: egress
          address:
            socket_address:
              address: 127.0.0.1
              port_value: 9001
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: egress_http
                  access_log:
                    name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                  codec_type: auto
                  http_filters:
                    - name: envoy.filters.http.router
                  route_config:
                    virtual_hosts:
                      - name: egress_services
                        domains:
                          - "*"
                        routes:
                          - match:
                              headers:
                                - name: content-type
                                  string_match:
                                    exact: application/grpc
                              prefix: /bucketeer.feature.FeatureService
                            route:
                              cluster: feature
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              headers:
                                - name: content-type
                                  string_match:
                                    exact: application/grpc
                              prefix: /bucketeer.account.AccountService
                            route:
                              cluster: account
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  require_client_certificate: true
                  common_tls_context:
                    alpn_protocols: ["h2"]
                    tls_certificates:
                      - certificate_chain:
                          filename: /usr/local/certs/service/tls.crt
                        private_key:
                          filename: /usr/local/certs/service/tls.key
