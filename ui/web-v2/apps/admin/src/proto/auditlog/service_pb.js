// source: proto/auditlog/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var proto_auditlog_auditlog_pb = require('../../proto/auditlog/auditlog_pb.js');
goog.object.extend(proto, proto_auditlog_auditlog_pb);
goog.exportSymbol('proto.bucketeer.auditlog.ListAdminAuditLogsRequest', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAdminAuditLogsResponse', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAuditLogsRequest', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListAuditLogsResponse', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListFeatureHistoryRequest', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection', null, global);
goog.exportSymbol('proto.bucketeer.auditlog.ListFeatureHistoryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListAuditLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.auditlog.ListAuditLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListAuditLogsRequest.displayName = 'proto.bucketeer.auditlog.ListAuditLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListAuditLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.auditlog.ListAuditLogsResponse.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.auditlog.ListAuditLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListAuditLogsResponse.displayName = 'proto.bucketeer.auditlog.ListAuditLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.auditlog.ListAdminAuditLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListAdminAuditLogsRequest.displayName = 'proto.bucketeer.auditlog.ListAdminAuditLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.auditlog.ListAdminAuditLogsResponse.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.auditlog.ListAdminAuditLogsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListAdminAuditLogsResponse.displayName = 'proto.bucketeer.auditlog.ListAdminAuditLogsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.auditlog.ListFeatureHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListFeatureHistoryRequest.displayName = 'proto.bucketeer.auditlog.ListFeatureHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.auditlog.ListFeatureHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.auditlog.ListFeatureHistoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.auditlog.ListFeatureHistoryResponse.displayName = 'proto.bucketeer.auditlog.ListFeatureHistoryResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListAuditLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListAuditLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    environmentNamespace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderBy: jspb.Message.getFieldWithDefault(msg, 4, 0),
    orderDirection: jspb.Message.getFieldWithDefault(msg, 5, 0),
    searchKeyword: jspb.Message.getFieldWithDefault(msg, 6, ""),
    from: jspb.Message.getFieldWithDefault(msg, 7, 0),
    to: jspb.Message.getFieldWithDefault(msg, 8, 0),
    entityType: (f = msg.getEntityType()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListAuditLogsRequest;
  return proto.bucketeer.auditlog.ListAuditLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListAuditLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironmentNamespace(value);
      break;
    case 4:
      var value = /** @type {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy} */ (reader.readEnum());
      msg.setOrderBy(value);
      break;
    case 5:
      var value = /** @type {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection} */ (reader.readEnum());
      msg.setOrderDirection(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchKeyword(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setEntityType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListAuditLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListAuditLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnvironmentNamespace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderBy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getOrderDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSearchKeyword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getEntityType();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy = {
  DEFAULT: 0,
  TIMESTAMP: 1
};

/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection = {
  DESC: 0,
  ASC: 1
};

/**
 * optional int64 page_size = 1;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string environment_namespace = 3;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getEnvironmentNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setEnvironmentNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional OrderBy order_by = 4;
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getOrderBy = function() {
  return /** @type {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderBy} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional OrderDirection order_direction = 5;
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getOrderDirection = function() {
  return /** @type {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListAuditLogsRequest.OrderDirection} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setOrderDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string search_keyword = 6;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getSearchKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setSearchKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 from = 7;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 to = 8;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Int32Value entity_type = 9;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.getEntityType = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 9));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
*/
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.setEntityType = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.clearEntityType = function() {
  return this.setEntityType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.auditlog.ListAuditLogsRequest.prototype.hasEntityType = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListAuditLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListAuditLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    auditLogsList: jspb.Message.toObjectList(msg.getAuditLogsList(),
    proto_auditlog_auditlog_pb.AuditLog.toObject, includeInstance),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListAuditLogsResponse;
  return proto.bucketeer.auditlog.ListAuditLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListAuditLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_auditlog_auditlog_pb.AuditLog;
      reader.readMessage(value,proto_auditlog_auditlog_pb.AuditLog.deserializeBinaryFromReader);
      msg.addAuditLogs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListAuditLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListAuditLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuditLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_auditlog_auditlog_pb.AuditLog.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated AuditLog audit_logs = 1;
 * @return {!Array<!proto.bucketeer.auditlog.AuditLog>}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.getAuditLogsList = function() {
  return /** @type{!Array<!proto.bucketeer.auditlog.AuditLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_auditlog_auditlog_pb.AuditLog, 1));
};


/**
 * @param {!Array<!proto.bucketeer.auditlog.AuditLog>} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse} returns this
*/
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.setAuditLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bucketeer.auditlog.AuditLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.auditlog.AuditLog}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.addAuditLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bucketeer.auditlog.AuditLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.clearAuditLogsList = function() {
  return this.setAuditLogsList([]);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 total_count = 3;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAuditLogsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListAdminAuditLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    orderBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    orderDirection: jspb.Message.getFieldWithDefault(msg, 4, 0),
    searchKeyword: jspb.Message.getFieldWithDefault(msg, 5, ""),
    from: jspb.Message.getFieldWithDefault(msg, 6, 0),
    to: jspb.Message.getFieldWithDefault(msg, 7, 0),
    entityType: (f = msg.getEntityType()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListAdminAuditLogsRequest;
  return proto.bucketeer.auditlog.ListAdminAuditLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy} */ (reader.readEnum());
      msg.setOrderBy(value);
      break;
    case 4:
      var value = /** @type {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection} */ (reader.readEnum());
      msg.setOrderDirection(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchKeyword(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setEntityType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListAdminAuditLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrderBy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOrderDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSearchKeyword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getEntityType();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy = {
  DEFAULT: 0,
  TIMESTAMP: 1
};

/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection = {
  DESC: 0,
  ASC: 1
};

/**
 * optional int64 page_size = 1;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrderBy order_by = 3;
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getOrderBy = function() {
  return /** @type {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional OrderDirection order_direction = 4;
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getOrderDirection = function() {
  return /** @type {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setOrderDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string search_keyword = 5;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getSearchKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setSearchKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 from = 6;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 to = 7;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional google.protobuf.Int32Value entity_type = 8;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.getEntityType = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 8));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
*/
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.setEntityType = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsRequest} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.clearEntityType = function() {
  return this.setEntityType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsRequest.prototype.hasEntityType = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListAdminAuditLogsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    auditLogsList: jspb.Message.toObjectList(msg.getAuditLogsList(),
    proto_auditlog_auditlog_pb.AuditLog.toObject, includeInstance),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListAdminAuditLogsResponse;
  return proto.bucketeer.auditlog.ListAdminAuditLogsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_auditlog_auditlog_pb.AuditLog;
      reader.readMessage(value,proto_auditlog_auditlog_pb.AuditLog.deserializeBinaryFromReader);
      msg.addAuditLogs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListAdminAuditLogsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuditLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_auditlog_auditlog_pb.AuditLog.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated AuditLog audit_logs = 1;
 * @return {!Array<!proto.bucketeer.auditlog.AuditLog>}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.getAuditLogsList = function() {
  return /** @type{!Array<!proto.bucketeer.auditlog.AuditLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_auditlog_auditlog_pb.AuditLog, 1));
};


/**
 * @param {!Array<!proto.bucketeer.auditlog.AuditLog>} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} returns this
*/
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.setAuditLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bucketeer.auditlog.AuditLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.auditlog.AuditLog}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.addAuditLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bucketeer.auditlog.AuditLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.clearAuditLogsList = function() {
  return this.setAuditLogsList([]);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 total_count = 3;
 * @return {number}
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListAdminAuditLogsResponse} returns this
 */
proto.bucketeer.auditlog.ListAdminAuditLogsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListFeatureHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    cursor: jspb.Message.getFieldWithDefault(msg, 3, ""),
    environmentNamespace: jspb.Message.getFieldWithDefault(msg, 4, ""),
    orderBy: jspb.Message.getFieldWithDefault(msg, 5, 0),
    orderDirection: jspb.Message.getFieldWithDefault(msg, 6, 0),
    searchKeyword: jspb.Message.getFieldWithDefault(msg, 7, ""),
    from: jspb.Message.getFieldWithDefault(msg, 8, 0),
    to: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListFeatureHistoryRequest;
  return proto.bucketeer.auditlog.ListFeatureHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironmentNamespace(value);
      break;
    case 5:
      var value = /** @type {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy} */ (reader.readEnum());
      msg.setOrderBy(value);
      break;
    case 6:
      var value = /** @type {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection} */ (reader.readEnum());
      msg.setOrderDirection(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchKeyword(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListFeatureHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnvironmentNamespace();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrderBy();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getOrderDirection();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSearchKeyword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy = {
  DEFAULT: 0,
  TIMESTAMP: 1
};

/**
 * @enum {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection = {
  DESC: 0,
  ASC: 1
};

/**
 * optional string feature_id = 1;
 * @return {string}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getFeatureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 page_size = 2;
 * @return {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string cursor = 3;
 * @return {string}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string environment_namespace = 4;
 * @return {string}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getEnvironmentNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setEnvironmentNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional OrderBy order_by = 5;
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getOrderBy = function() {
  return /** @type {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setOrderBy = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional OrderDirection order_direction = 6;
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getOrderDirection = function() {
  return /** @type {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setOrderDirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string search_keyword = 7;
 * @return {string}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getSearchKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setSearchKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 from = 8;
 * @return {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 to = 9;
 * @return {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryRequest} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.auditlog.ListFeatureHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    auditLogsList: jspb.Message.toObjectList(msg.getAuditLogsList(),
    proto_auditlog_auditlog_pb.AuditLog.toObject, includeInstance),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.auditlog.ListFeatureHistoryResponse;
  return proto.bucketeer.auditlog.ListFeatureHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_auditlog_auditlog_pb.AuditLog;
      reader.readMessage(value,proto_auditlog_auditlog_pb.AuditLog.deserializeBinaryFromReader);
      msg.addAuditLogs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.auditlog.ListFeatureHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuditLogsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto_auditlog_auditlog_pb.AuditLog.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * repeated AuditLog audit_logs = 1;
 * @return {!Array<!proto.bucketeer.auditlog.AuditLog>}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.getAuditLogsList = function() {
  return /** @type{!Array<!proto.bucketeer.auditlog.AuditLog>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_auditlog_auditlog_pb.AuditLog, 1));
};


/**
 * @param {!Array<!proto.bucketeer.auditlog.AuditLog>} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} returns this
*/
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.setAuditLogsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bucketeer.auditlog.AuditLog=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.auditlog.AuditLog}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.addAuditLogs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bucketeer.auditlog.AuditLog, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.clearAuditLogsList = function() {
  return this.setAuditLogsList([]);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 total_count = 3;
 * @return {number}
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.auditlog.ListFeatureHistoryResponse} returns this
 */
proto.bucketeer.auditlog.ListFeatureHistoryResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.bucketeer.auditlog);
