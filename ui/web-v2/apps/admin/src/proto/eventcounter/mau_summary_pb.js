// source: proto/eventcounter/mau_summary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_event_client_event_pb = require('../../proto/event/client/event_pb.js');
goog.object.extend(proto, proto_event_client_event_pb);
goog.exportSymbol('proto.bucketeer.eventcounter.MAUSummary', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.eventcounter.MAUSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.eventcounter.MAUSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.eventcounter.MAUSummary.displayName = 'proto.bucketeer.eventcounter.MAUSummary';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.eventcounter.MAUSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.eventcounter.MAUSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.eventcounter.MAUSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    yearmonth: jspb.Message.getFieldWithDefault(msg, 1, ""),
    environmentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    requestCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    evaluationCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    goalCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isAll: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isFinished: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 10, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.eventcounter.MAUSummary}
 */
proto.bucketeer.eventcounter.MAUSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.eventcounter.MAUSummary;
  return proto.bucketeer.eventcounter.MAUSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.eventcounter.MAUSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.eventcounter.MAUSummary}
 */
proto.bucketeer.eventcounter.MAUSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYearmonth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironmentId(value);
      break;
    case 3:
      var value = /** @type {!proto.bucketeer.event.client.SourceId} */ (reader.readEnum());
      msg.setSourceId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEvaluationCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGoalCount(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAll(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFinished(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.eventcounter.MAUSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.eventcounter.MAUSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.eventcounter.MAUSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYearmonth();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnvironmentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourceId();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getUserCount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getRequestCount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getEvaluationCount();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getGoalCount();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getIsAll();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsFinished();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
};


/**
 * optional string yearmonth = 1;
 * @return {string}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getYearmonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setYearmonth = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string environment_id = 2;
 * @return {string}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getEnvironmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setEnvironmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bucketeer.event.client.SourceId source_id = 3;
 * @return {!proto.bucketeer.event.client.SourceId}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getSourceId = function() {
  return /** @type {!proto.bucketeer.event.client.SourceId} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bucketeer.event.client.SourceId} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setSourceId = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 user_count = 4;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getUserCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setUserCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 request_count = 5;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getRequestCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setRequestCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 evaluation_count = 6;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getEvaluationCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setEvaluationCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 goal_count = 7;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getGoalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setGoalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool is_all = 8;
 * @return {boolean}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getIsAll = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setIsAll = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_finished = 9;
 * @return {boolean}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getIsFinished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setIsFinished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int64 created_at = 10;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 updated_at = 11;
 * @return {number}
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.eventcounter.MAUSummary} returns this
 */
proto.bucketeer.eventcounter.MAUSummary.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


goog.object.extend(exports, proto.bucketeer.eventcounter);
