swagger: "2.0"
info:
  title: Bucketeer Gateway Service
  version: "1.0"
host: ENDPOINT
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /get_evaluation:
    post:
      summary: Get Evaluation
      description: Gets a single evaluation for a specific user. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.get_evaluation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetEvaluationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetEvaluationRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Client and Server SDKs
  /get_evaluations:
    post:
      summary: Get Evaluations
      description: Gets all the evaluations for a specific user. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.get_evaluations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetEvaluationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetEvaluationsRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Client and Server SDKs
  /get_feature_flags:
    post:
      summary: Get Feature Flags
      description: Gets all the feature flag in an environment. To call this API, it needs `SERVER` API Key role.
      operationId: api.gateway.get_feature_flags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetFeatureFlagsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetFeatureFlagsRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Client and Server SDKs
  /get_segment_users:
    post:
      summary: Get Segment Users
      description: Gets all the segment users in an environment. To call this API, it needs `SERVER` API Key role.
      operationId: api.gateway.get_segment_users
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetSegmentUsersResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetSegmentUsersRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Client and Server SDKs
  /ping:
    get:
      summary: Ping
      description: Ping the server to check its availability.
      operationId: api.gateway.ping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPingResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Utility
      security: []
  /register_events:
    post:
      summary: Register Events
      description: This API is for reporting Goal events. To call this API, it needs a `CLIENT` or `SERVER` API Key role.
      operationId: api.gateway.register_events
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayRegisterEventsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayRegisterEventsRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Client and Server SDKs
  /track:
    get:
      summary: Track
      description: This API is an integration for Google Tab Manager to report Goal events. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.track
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayTrackResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: apikey
          in: query
          required: false
          type: string
        - name: userid
          in: query
          required: false
          type: string
        - name: goalid
          in: query
          required: false
          type: string
        - name: tag
          in: query
          required: false
          type: string
        - name: timestamp
          in: query
          required: false
          type: string
          format: int64
        - name: value
          in: query
          required: false
          type: number
          format: double
      tags:
        - Client and Server SDKs
  /v1/features:
    get:
      summary: List
      description: List Feature Flags. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.features.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListFeaturesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - TAGS
            - ENABLED
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Feature Flags
    post:
      summary: Create
      description: Create a new Feature Flag. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.features.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreateFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreateFeatureRequest'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Feature Flags
  /v1/features/{id}:
    get:
      summary: Get
      description: Get a Feature Flag. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.features.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Feature Flags
    patch:
      summary: Update
      description: Update a Feature Flag. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.features.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GatewayUpdateFeatureBody'
        - name: authorization
          description: The API Key generated on the Admin Console.
          in: header
          required: true
          type: string
      tags:
        - Feature Flags
definitions:
  ClauseOperator:
    type: string
    enum:
      - EQUALS
      - IN
      - ENDS_WITH
      - STARTS_WITH
      - SEGMENT
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - BEFORE
      - AFTER
      - FEATURE_FLAG
    default: EQUALS
    description: ' - FEATURE_FLAG: Attribute is feature ID, and value is variation ID.'
  FeatureVariationType:
    type: string
    enum:
      - STRING
      - BOOLEAN
      - NUMBER
      - JSON
    default: STRING
  GatewayUpdateFeatureBody:
    type: object
    properties:
      comment:
        type: string
      name:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      enabled:
        type: boolean
      archived:
        type: boolean
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      prerequisites:
        type: array
        items:
          type: object
          $ref: '#/definitions/featurePrerequisite'
      targets:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTarget'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      defaultStrategy:
        $ref: '#/definitions/featureStrategy'
      offVariation:
        type: string
  GetEvaluationsRequestUserEvaluationCondition:
    type: object
    properties:
      evaluatedAt:
        type: string
        format: int64
      userAttributesUpdated:
        type: boolean
  RegisterEventsResponseError:
    type: object
    properties:
      retriable:
        type: boolean
      message:
        type: string
  UserData:
    type: object
    properties:
      value:
        type: object
        additionalProperties:
          type: string
  bucketeerfeatureVariation:
    type: object
    properties:
      id:
        type: string
      value:
        type: string
        title: this is called value because it could be a string,
      name:
        type: string
        title: number or even json object
      description:
        type: string
  bucketeergatewayCreateFeatureRequest:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      variationType:
        $ref: '#/definitions/FeatureVariationType'
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      tags:
        type: array
        items:
          type: string
      onVariationIndex:
        type: integer
        format: int32
      offVariationIndex:
        type: integer
        format: int32
  bucketeergatewayCreateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  bucketeergatewayGetFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  bucketeergatewayListFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
  bucketeergatewayUpdateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  clientEvent:
    type: object
    properties:
      id:
        type: string
      event:
        $ref: '#/definitions/protobufAny'
      environmentNamespace:
        type: string
        description: SDK doens't need to set this field. It's set by gateway service.
  clientSourceId:
    type: string
    enum:
      - UNKNOWN
      - ANDROID
      - IOS
      - WEB
      - GO_SERVER
      - NODE_SERVER
      - JAVASCRIPT
    default: UNKNOWN
  featureClause:
    type: object
    properties:
      id:
        type: string
      attribute:
        type: string
      operator:
        $ref: '#/definitions/ClauseOperator'
      values:
        type: array
        items:
          type: string
  featureEvaluation:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      featureVersion:
        type: integer
        format: int32
      userId:
        type: string
      variationId:
        type: string
      variation:
        $ref: '#/definitions/bucketeerfeatureVariation'
      reason:
        $ref: '#/definitions/featureReason'
      variationValue:
        type: string
      variationName:
        type: string
  featureFeature:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      deleted:
        type: boolean
      evaluationUndelayable:
        type: boolean
      ttl:
        type: integer
        format: int32
      version:
        type: integer
        format: int32
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      targets:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTarget'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      defaultStrategy:
        $ref: '#/definitions/featureStrategy'
      offVariation:
        type: string
      tags:
        type: array
        items:
          type: string
      lastUsedInfo:
        $ref: '#/definitions/featureFeatureLastUsedInfo'
      maintainer:
        type: string
      variationType:
        $ref: '#/definitions/FeatureVariationType'
      archived:
        type: boolean
      prerequisites:
        type: array
        items:
          type: object
          $ref: '#/definitions/featurePrerequisite'
      samplingSeed:
        type: string
  featureFeatureLastUsedInfo:
    type: object
    properties:
      featureId:
        type: string
      version:
        type: integer
        format: int32
      lastUsedAt:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
      clientOldestVersion:
        type: string
      clientLatestVersion:
        type: string
  featureFixedStrategy:
    type: object
    properties:
      variation:
        type: string
  featureListFeaturesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - TAGS
      - ENABLED
    default: DEFAULT
  featureListFeaturesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featurePrerequisite:
    type: object
    properties:
      featureId:
        type: string
      variationId:
        type: string
  featureReason:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureReasonType'
      ruleId:
        type: string
  featureReasonType:
    type: string
    enum:
      - TARGET
      - RULE
      - DEFAULT
      - CLIENT
      - OFF_VARIATION
      - PREREQUISITE
    default: TARGET
  featureRolloutStrategy:
    type: object
    properties:
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRolloutStrategyVariation'
  featureRolloutStrategyVariation:
    type: object
    properties:
      variation:
        type: string
      weight:
        type: integer
        format: int32
  featureRule:
    type: object
    properties:
      id:
        type: string
      strategy:
        $ref: '#/definitions/featureStrategy'
      clauses:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureClause'
  featureSegmentUser:
    type: object
    properties:
      id:
        type: string
      segmentId:
        type: string
      userId:
        type: string
      state:
        $ref: '#/definitions/featureSegmentUserState'
      deleted:
        type: boolean
  featureSegmentUserState:
    type: string
    enum:
      - INCLUDED
      - EXCLUDED
    default: INCLUDED
  featureSegmentUsers:
    type: object
    properties:
      segmentId:
        type: string
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegmentUser'
      updatedAt:
        type: string
        format: int64
  featureStrategy:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureStrategyType'
      fixedStrategy:
        $ref: '#/definitions/featureFixedStrategy'
      rolloutStrategy:
        $ref: '#/definitions/featureRolloutStrategy'
  featureStrategyType:
    type: string
    enum:
      - FIXED
      - ROLLOUT
    default: FIXED
  featureTarget:
    type: object
    properties:
      variation:
        type: string
      users:
        type: array
        items:
          type: string
  featureUserEvaluations:
    type: object
    properties:
      id:
        type: string
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureEvaluation'
      createdAt:
        type: string
        format: int64
      archivedFeatureIds:
        type: array
        items:
          type: string
      forceUpdate:
        type: boolean
  featureUserEvaluationsState:
    type: string
    enum:
      - QUEUED
      - PARTIAL
      - FULL
    default: QUEUED
  gatewayGetEvaluationRequest:
    type: object
    properties:
      tag:
        type: string
      user:
        $ref: '#/definitions/userUser'
      featureId:
        type: string
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetEvaluationResponse:
    type: object
    properties:
      evaluation:
        $ref: '#/definitions/featureEvaluation'
  gatewayGetEvaluationsRequest:
    type: object
    properties:
      tag:
        type: string
      user:
        $ref: '#/definitions/userUser'
      userEvaluationsId:
        type: string
      featureId:
        type: string
        title: instead, use GetEvaluation API
      sourceId:
        $ref: '#/definitions/clientSourceId'
      userEvaluationCondition:
        $ref: '#/definitions/GetEvaluationsRequestUserEvaluationCondition'
      sdkVersion:
        type: string
  gatewayGetEvaluationsResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/featureUserEvaluationsState'
      evaluations:
        $ref: '#/definitions/featureUserEvaluations'
      userEvaluationsId:
        type: string
  gatewayGetFeatureFlagsRequest:
    type: object
    properties:
      tag:
        type: string
      featureFlagsId:
        type: string
      requestedAt:
        type: string
        format: int64
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetFeatureFlagsResponse:
    type: object
    properties:
      featureFlagsId:
        type: string
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
      archivedFeatureFlagIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      forceUpdate:
        type: boolean
  gatewayGetSegmentUsersRequest:
    type: object
    properties:
      segmentIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetSegmentUsersResponse:
    type: object
    properties:
      segmentUsers:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegmentUsers'
      deletedSegmentIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      forceUpdate:
        type: boolean
  gatewayPingResponse:
    type: object
    properties:
      time:
        type: string
        format: int64
  gatewayRegisterEventsRequest:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/clientEvent'
      sdkVersion:
        type: string
      sourceId:
        $ref: '#/definitions/clientSourceId'
  gatewayRegisterEventsResponse:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          $ref: '#/definitions/RegisterEventsResponseError'
  gatewayTrackResponse:
    type: object
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  userUser:
    type: object
    properties:
      id:
        type: string
      data:
        type: object
        additionalProperties:
          type: string
        title: used by the sdk client
      taggedData:
        type: object
        additionalProperties:
          $ref: '#/definitions/UserData'
      lastSeen:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    description: The API Key generated on the Admin Console.
    name: authorization
    in: header
security:
  - ApiKeyAuth: []
