// Copyright 2023 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: proto/auditlog/service.proto

package auditlog

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAuditLogsRequest_OrderBy int32

const (
	ListAuditLogsRequest_DEFAULT   ListAuditLogsRequest_OrderBy = 0
	ListAuditLogsRequest_TIMESTAMP ListAuditLogsRequest_OrderBy = 1
)

// Enum value maps for ListAuditLogsRequest_OrderBy.
var (
	ListAuditLogsRequest_OrderBy_name = map[int32]string{
		0: "DEFAULT",
		1: "TIMESTAMP",
	}
	ListAuditLogsRequest_OrderBy_value = map[string]int32{
		"DEFAULT":   0,
		"TIMESTAMP": 1,
	}
)

func (x ListAuditLogsRequest_OrderBy) Enum() *ListAuditLogsRequest_OrderBy {
	p := new(ListAuditLogsRequest_OrderBy)
	*p = x
	return p
}

func (x ListAuditLogsRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAuditLogsRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[0].Descriptor()
}

func (ListAuditLogsRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[0]
}

func (x ListAuditLogsRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAuditLogsRequest_OrderBy.Descriptor instead.
func (ListAuditLogsRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{0, 0}
}

type ListAuditLogsRequest_OrderDirection int32

const (
	ListAuditLogsRequest_DESC ListAuditLogsRequest_OrderDirection = 0
	ListAuditLogsRequest_ASC  ListAuditLogsRequest_OrderDirection = 1
)

// Enum value maps for ListAuditLogsRequest_OrderDirection.
var (
	ListAuditLogsRequest_OrderDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAuditLogsRequest_OrderDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAuditLogsRequest_OrderDirection) Enum() *ListAuditLogsRequest_OrderDirection {
	p := new(ListAuditLogsRequest_OrderDirection)
	*p = x
	return p
}

func (x ListAuditLogsRequest_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAuditLogsRequest_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[1].Descriptor()
}

func (ListAuditLogsRequest_OrderDirection) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[1]
}

func (x ListAuditLogsRequest_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAuditLogsRequest_OrderDirection.Descriptor instead.
func (ListAuditLogsRequest_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{0, 1}
}

type ListAdminAuditLogsRequest_OrderBy int32

const (
	ListAdminAuditLogsRequest_DEFAULT   ListAdminAuditLogsRequest_OrderBy = 0
	ListAdminAuditLogsRequest_TIMESTAMP ListAdminAuditLogsRequest_OrderBy = 1
)

// Enum value maps for ListAdminAuditLogsRequest_OrderBy.
var (
	ListAdminAuditLogsRequest_OrderBy_name = map[int32]string{
		0: "DEFAULT",
		1: "TIMESTAMP",
	}
	ListAdminAuditLogsRequest_OrderBy_value = map[string]int32{
		"DEFAULT":   0,
		"TIMESTAMP": 1,
	}
)

func (x ListAdminAuditLogsRequest_OrderBy) Enum() *ListAdminAuditLogsRequest_OrderBy {
	p := new(ListAdminAuditLogsRequest_OrderBy)
	*p = x
	return p
}

func (x ListAdminAuditLogsRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAdminAuditLogsRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[2].Descriptor()
}

func (ListAdminAuditLogsRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[2]
}

func (x ListAdminAuditLogsRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAdminAuditLogsRequest_OrderBy.Descriptor instead.
func (ListAdminAuditLogsRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{2, 0}
}

type ListAdminAuditLogsRequest_OrderDirection int32

const (
	ListAdminAuditLogsRequest_DESC ListAdminAuditLogsRequest_OrderDirection = 0
	ListAdminAuditLogsRequest_ASC  ListAdminAuditLogsRequest_OrderDirection = 1
)

// Enum value maps for ListAdminAuditLogsRequest_OrderDirection.
var (
	ListAdminAuditLogsRequest_OrderDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListAdminAuditLogsRequest_OrderDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListAdminAuditLogsRequest_OrderDirection) Enum() *ListAdminAuditLogsRequest_OrderDirection {
	p := new(ListAdminAuditLogsRequest_OrderDirection)
	*p = x
	return p
}

func (x ListAdminAuditLogsRequest_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAdminAuditLogsRequest_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[3].Descriptor()
}

func (ListAdminAuditLogsRequest_OrderDirection) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[3]
}

func (x ListAdminAuditLogsRequest_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAdminAuditLogsRequest_OrderDirection.Descriptor instead.
func (ListAdminAuditLogsRequest_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{2, 1}
}

type ListFeatureHistoryRequest_OrderBy int32

const (
	ListFeatureHistoryRequest_DEFAULT   ListFeatureHistoryRequest_OrderBy = 0
	ListFeatureHistoryRequest_TIMESTAMP ListFeatureHistoryRequest_OrderBy = 1
)

// Enum value maps for ListFeatureHistoryRequest_OrderBy.
var (
	ListFeatureHistoryRequest_OrderBy_name = map[int32]string{
		0: "DEFAULT",
		1: "TIMESTAMP",
	}
	ListFeatureHistoryRequest_OrderBy_value = map[string]int32{
		"DEFAULT":   0,
		"TIMESTAMP": 1,
	}
)

func (x ListFeatureHistoryRequest_OrderBy) Enum() *ListFeatureHistoryRequest_OrderBy {
	p := new(ListFeatureHistoryRequest_OrderBy)
	*p = x
	return p
}

func (x ListFeatureHistoryRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFeatureHistoryRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[4].Descriptor()
}

func (ListFeatureHistoryRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[4]
}

func (x ListFeatureHistoryRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFeatureHistoryRequest_OrderBy.Descriptor instead.
func (ListFeatureHistoryRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{4, 0}
}

type ListFeatureHistoryRequest_OrderDirection int32

const (
	ListFeatureHistoryRequest_DESC ListFeatureHistoryRequest_OrderDirection = 0
	ListFeatureHistoryRequest_ASC  ListFeatureHistoryRequest_OrderDirection = 1
)

// Enum value maps for ListFeatureHistoryRequest_OrderDirection.
var (
	ListFeatureHistoryRequest_OrderDirection_name = map[int32]string{
		0: "DESC",
		1: "ASC",
	}
	ListFeatureHistoryRequest_OrderDirection_value = map[string]int32{
		"DESC": 0,
		"ASC":  1,
	}
)

func (x ListFeatureHistoryRequest_OrderDirection) Enum() *ListFeatureHistoryRequest_OrderDirection {
	p := new(ListFeatureHistoryRequest_OrderDirection)
	*p = x
	return p
}

func (x ListFeatureHistoryRequest_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListFeatureHistoryRequest_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_auditlog_service_proto_enumTypes[5].Descriptor()
}

func (ListFeatureHistoryRequest_OrderDirection) Type() protoreflect.EnumType {
	return &file_proto_auditlog_service_proto_enumTypes[5]
}

func (x ListFeatureHistoryRequest_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListFeatureHistoryRequest_OrderDirection.Descriptor instead.
func (ListFeatureHistoryRequest_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{4, 1}
}

type ListAuditLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize             int64                               `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor               string                              `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	EnvironmentNamespace string                              `protobuf:"bytes,3,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
	OrderBy              ListAuditLogsRequest_OrderBy        `protobuf:"varint,4,opt,name=order_by,json=orderBy,proto3,enum=bucketeer.auditlog.ListAuditLogsRequest_OrderBy" json:"order_by,omitempty"`
	OrderDirection       ListAuditLogsRequest_OrderDirection `protobuf:"varint,5,opt,name=order_direction,json=orderDirection,proto3,enum=bucketeer.auditlog.ListAuditLogsRequest_OrderDirection" json:"order_direction,omitempty"`
	SearchKeyword        string                              `protobuf:"bytes,6,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"`
	From                 int64                               `protobuf:"varint,7,opt,name=from,proto3" json:"from,omitempty"`
	To                   int64                               `protobuf:"varint,8,opt,name=to,proto3" json:"to,omitempty"`
	EntityType           *wrapperspb.Int32Value              `protobuf:"bytes,9,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
}

func (x *ListAuditLogsRequest) Reset() {
	*x = ListAuditLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogsRequest) ProtoMessage() {}

func (x *ListAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*ListAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListAuditLogsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAuditLogsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAuditLogsRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

func (x *ListAuditLogsRequest) GetOrderBy() ListAuditLogsRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return ListAuditLogsRequest_DEFAULT
}

func (x *ListAuditLogsRequest) GetOrderDirection() ListAuditLogsRequest_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return ListAuditLogsRequest_DESC
}

func (x *ListAuditLogsRequest) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

func (x *ListAuditLogsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ListAuditLogsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ListAuditLogsRequest) GetEntityType() *wrapperspb.Int32Value {
	if x != nil {
		return x.EntityType
	}
	return nil
}

type ListAuditLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLogs  []*AuditLog `protobuf:"bytes,1,rep,name=audit_logs,json=auditLogs,proto3" json:"audit_logs,omitempty"`
	Cursor     string      `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount int64       `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAuditLogsResponse) Reset() {
	*x = ListAuditLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogsResponse) ProtoMessage() {}

func (x *ListAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*ListAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListAuditLogsResponse) GetAuditLogs() []*AuditLog {
	if x != nil {
		return x.AuditLogs
	}
	return nil
}

func (x *ListAuditLogsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAuditLogsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListAdminAuditLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize       int64                                    `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor         string                                   `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	OrderBy        ListAdminAuditLogsRequest_OrderBy        `protobuf:"varint,3,opt,name=order_by,json=orderBy,proto3,enum=bucketeer.auditlog.ListAdminAuditLogsRequest_OrderBy" json:"order_by,omitempty"`
	OrderDirection ListAdminAuditLogsRequest_OrderDirection `protobuf:"varint,4,opt,name=order_direction,json=orderDirection,proto3,enum=bucketeer.auditlog.ListAdminAuditLogsRequest_OrderDirection" json:"order_direction,omitempty"`
	SearchKeyword  string                                   `protobuf:"bytes,5,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"`
	From           int64                                    `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
	To             int64                                    `protobuf:"varint,7,opt,name=to,proto3" json:"to,omitempty"`
	EntityType     *wrapperspb.Int32Value                   `protobuf:"bytes,8,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
}

func (x *ListAdminAuditLogsRequest) Reset() {
	*x = ListAdminAuditLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminAuditLogsRequest) ProtoMessage() {}

func (x *ListAdminAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*ListAdminAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListAdminAuditLogsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAdminAuditLogsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAdminAuditLogsRequest) GetOrderBy() ListAdminAuditLogsRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return ListAdminAuditLogsRequest_DEFAULT
}

func (x *ListAdminAuditLogsRequest) GetOrderDirection() ListAdminAuditLogsRequest_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return ListAdminAuditLogsRequest_DESC
}

func (x *ListAdminAuditLogsRequest) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

func (x *ListAdminAuditLogsRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ListAdminAuditLogsRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ListAdminAuditLogsRequest) GetEntityType() *wrapperspb.Int32Value {
	if x != nil {
		return x.EntityType
	}
	return nil
}

type ListAdminAuditLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLogs  []*AuditLog `protobuf:"bytes,1,rep,name=audit_logs,json=auditLogs,proto3" json:"audit_logs,omitempty"`
	Cursor     string      `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount int64       `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAdminAuditLogsResponse) Reset() {
	*x = ListAdminAuditLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdminAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdminAuditLogsResponse) ProtoMessage() {}

func (x *ListAdminAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdminAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*ListAdminAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListAdminAuditLogsResponse) GetAuditLogs() []*AuditLog {
	if x != nil {
		return x.AuditLogs
	}
	return nil
}

func (x *ListAdminAuditLogsResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAdminAuditLogsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ListFeatureHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureId            string                                   `protobuf:"bytes,1,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	PageSize             int64                                    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor               string                                   `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	EnvironmentNamespace string                                   `protobuf:"bytes,4,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
	OrderBy              ListFeatureHistoryRequest_OrderBy        `protobuf:"varint,5,opt,name=order_by,json=orderBy,proto3,enum=bucketeer.auditlog.ListFeatureHistoryRequest_OrderBy" json:"order_by,omitempty"`
	OrderDirection       ListFeatureHistoryRequest_OrderDirection `protobuf:"varint,6,opt,name=order_direction,json=orderDirection,proto3,enum=bucketeer.auditlog.ListFeatureHistoryRequest_OrderDirection" json:"order_direction,omitempty"`
	SearchKeyword        string                                   `protobuf:"bytes,7,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"`
	From                 int64                                    `protobuf:"varint,8,opt,name=from,proto3" json:"from,omitempty"`
	To                   int64                                    `protobuf:"varint,9,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ListFeatureHistoryRequest) Reset() {
	*x = ListFeatureHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureHistoryRequest) ProtoMessage() {}

func (x *ListFeatureHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListFeatureHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListFeatureHistoryRequest) GetFeatureId() string {
	if x != nil {
		return x.FeatureId
	}
	return ""
}

func (x *ListFeatureHistoryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFeatureHistoryRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListFeatureHistoryRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

func (x *ListFeatureHistoryRequest) GetOrderBy() ListFeatureHistoryRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return ListFeatureHistoryRequest_DEFAULT
}

func (x *ListFeatureHistoryRequest) GetOrderDirection() ListFeatureHistoryRequest_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return ListFeatureHistoryRequest_DESC
}

func (x *ListFeatureHistoryRequest) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

func (x *ListFeatureHistoryRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ListFeatureHistoryRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type ListFeatureHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuditLogs  []*AuditLog `protobuf:"bytes,1,rep,name=audit_logs,json=auditLogs,proto3" json:"audit_logs,omitempty"`
	Cursor     string      `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount int64       `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListFeatureHistoryResponse) Reset() {
	*x = ListFeatureHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_auditlog_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeatureHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeatureHistoryResponse) ProtoMessage() {}

func (x *ListFeatureHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_auditlog_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeatureHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListFeatureHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_auditlog_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListFeatureHistoryResponse) GetAuditLogs() []*AuditLog {
	if x != nil {
		return x.AuditLogs
	}
	return nil
}

func (x *ListFeatureHistoryResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListFeatureHistoryResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_proto_auditlog_service_proto protoreflect.FileDescriptor

var file_proto_auditlog_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c,
	0x6f, 0x67, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c,
	0x6f, 0x67, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x84, 0x04, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x60, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x3c,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d,
	0x50, 0x10, 0x01, 0x22, 0x23, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xde, 0x03, 0x0a, 0x19, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c,
	0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x65, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x3c, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x25, 0x0a,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41,
	0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41,
	0x4d, 0x50, 0x10, 0x01, 0x22, 0x23, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf4,
	0x03, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x65, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x01,
	0x22, 0x23, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xe7, 0x02, 0x0a, 0x0f, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12,
	0x28, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x2d, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2d, 0x69, 0x6f, 0x2f,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_auditlog_service_proto_rawDescOnce sync.Once
	file_proto_auditlog_service_proto_rawDescData = file_proto_auditlog_service_proto_rawDesc
)

func file_proto_auditlog_service_proto_rawDescGZIP() []byte {
	file_proto_auditlog_service_proto_rawDescOnce.Do(func() {
		file_proto_auditlog_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_auditlog_service_proto_rawDescData)
	})
	return file_proto_auditlog_service_proto_rawDescData
}

var file_proto_auditlog_service_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_auditlog_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_auditlog_service_proto_goTypes = []interface{}{
	(ListAuditLogsRequest_OrderBy)(0),             // 0: bucketeer.auditlog.ListAuditLogsRequest.OrderBy
	(ListAuditLogsRequest_OrderDirection)(0),      // 1: bucketeer.auditlog.ListAuditLogsRequest.OrderDirection
	(ListAdminAuditLogsRequest_OrderBy)(0),        // 2: bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy
	(ListAdminAuditLogsRequest_OrderDirection)(0), // 3: bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection
	(ListFeatureHistoryRequest_OrderBy)(0),        // 4: bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy
	(ListFeatureHistoryRequest_OrderDirection)(0), // 5: bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection
	(*ListAuditLogsRequest)(nil),                  // 6: bucketeer.auditlog.ListAuditLogsRequest
	(*ListAuditLogsResponse)(nil),                 // 7: bucketeer.auditlog.ListAuditLogsResponse
	(*ListAdminAuditLogsRequest)(nil),             // 8: bucketeer.auditlog.ListAdminAuditLogsRequest
	(*ListAdminAuditLogsResponse)(nil),            // 9: bucketeer.auditlog.ListAdminAuditLogsResponse
	(*ListFeatureHistoryRequest)(nil),             // 10: bucketeer.auditlog.ListFeatureHistoryRequest
	(*ListFeatureHistoryResponse)(nil),            // 11: bucketeer.auditlog.ListFeatureHistoryResponse
	(*wrapperspb.Int32Value)(nil),                 // 12: google.protobuf.Int32Value
	(*AuditLog)(nil),                              // 13: bucketeer.auditlog.AuditLog
}
var file_proto_auditlog_service_proto_depIdxs = []int32{
	0,  // 0: bucketeer.auditlog.ListAuditLogsRequest.order_by:type_name -> bucketeer.auditlog.ListAuditLogsRequest.OrderBy
	1,  // 1: bucketeer.auditlog.ListAuditLogsRequest.order_direction:type_name -> bucketeer.auditlog.ListAuditLogsRequest.OrderDirection
	12, // 2: bucketeer.auditlog.ListAuditLogsRequest.entity_type:type_name -> google.protobuf.Int32Value
	13, // 3: bucketeer.auditlog.ListAuditLogsResponse.audit_logs:type_name -> bucketeer.auditlog.AuditLog
	2,  // 4: bucketeer.auditlog.ListAdminAuditLogsRequest.order_by:type_name -> bucketeer.auditlog.ListAdminAuditLogsRequest.OrderBy
	3,  // 5: bucketeer.auditlog.ListAdminAuditLogsRequest.order_direction:type_name -> bucketeer.auditlog.ListAdminAuditLogsRequest.OrderDirection
	12, // 6: bucketeer.auditlog.ListAdminAuditLogsRequest.entity_type:type_name -> google.protobuf.Int32Value
	13, // 7: bucketeer.auditlog.ListAdminAuditLogsResponse.audit_logs:type_name -> bucketeer.auditlog.AuditLog
	4,  // 8: bucketeer.auditlog.ListFeatureHistoryRequest.order_by:type_name -> bucketeer.auditlog.ListFeatureHistoryRequest.OrderBy
	5,  // 9: bucketeer.auditlog.ListFeatureHistoryRequest.order_direction:type_name -> bucketeer.auditlog.ListFeatureHistoryRequest.OrderDirection
	13, // 10: bucketeer.auditlog.ListFeatureHistoryResponse.audit_logs:type_name -> bucketeer.auditlog.AuditLog
	6,  // 11: bucketeer.auditlog.AuditLogService.ListAuditLogs:input_type -> bucketeer.auditlog.ListAuditLogsRequest
	8,  // 12: bucketeer.auditlog.AuditLogService.ListAdminAuditLogs:input_type -> bucketeer.auditlog.ListAdminAuditLogsRequest
	10, // 13: bucketeer.auditlog.AuditLogService.ListFeatureHistory:input_type -> bucketeer.auditlog.ListFeatureHistoryRequest
	7,  // 14: bucketeer.auditlog.AuditLogService.ListAuditLogs:output_type -> bucketeer.auditlog.ListAuditLogsResponse
	9,  // 15: bucketeer.auditlog.AuditLogService.ListAdminAuditLogs:output_type -> bucketeer.auditlog.ListAdminAuditLogsResponse
	11, // 16: bucketeer.auditlog.AuditLogService.ListFeatureHistory:output_type -> bucketeer.auditlog.ListFeatureHistoryResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_auditlog_service_proto_init() }
func file_proto_auditlog_service_proto_init() {
	if File_proto_auditlog_service_proto != nil {
		return
	}
	file_proto_auditlog_auditlog_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_auditlog_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_auditlog_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuditLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_auditlog_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminAuditLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_auditlog_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdminAuditLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_auditlog_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_auditlog_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeatureHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_auditlog_service_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_auditlog_service_proto_goTypes,
		DependencyIndexes: file_proto_auditlog_service_proto_depIdxs,
		EnumInfos:         file_proto_auditlog_service_proto_enumTypes,
		MessageInfos:      file_proto_auditlog_service_proto_msgTypes,
	}.Build()
	File_proto_auditlog_service_proto = out.File
	file_proto_auditlog_service_proto_rawDesc = nil
	file_proto_auditlog_service_proto_goTypes = nil
	file_proto_auditlog_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuditLogServiceClient is the client API for AuditLogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuditLogServiceClient interface {
	ListAuditLogs(ctx context.Context, in *ListAuditLogsRequest, opts ...grpc.CallOption) (*ListAuditLogsResponse, error)
	ListAdminAuditLogs(ctx context.Context, in *ListAdminAuditLogsRequest, opts ...grpc.CallOption) (*ListAdminAuditLogsResponse, error)
	ListFeatureHistory(ctx context.Context, in *ListFeatureHistoryRequest, opts ...grpc.CallOption) (*ListFeatureHistoryResponse, error)
}

type auditLogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAuditLogServiceClient(cc grpc.ClientConnInterface) AuditLogServiceClient {
	return &auditLogServiceClient{cc}
}

func (c *auditLogServiceClient) ListAuditLogs(ctx context.Context, in *ListAuditLogsRequest, opts ...grpc.CallOption) (*ListAuditLogsResponse, error) {
	out := new(ListAuditLogsResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.auditlog.AuditLogService/ListAuditLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditLogServiceClient) ListAdminAuditLogs(ctx context.Context, in *ListAdminAuditLogsRequest, opts ...grpc.CallOption) (*ListAdminAuditLogsResponse, error) {
	out := new(ListAdminAuditLogsResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.auditlog.AuditLogService/ListAdminAuditLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditLogServiceClient) ListFeatureHistory(ctx context.Context, in *ListFeatureHistoryRequest, opts ...grpc.CallOption) (*ListFeatureHistoryResponse, error) {
	out := new(ListFeatureHistoryResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.auditlog.AuditLogService/ListFeatureHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuditLogServiceServer is the server API for AuditLogService service.
type AuditLogServiceServer interface {
	ListAuditLogs(context.Context, *ListAuditLogsRequest) (*ListAuditLogsResponse, error)
	ListAdminAuditLogs(context.Context, *ListAdminAuditLogsRequest) (*ListAdminAuditLogsResponse, error)
	ListFeatureHistory(context.Context, *ListFeatureHistoryRequest) (*ListFeatureHistoryResponse, error)
}

// UnimplementedAuditLogServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuditLogServiceServer struct {
}

func (*UnimplementedAuditLogServiceServer) ListAuditLogs(context.Context, *ListAuditLogsRequest) (*ListAuditLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuditLogs not implemented")
}
func (*UnimplementedAuditLogServiceServer) ListAdminAuditLogs(context.Context, *ListAdminAuditLogsRequest) (*ListAdminAuditLogsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAdminAuditLogs not implemented")
}
func (*UnimplementedAuditLogServiceServer) ListFeatureHistory(context.Context, *ListFeatureHistoryRequest) (*ListFeatureHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFeatureHistory not implemented")
}

func RegisterAuditLogServiceServer(s *grpc.Server, srv AuditLogServiceServer) {
	s.RegisterService(&_AuditLogService_serviceDesc, srv)
}

func _AuditLogService_ListAuditLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuditLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditLogServiceServer).ListAuditLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.auditlog.AuditLogService/ListAuditLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditLogServiceServer).ListAuditLogs(ctx, req.(*ListAuditLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditLogService_ListAdminAuditLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAdminAuditLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditLogServiceServer).ListAdminAuditLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.auditlog.AuditLogService/ListAdminAuditLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditLogServiceServer).ListAdminAuditLogs(ctx, req.(*ListAdminAuditLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuditLogService_ListFeatureHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFeatureHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditLogServiceServer).ListFeatureHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.auditlog.AuditLogService/ListFeatureHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditLogServiceServer).ListFeatureHistory(ctx, req.(*ListFeatureHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuditLogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bucketeer.auditlog.AuditLogService",
	HandlerType: (*AuditLogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAuditLogs",
			Handler:    _AuditLogService_ListAuditLogs_Handler,
		},
		{
			MethodName: "ListAdminAuditLogs",
			Handler:    _AuditLogService_ListAdminAuditLogs_Handler,
		},
		{
			MethodName: "ListFeatureHistory",
			Handler:    _AuditLogService_ListFeatureHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auditlog/service.proto",
}
