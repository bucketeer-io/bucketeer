swagger: "2.0"
info:
  title: Bucketeer Gateway Service
  version: "1.0"
host: ENDPOINT
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /get_evaluation:
    post:
      summary: Get Evaluation
      description: Gets a single evaluation for a specific user. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.get_evaluation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetEvaluationResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetEvaluationRequest'
      tags:
        - Client and Server SDKs
  /get_evaluations:
    post:
      summary: Get Evaluations
      description: Gets all the evaluations for a specific user. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.get_evaluations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetEvaluationsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetEvaluationsRequest'
      tags:
        - Client and Server SDKs
  /get_feature_flags:
    post:
      summary: Get Feature Flags
      description: Gets all the feature flag in an environment. To call this API, you need a `SERVER` API Key role.
      operationId: api.gateway.get_feature_flags
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetFeatureFlagsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetFeatureFlagsRequest'
      tags:
        - Client and Server SDKs
  /get_segment_users:
    post:
      summary: Get Segment Users
      description: Gets all the segment users in an environment. To call this API, you need a `SERVER` API Key role.
      operationId: api.gateway.get_segment_users
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetSegmentUsersResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayGetSegmentUsersRequest'
      tags:
        - Client and Server SDKs
  /ping:
    get:
      summary: Ping
      description: Ping the server to check its availability.
      operationId: api.gateway.ping
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPingResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      tags:
        - Utility
      security: []
  /register_events:
    post:
      summary: Register Events
      description: This API is for reporting Goal events. To call this API, you need a `CLIENT` or `SERVER` API Key role.
      operationId: api.gateway.register_events
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayRegisterEventsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayRegisterEventsRequest'
      tags:
        - Client and Server SDKs
  /track:
    get:
      summary: Track
      description: This API is an integration for Google Tab Manager to report Goal events. To call this API, you need a `CLIENT` API Key role.
      operationId: api.gateway.track
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayTrackResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: apikey
          in: query
          required: false
          type: string
        - name: userid
          in: query
          required: false
          type: string
        - name: goalid
          in: query
          required: false
          type: string
        - name: tag
          in: query
          required: false
          type: string
        - name: timestamp
          in: query
          required: false
          type: string
          format: int64
        - name: value
          in: query
          required: false
          type: number
          format: double
      tags:
        - Client and Server SDKs
  /v1/account:
    get:
      summary: Get by Organization ID
      description: Get an Account. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.account.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: email
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Account
    post:
      summary: Create
      description: Create a new Account. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.account.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreateAccountV2Request'
      tags:
        - Account
    patch:
      summary: Update
      description: Update an Account. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.account.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateAccountV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateAccountV2Request'
      tags:
        - Account
  /v1/account/get_account_by_environment:
    get:
      summary: Get by Environment ID
      description: Get an Account by Environment ID. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.account.get_by_environment_id
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetAccountV2ByEnvironmentIDResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: email
          in: query
          required: false
          type: string
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/account/get_me:
    get:
      summary: Get Service Account
      description: Get the current Account. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.account.get_me
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetMeResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: organizationId
          in: query
          required: false
          type: string
      tags:
        - Account
  /v1/accounts:
    get:
      summary: List
      description: Get list Accounts. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.account.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListAccountsV2Response'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: organizationId
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - EMAIL
            - CREATED_AT
            - UPDATED_AT
            - ORGANIZATION_ROLE
            - ENVIRONMENT_COUNT
            - LAST_SEEN
            - STATE
            - TAGS
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: disabled
          in: query
          required: false
          type: boolean
        - name: organizationRole
          in: query
          required: false
          type: integer
          format: int32
        - name: environmentId
          in: query
          required: false
          type: string
        - name: environmentRole
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Account
  /v1/audit_log:
    get:
      summary: Get Audit Log
      description: Get an Audit Log by ID. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.audit_logs.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetAuditLogResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
      tags:
        - Audit Logs
  /v1/audit_logs:
    get:
      summary: List Audit Logs
      description: List Audit Logs. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.audit_logs.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListAuditLogsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          description: |-
            page_size

            Page size for pagination, maximum allowed value is 200
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - TIMESTAMP
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - DESC
            - ASC
          default: DESC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: from
          in: query
          required: false
          type: string
          format: int64
        - name: to
          in: query
          required: false
          type: string
          format: int64
        - name: entityType
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Audit Logs
  /v1/code_reference:
    get:
      summary: Get
      description: Get a code reference. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.code_references.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetCodeReferenceResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Code References
    delete:
      summary: Delete
      description: Delete a code reference. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.code_references.delete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayDeleteCodeReferenceResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Code References
    post:
      summary: Create
      description: Create a new code reference. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.code_references.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreateCodeReferenceResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreateCodeReferenceRequest'
      tags:
        - Code References
    patch:
      summary: Update
      description: Update a code reference. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.code_references.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateCodeReferenceResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateCodeReferenceRequest'
      tags:
        - Code References
  /v1/code_references:
    get:
      summary: List
      description: List code references. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.code_references.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListCodeReferencesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - CREATED_AT
            - UPDATED_AT
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: featureId
          in: query
          required: false
          type: string
      tags:
        - Code References
  /v1/debug_evaluate_features:
    post:
      summary: Debug Feature Evaluations
      description: This API is used to debug one or more end-user evaluations. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.features.debug_evaluate_features
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayDebugEvaluateFeaturesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayDebugEvaluateFeaturesRequest'
      tags:
        - Feature Flags
  /v1/feature:
    get:
      summary: Get
      description: Get a Feature Flag. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.features.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
        - name: featureVersion
          description: |-
            feature_version

            If not set, it will return the latest version.
          in: query
          required: false
          type: integer
          format: int32
      tags:
        - Feature Flags
    post:
      summary: Create
      description: Create a new Feature Flag. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.features.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreateFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreateFeatureRequest'
      tags:
        - Feature Flags
    patch:
      summary: Update
      description: Update a Feature Flag. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.features.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateFeatureResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateFeatureRequest'
      tags:
        - Feature Flags
  /v1/feature_history:
    get:
      summary: List Feature History
      description: List Feature History. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.feature_history.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListFeatureHistoryResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: featureId
          in: query
          required: true
          type: string
        - name: pageSize
          description: |-
            page_size

            Page size for pagination, maximum allowed value is 200
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - TIMESTAMP
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - DESC
            - ASC
          default: DESC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: from
          in: query
          required: false
          type: string
          format: int64
        - name: to
          in: query
          required: false
          type: string
          format: int64
        - name: environmentId
          in: query
          required: false
          type: string
      tags:
        - Audit Logs
  /v1/features:
    get:
      summary: List
      description: List Feature Flags. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.features.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListFeaturesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - TAGS
            - ENABLED
            - AUTO_OPS
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
      tags:
        - Feature Flags
  /v1/push:
    get:
      summary: Get
      description: Get a Push notification. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.pushes.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetPushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Pushes
    post:
      summary: Create
      description: Create a new Push notification through Google Firebase Cloud Messaging (FCM). To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.pushes.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreatePushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreatePushRequest'
      tags:
        - Pushes
    patch:
      summary: Update
      description: Update a Push notification. To call this API, you a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.pushes.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdatePushResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayUpdatePushRequest'
      tags:
        - Pushes
  /v1/pushes:
    get:
      summary: List
      description: List pushes. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.pushes.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListPushesResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - ENVIRONMENT
            - STATE
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
      tags:
        - Pushes
  /v1/segment:
    get:
      summary: Get
      description: Get a Segment. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.segments.get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayGetSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: true
          type: string
      tags:
        - Segments
    delete:
      summary: Delete
      description: Delete a Segment. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.segments.delete
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayDeleteSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: id
          in: query
          required: false
          type: string
      tags:
        - Segments
    post:
      summary: Create
      description: Create a new Segment. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.segments.create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayCreateSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayCreateSegmentRequest'
      tags:
        - Segments
    patch:
      summary: Update
      description: Update a Segment. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.segments.update
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateSegmentResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayUpdateSegmentRequest'
      tags:
        - Segments
  /v1/segment/bulk_upload_users:
    post:
      summary: Bulk Upload Segment Users
      description: Bulk upload users to a Segment. To call this API, you need a `WRITE` or `ADMIN` API Key role.
      operationId: api.gateway.v1.segments.bulk_upload_users
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayBulkUploadSegmentUsersResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/bucketeergatewayBulkUploadSegmentUsersRequest'
      tags:
        - Segments
  /v1/segments:
    get:
      summary: List
      description: List Segments. To call this API, you need a `READ` API Key role.
      operationId: api.gateway.v1.segments.list
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bucketeergatewayListSegmentsResponse'
        "400":
          description: Returned for bad requests that may have failed validation.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 3
              details: []
              message: invalid arguments error
        "401":
          description: Request could not be authenticated (authentication required).
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 16
              details: []
              message: not authenticated
        "403":
          description: Request does not have permission to access the resource.
          schema:
            $ref: '#/definitions/googlerpcStatus'
          examples:
            application/json:
              code: 7
              details: []
              message: not authorized
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/googlerpcStatus'
      parameters:
        - name: pageSize
          in: query
          required: false
          type: string
          format: int64
        - name: cursor
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          enum:
            - DEFAULT
            - NAME
            - CREATED_AT
            - UPDATED_AT
            - CONNECTIONS
            - USERS
          default: DEFAULT
        - name: orderDirection
          in: query
          required: false
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
        - name: searchKeyword
          in: query
          required: false
          type: string
        - name: status
          in: query
          required: false
          type: integer
          format: int32
        - name: isInUseStatus
          in: query
          required: false
          type: boolean
      tags:
        - Segments
definitions:
  AccountV2RoleOrganization:
    type: string
    enum:
      - Organization_UNASSIGNED
      - Organization_MEMBER
      - Organization_ADMIN
      - Organization_OWNER
    default: Organization_UNASSIGNED
  CodeReferenceRepositoryType:
    type: string
    enum:
      - REPOSITORY_TYPE_UNSPECIFIED
      - GITHUB
      - GITLAB
      - BITBUCKET
      - CUSTOM
    default: REPOSITORY_TYPE_UNSPECIFIED
  EditorPublicAPIEditor:
    type: object
    properties:
      token:
        type: string
      maintainer:
        type: string
      name:
        type: string
      avatarImage:
        type: string
        format: byte
        title: this is not saved in the auditlog table
      avatarFileType:
        type: string
        title: this is not saved in the auditlog table
  FeatureVariationType:
    type: string
    enum:
      - STRING
      - BOOLEAN
      - NUMBER
      - JSON
    default: STRING
  GetEvaluationsRequestUserEvaluationCondition:
    type: object
    properties:
      evaluatedAt:
        type: string
        format: int64
      userAttributesUpdated:
        type: boolean
  RegisterEventsResponseError:
    type: object
    properties:
      retriable:
        type: boolean
      message:
        type: string
  RoleEnvironment:
    type: string
    enum:
      - Environment_UNASSIGNED
      - Environment_VIEWER
      - Environment_EDITOR
    default: Environment_UNASSIGNED
  UpdateAccountV2RequestAccountV2Avatar:
    type: object
    properties:
      avatarImage:
        type: string
        format: byte
      avatarFileType:
        type: string
  UpdateAccountV2RequestOrganizationRoleValue:
    type: object
    properties:
      role:
        $ref: '#/definitions/AccountV2RoleOrganization'
  UserData:
    type: object
    properties:
      value:
        type: object
        additionalProperties:
          type: string
  accountAccountV2:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationId:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      disabled:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      lastSeen:
        type: string
        format: int64
      avatarFileType:
        type: string
      avatarImage:
        type: string
        format: byte
      environmentCount:
        type: integer
        format: int32
      tags:
        type: array
        items:
          type: string
  accountAccountV2EnvironmentRole:
    type: object
    properties:
      environmentId:
        type: string
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountConsoleAccount:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarUrl:
        type: string
      isSystemAdmin:
        type: boolean
      organization:
        $ref: '#/definitions/bucketeerenvironmentOrganization'
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountConsoleAccountEnvironmentRole'
      searchFilters:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountSearchFilter'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      avatarFileType:
        type: string
      avatarImage:
        type: string
        format: byte
      lastSeen:
        type: string
        format: int64
  accountConsoleAccountEnvironmentRole:
    type: object
    properties:
      environment:
        $ref: '#/definitions/environmentEnvironmentV2'
      project:
        $ref: '#/definitions/environmentProject'
      role:
        $ref: '#/definitions/RoleEnvironment'
  accountFilterTargetType:
    type: string
    enum:
      - UNKNOWN
      - FEATURE_FLAG
    default: UNKNOWN
  accountListAccountsV2RequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - EMAIL
      - CREATED_AT
      - UPDATED_AT
      - ORGANIZATION_ROLE
      - ENVIRONMENT_COUNT
      - LAST_SEEN
      - STATE
      - TAGS
    default: DEFAULT
  accountListAccountsV2RequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  accountSearchFilter:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      query:
        type: string
      filterTargetType:
        $ref: '#/definitions/accountFilterTargetType'
      environmentId:
        type: string
      defaultFilter:
        type: boolean
  auditlogAuditLog:
    type: object
    properties:
      id:
        type: string
      timestamp:
        type: string
        format: int64
      entityType:
        $ref: '#/definitions/domainEventEntityType'
      entityId:
        type: string
      type:
        $ref: '#/definitions/domainEventType'
      event:
        $ref: '#/definitions/protobufAny'
      editor:
        $ref: '#/definitions/domainEditor'
      options:
        $ref: '#/definitions/domainOptions'
      localizedMessage:
        $ref: '#/definitions/domainLocalizedMessage'
      entityData:
        type: string
        title: JSON string of the entity data
      previousEntityData:
        type: string
        title: JSON string of the previous entity data
  auditlogListAuditLogsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - TIMESTAMP
    default: DEFAULT
  auditlogListAuditLogsRequestOrderDirection:
    type: string
    enum:
      - DESC
      - ASC
    default: DESC
  auditlogListFeatureHistoryRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - TIMESTAMP
    default: DEFAULT
  auditlogListFeatureHistoryRequestOrderDirection:
    type: string
    enum:
      - DESC
      - ASC
    default: DESC
  bucketeerenvironmentOrganization:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      archived:
        type: boolean
      trial:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      systemAdmin:
        type: boolean
      projectCount:
        type: integer
        format: int32
      environmentCount:
        type: integer
        format: int32
      userCount:
        type: integer
        format: int32
      ownerEmail:
        type: string
  bucketeerfeatureChangeType:
    type: string
    enum:
      - UNSPECIFIED
      - CREATE
      - UPDATE
      - DELETE
    default: UNSPECIFIED
  bucketeerfeatureClause:
    type: object
    properties:
      id:
        type: string
      attribute:
        type: string
      operator:
        $ref: '#/definitions/featureClauseOperator'
      values:
        type: array
        items:
          type: string
  bucketeerfeatureVariation:
    type: object
    properties:
      id:
        type: string
      value:
        type: string
        title: this is called value because it could be a string,
      name:
        type: string
        title: number or even json object
      description:
        type: string
  bucketeergatewayBulkUploadSegmentUsersRequest:
    type: object
    properties:
      segmentId:
        type: string
      data:
        type: string
        format: byte
        description: segment user ids separated by comma or new line
      state:
        $ref: '#/definitions/featureSegmentUserState'
  bucketeergatewayBulkUploadSegmentUsersResponse:
    type: object
  bucketeergatewayCreateAccountV2Request:
    type: object
    properties:
      email:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationId:
        type: string
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
  bucketeergatewayCreateAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  bucketeergatewayCreateCodeReferenceRequest:
    type: object
    properties:
      featureId:
        type: string
      environmentId:
        type: string
      filePath:
        type: string
      lineNumber:
        type: integer
        format: int32
      codeSnippet:
        type: string
      contentHash:
        type: string
      aliases:
        type: array
        items:
          type: string
      repositoryName:
        type: string
      repositoryOwner:
        type: string
      repositoryType:
        $ref: '#/definitions/CodeReferenceRepositoryType'
      repositoryBranch:
        type: string
      commitHash:
        type: string
      fileExtension:
        type: string
  bucketeergatewayCreateCodeReferenceResponse:
    type: object
    properties:
      codeReference:
        $ref: '#/definitions/coderefCodeReference'
  bucketeergatewayCreateFeatureRequest:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      variationType:
        $ref: '#/definitions/FeatureVariationType'
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      tags:
        type: array
        items:
          type: string
      onVariationIndex:
        type: integer
        format: int32
      offVariationIndex:
        type: integer
        format: int32
  bucketeergatewayCreateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  bucketeergatewayCreatePushRequest:
    type: object
    properties:
      tags:
        type: array
        items:
          type: string
      name:
        type: string
      fcmServiceAccount:
        type: string
        format: byte
  bucketeergatewayCreatePushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  bucketeergatewayCreateSegmentRequest:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
  bucketeergatewayCreateSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  bucketeergatewayDebugEvaluateFeaturesRequest:
    type: object
    properties:
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/userUser'
      featureIds:
        type: array
        items:
          type: string
    required:
      - users
      - featureIds
  bucketeergatewayDebugEvaluateFeaturesResponse:
    type: object
    properties:
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureEvaluation'
      archivedFeatureIds:
        type: array
        items:
          type: string
  bucketeergatewayDeleteCodeReferenceResponse:
    type: object
  bucketeergatewayDeleteSegmentResponse:
    type: object
  bucketeergatewayGetAccountV2ByEnvironmentIDResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  bucketeergatewayGetAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  bucketeergatewayGetAuditLogResponse:
    type: object
    properties:
      auditLog:
        $ref: '#/definitions/auditlogAuditLog'
  bucketeergatewayGetCodeReferenceResponse:
    type: object
    properties:
      codeReference:
        $ref: '#/definitions/coderefCodeReference'
  bucketeergatewayGetFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  bucketeergatewayGetMeResponse:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountConsoleAccount'
  bucketeergatewayGetPushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  bucketeergatewayGetSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  bucketeergatewayListAccountsV2Response:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayListAuditLogsResponse:
    type: object
    properties:
      auditLogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditlogAuditLog'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayListCodeReferencesResponse:
    type: object
    properties:
      codeReferences:
        type: array
        items:
          type: object
          $ref: '#/definitions/coderefCodeReference'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayListFeatureHistoryResponse:
    type: object
    properties:
      auditLogs:
        type: array
        items:
          type: object
          $ref: '#/definitions/auditlogAuditLog'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayListFeaturesResponse:
    type: object
    properties:
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
  bucketeergatewayListPushesResponse:
    type: object
    properties:
      pushes:
        type: array
        items:
          type: object
          $ref: '#/definitions/pushPush'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayListSegmentsResponse:
    type: object
    properties:
      segments:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegment'
      cursor:
        type: string
      totalCount:
        type: string
        format: int64
  bucketeergatewayUpdateAccountV2Request:
    type: object
    properties:
      email:
        type: string
      organizationId:
        type: string
      name:
        type: string
      avatarImageUrl:
        type: string
      organizationRole:
        $ref: '#/definitions/UpdateAccountV2RequestOrganizationRoleValue'
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
      firstName:
        type: string
      lastName:
        type: string
      language:
        type: string
      lastSeen:
        type: string
        format: int64
      avatar:
        $ref: '#/definitions/UpdateAccountV2RequestAccountV2Avatar'
      disabled:
        type: boolean
        description: if disabled is true, the account will be disabled. If false, the account will be enabled.
        title: disabled
      deleted:
        type: boolean
        description: if true, the account will be deleted and other fields will be ignored.
        title: deleted
  bucketeergatewayUpdateAccountV2Response:
    type: object
    properties:
      account:
        $ref: '#/definitions/accountAccountV2'
  bucketeergatewayUpdateCodeReferenceRequest:
    type: object
    properties:
      id:
        type: string
      filePath:
        type: string
      lineNumber:
        type: integer
        format: int32
      codeSnippet:
        type: string
      contentHash:
        type: string
      aliases:
        type: array
        items:
          type: string
      repositoryBranch:
        type: string
      commitHash:
        type: string
      fileExtension:
        type: string
  bucketeergatewayUpdateCodeReferenceResponse:
    type: object
    properties:
      codeReference:
        $ref: '#/definitions/coderefCodeReference'
  bucketeergatewayUpdateFeatureRequest:
    type: object
    properties:
      comment:
        type: string
      environmentId:
        type: string
      id:
        type: string
      name:
        type: string
      description:
        type: string
      tags:
        $ref: '#/definitions/commonStringListValue'
      enabled:
        type: boolean
      archived:
        type: boolean
      defaultStrategy:
        $ref: '#/definitions/featureStrategy'
      offVariation:
        type: string
      resetSamplingSeed:
        type: boolean
      variationChanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureVariationChange'
      ruleChanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRuleChange'
      prerequisiteChanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/featurePrerequisiteChange'
      targetChanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTargetChange'
      tagChanges:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTagChange'
  bucketeergatewayUpdateFeatureResponse:
    type: object
    properties:
      feature:
        $ref: '#/definitions/featureFeature'
  bucketeergatewayUpdatePushRequest:
    type: object
    properties:
      id:
        type: string
      tags:
        type: array
        items:
          type: string
      name:
        type: string
      deleted:
        type: boolean
        description: if true, the push notification will be deleted and other fields will be ignored.
        title: deleted
  bucketeergatewayUpdatePushResponse:
    type: object
    properties:
      push:
        $ref: '#/definitions/pushPush'
  bucketeergatewayUpdateSegmentRequest:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
  bucketeergatewayUpdateSegmentResponse:
    type: object
    properties:
      segment:
        $ref: '#/definitions/featureSegment'
  clientSourceId:
    type: string
    enum:
      - UNKNOWN
      - ANDROID
      - IOS
      - WEB
      - GO_SERVER
      - NODE_SERVER
      - JAVASCRIPT
      - FLUTTER
      - REACT
      - REACT_NATIVE
      - OPEN_FEATURE_KOTLIN
      - OPEN_FEATURE_SWIFT
      - OPEN_FEATURE_JAVASCRIPT
      - OPEN_FEATURE_GO
      - OPEN_FEATURE_NODE
    default: UNKNOWN
  coderefCodeReference:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      filePath:
        type: string
      lineNumber:
        type: integer
        format: int32
      codeSnippet:
        type: string
      contentHash:
        type: string
      aliases:
        type: array
        items:
          type: string
      repositoryName:
        type: string
      repositoryOwner:
        type: string
      repositoryType:
        $ref: '#/definitions/CodeReferenceRepositoryType'
      repositoryBranch:
        type: string
      commitHash:
        type: string
      environmentId:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      sourceUrl:
        type: string
        title: URL to view the code in the repository
      branchUrl:
        type: string
      fileExtension:
        type: string
        title: File extension (e.g., go, ts, cpp)
  coderefListCodeReferencesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - CREATED_AT
      - UPDATED_AT
    default: DEFAULT
  coderefListCodeReferencesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  commonStringListValue:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
  domainEditor:
    type: object
    properties:
      email:
        type: string
      isAdmin:
        type: boolean
      name:
        type: string
      publicApiEditor:
        $ref: '#/definitions/EditorPublicAPIEditor'
      avatarImage:
        type: string
        format: byte
        title: this is not saved in the auditlog table
      avatarFileType:
        type: string
        title: this is not saved in the auditlog table
      environmentRoles:
        type: array
        items:
          type: object
          $ref: '#/definitions/accountAccountV2EnvironmentRole'
        title: this is not saved in the auditlog table
      organizationRole:
        $ref: '#/definitions/AccountV2RoleOrganization'
        title: this is not saved in the auditlog table
  domainEventEntityType:
    type: string
    enum:
      - FEATURE
      - GOAL
      - EXPERIMENT
      - ACCOUNT
      - APIKEY
      - SEGMENT
      - ENVIRONMENT
      - ADMIN_ACCOUNT
      - AUTOOPS_RULE
      - PUSH
      - SUBSCRIPTION
      - ADMIN_SUBSCRIPTION
      - PROJECT
      - PROGRESSIVE_ROLLOUT
      - ORGANIZATION
      - FLAG_TRIGGER
      - TAG
      - CODEREF
      - TEAM
    default: FEATURE
  domainEventType:
    type: string
    enum:
      - UNKNOWN
      - FEATURE_CREATED
      - FEATURE_RENAMED
      - FEATURE_ENABLED
      - FEATURE_DISABLED
      - FEATURE_DELETED
      - FEATURE_DESCRIPTION_CHANGED
      - FEATURE_VARIATION_ADDED
      - FEATURE_VARIATION_REMOVED
      - FEATURE_OFF_VARIATION_CHANGED
      - VARIATION_VALUE_CHANGED
      - VARIATION_NAME_CHANGED
      - VARIATION_DESCRIPTION_CHANGED
      - VARIATION_USER_ADDED
      - VARIATION_USER_REMOVED
      - FEATURE_RULE_ADDED
      - FEATURE_RULE_STRATEGY_CHANGED
      - FEATURE_RULE_DELETED
      - RULE_CLAUSE_ADDED
      - RULE_CLAUSE_DELETED
      - RULE_FIXED_STRATEGY_CHANGED
      - RULE_ROLLOUT_STRATEGY_CHANGED
      - CLAUSE_ATTRIBUTE_CHANGED
      - CLAUSE_OPERATOR_CHANGED
      - CLAUSE_VALUE_ADDED
      - CLAUSE_VALUE_REMOVED
      - FEATURE_DEFAULT_STRATEGY_CHANGED
      - FEATURE_TAG_ADDED
      - FEATURE_TAG_REMOVED
      - FEATURE_VERSION_INCREMENTED
      - FEATURE_ARCHIVED
      - FEATURE_CLONED
      - FEATURE_UNARCHIVED
      - SAMPLING_SEED_RESET
      - PREREQUISITE_ADDED
      - PREREQUISITE_REMOVED
      - PREREQUISITE_VARIATION_CHANGED
      - FEATURE_RULES_ORDER_CHANGED
      - FEATURE_UPDATED
      - GOAL_CREATED
      - GOAL_RENAMED
      - GOAL_DESCRIPTION_CHANGED
      - GOAL_DELETED
      - GOAL_ARCHIVED
      - GOAL_UPDATED
      - EXPERIMENT_CREATED
      - EXPERIMENT_STOPPED
      - EXPERIMENT_START_AT_CHANGED
      - EXPERIMENT_STOP_AT_CHANGED
      - EXPERIMENT_DELETED
      - EXPERIMENT_PERIOD_CHANGED
      - EXPERIMENT_NAME_CHANGED
      - EXPERIMENT_DESCRIPTION_CHANGED
      - EXPERIMENT_STARTED
      - EXPERIMENT_FINISHED
      - EXPERIMENT_ARCHIVED
      - EXPERIMENT_UPDATED
      - ACCOUNT_CREATED
      - ACCOUNT_ROLE_CHANGED
      - ACCOUNT_ENABLED
      - ACCOUNT_DISABLED
      - ACCOUNT_DELETED
      - ACCOUNT_V2_CREATED
      - ACCOUNT_V2_NAME_CHANGED
      - ACCOUNT_V2_AVATAR_IMAGE_URL_CHANGED
      - ACCOUNT_V2_ORGANIZATION_ROLE_CHANGED
      - ACCOUNT_V2_ENVIRONMENT_ROLES_CHANGED
      - ACCOUNT_V2_ENABLED
      - ACCOUNT_V2_DISABLED
      - ACCOUNT_V2_DELETED
      - ACCOUNT_V2_CREATED_SEARCH_FILTER
      - ACCOUNT_V2_SEARCH_FILTER_NANE_CHANGED
      - ACCOUNT_V2_SEARCH_FILTER_QUERY_CHANGED
      - ACCOUNT_V2_SEARCH_FILTER_DEFAULT_CHANGED
      - ACCOUNT_V2_SEARCH_FILTER_DELETED
      - ACCOUNT_V2_FIRST_NAME_CHANGED
      - ACCOUNT_V2_LAST_NAME_CHANGED
      - ACCOUNT_V2_LANGUAGE_CHANGED
      - ACCOUNT_V2_UPDATED
      - ACCOUNT_V2_TAGS_CHANGED
      - APIKEY_CREATED
      - APIKEY_NAME_CHANGED
      - APIKEY_ENABLED
      - APIKEY_DISABLED
      - APIKEY_CHANGED
      - SEGMENT_CREATED
      - SEGMENT_DELETED
      - SEGMENT_NAME_CHANGED
      - SEGMENT_DESCRIPTION_CHANGED
      - SEGMENT_RULE_ADDED
      - SEGMENT_RULE_DELETED
      - SEGMENT_RULE_CLAUSE_ADDED
      - SEGMENT_RULE_CLAUSE_DELETED
      - SEGMENT_CLAUSE_ATTRIBUTE_CHANGED
      - SEGMENT_CLAUSE_OPERATOR_CHANGED
      - SEGMENT_CLAUSE_VALUE_ADDED
      - SEGMENT_CLAUSE_VALUE_REMOVED
      - SEGMENT_USER_ADDED
      - SEGMENT_USER_DELETED
      - SEGMENT_BULK_UPLOAD_USERS
      - SEGMENT_BULK_UPLOAD_USERS_STATUS_CHANGED
      - SEGMENT_UPDATED
      - ENVIRONMENT_CREATED
      - ENVIRONMENT_RENAMED
      - ENVIRONMENT_DESCRIPTION_CHANGED
      - ENVIRONMENT_DELETED
      - ENVIRONMENT_V2_CREATED
      - ENVIRONMENT_V2_RENAMED
      - ENVIRONMENT_V2_DESCRIPTION_CHANGED
      - ENVIRONMENT_V2_ARCHIVED
      - ENVIRONMENT_V2_UNARCHIVED
      - ENVIRONMENT_V2_REQUIRE_COMMENT_CHANGED
      - ENVIRONMENT_V2_UPDATED
      - ADMIN_ACCOUNT_CREATED
      - ADMIN_ACCOUNT_ENABLED
      - ADMIN_ACCOUNT_DISABLED
      - AUTOOPS_RULE_CREATED
      - AUTOOPS_RULE_DELETED
      - AUTOOPS_RULE_OPS_TYPE_CHANGED
      - AUTOOPS_RULE_CLAUSE_DELETED
      - AUTOOPS_RULE_TRIGGERED_AT_CHANGED
      - OPS_EVENT_RATE_CLAUSE_ADDED
      - OPS_EVENT_RATE_CLAUSE_CHANGED
      - DATETIME_CLAUSE_ADDED
      - DATETIME_CLAUSE_CHANGED
      - AUTOOPS_RULE_STOPPED
      - AUTOOPS_RULE_OPS_STATUS_CHANGED
      - AUTOOPS_RULE_UPDATED
      - PUSH_CREATED
      - PUSH_DELETED
      - PUSH_TAGS_ADDED
      - PUSH_TAGS_DELETED
      - PUSH_RENAMED
      - PUSH_UPDATED
      - SUBSCRIPTION_CREATED
      - SUBSCRIPTION_DELETED
      - SUBSCRIPTION_ENABLED
      - SUBSCRIPTION_DISABLED
      - SUBSCRIPTION_SOURCE_TYPE_ADDED
      - SUBSCRIPTION_SOURCE_TYPE_DELETED
      - SUBSCRIPTION_RENAMED
      - SUBSCRIPTION_UPDATED
      - SUBSCRIPTION_FEATURE_FLAG_TAGS_UPDATED
      - ADMIN_SUBSCRIPTION_CREATED
      - ADMIN_SUBSCRIPTION_DELETED
      - ADMIN_SUBSCRIPTION_ENABLED
      - ADMIN_SUBSCRIPTION_DISABLED
      - ADMIN_SUBSCRIPTION_SOURCE_TYPE_ADDED
      - ADMIN_SUBSCRIPTION_SOURCE_TYPE_DELETED
      - ADMIN_SUBSCRIPTION_RENAMED
      - PROJECT_CREATED
      - PROJECT_DESCRIPTION_CHANGED
      - PROJECT_ENABLED
      - PROJECT_DISABLED
      - PROJECT_TRIAL_CREATED
      - PROJECT_TRIAL_CONVERTED
      - PROJECT_RENAMED
      - PROJECT_UPDATED
      - PROGRESSIVE_ROLLOUT_CREATED
      - PROGRESSIVE_ROLLOUT_DELETED
      - PROGRESSIVE_ROLLOUT_SCHEDULE_TRIGGERED_AT_CHANGED
      - PROGRESSIVE_ROLLOUT_STOPPED
      - ORGANIZATION_CREATED
      - ORGANIZATION_NAME_CHANGED
      - ORGANIZATION_DESCRIPTION_CHANGED
      - ORGANIZATION_ENABLED
      - ORGANIZATION_DISABLED
      - ORGANIZATION_ARCHIVED
      - ORGANIZATION_UNARCHIVED
      - ORGANIZATION_TRIAL_CONVERTED
      - ORGANIZATION_OWNER_EMAIL_CHANGED
      - ORGANIZATION_UPDATED
      - FLAG_TRIGGER_CREATED
      - FLAG_TRIGGER_RESET
      - FLAG_TRIGGER_DESCRIPTION_CHANGED
      - FLAG_TRIGGER_DISABLED
      - FLAG_TRIGGER_ENABLED
      - FLAG_TRIGGER_DELETED
      - FLAG_TRIGGER_USAGE_UPDATED
      - FLAG_TRIGGER_UPDATED
      - TAG_CREATED
      - TAG_DELETED
      - CODE_REFERENCE_CREATED
      - CODE_REFERENCE_UPDATED
      - CODE_REFERENCE_DELETED
      - TEAM_CREATED
      - TEAM_DELETED
    default: UNKNOWN
  domainLocalizedMessage:
    type: object
    properties:
      locale:
        type: string
        title: |-
          The locale used following the specification defined at
          http://www.rfc-editor.org/rfc/bcp/bcp47.txt.
          Examples are: "en-US", "fr-CH", "es-MX"
      message:
        type: string
  domainOptions:
    type: object
    properties:
      comment:
        type: string
      newVersion:
        type: integer
        format: int32
  environmentEnvironmentV2:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      urlCode:
        type: string
      description:
        type: string
        title: optional
      projectId:
        type: string
      archived:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      organizationId:
        type: string
      requireComment:
        type: boolean
      featureFlagCount:
        type: integer
        format: int32
  environmentProject:
    type: object
    properties:
      id:
        type: string
      description:
        type: string
        title: optional
      disabled:
        type: boolean
      trial:
        type: boolean
      creatorEmail:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      name:
        type: string
      urlCode:
        type: string
      organizationId:
        type: string
      environmentCount:
        type: integer
        format: int32
      featureFlagCount:
        type: integer
        format: int32
  eventclientEvent:
    type: object
    properties:
      id:
        type: string
      event:
        $ref: '#/definitions/protobufAny'
      environmentId:
        type: string
        description: service.
  featureAudience:
    type: object
    properties:
      percentage:
        type: integer
        format: int32
        title: Percentage of traffic to include in experiment (0-100)
      defaultVariation:
        type: string
        title: Variation to serve to users not in experiment
  featureAutoOpsSummary:
    type: object
    properties:
      progressiveRolloutCount:
        type: integer
        format: int32
      scheduleCount:
        type: integer
        format: int32
      killSwitchCount:
        type: integer
        format: int32
  featureClauseOperator:
    type: string
    enum:
      - EQUALS
      - IN
      - ENDS_WITH
      - STARTS_WITH
      - SEGMENT
      - GREATER
      - GREATER_OR_EQUAL
      - LESS
      - LESS_OR_EQUAL
      - BEFORE
      - AFTER
      - FEATURE_FLAG
      - PARTIALLY_MATCH
    default: EQUALS
    description: ' - FEATURE_FLAG: Attribute is feature ID, and value is variation ID.'
  featureEvaluation:
    type: object
    properties:
      id:
        type: string
      featureId:
        type: string
      featureVersion:
        type: integer
        format: int32
      userId:
        type: string
      variationId:
        type: string
      variation:
        $ref: '#/definitions/bucketeerfeatureVariation'
      reason:
        $ref: '#/definitions/featureReason'
      variationValue:
        type: string
      variationName:
        type: string
  featureFeature:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      deleted:
        type: boolean
      evaluationUndelayable:
        type: boolean
      ttl:
        type: integer
        format: int32
      version:
        type: integer
        format: int32
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureVariation'
      targets:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureTarget'
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      defaultStrategy:
        $ref: '#/definitions/featureStrategy'
      offVariation:
        type: string
      tags:
        type: array
        items:
          type: string
      lastUsedInfo:
        $ref: '#/definitions/featureFeatureLastUsedInfo'
      maintainer:
        type: string
      variationType:
        $ref: '#/definitions/FeatureVariationType'
      archived:
        type: boolean
      prerequisites:
        type: array
        items:
          type: object
          $ref: '#/definitions/featurePrerequisite'
      samplingSeed:
        type: string
      autoOpsSummary:
        $ref: '#/definitions/featureAutoOpsSummary'
  featureFeatureLastUsedInfo:
    type: object
    properties:
      featureId:
        type: string
      version:
        type: integer
        format: int32
      lastUsedAt:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
      clientOldestVersion:
        type: string
      clientLatestVersion:
        type: string
  featureFixedStrategy:
    type: object
    properties:
      variation:
        type: string
  featureListFeaturesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - TAGS
      - ENABLED
      - AUTO_OPS
    default: DEFAULT
  featureListFeaturesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featureListSegmentsRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - CONNECTIONS
      - USERS
    default: DEFAULT
  featureListSegmentsRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  featurePrerequisite:
    type: object
    properties:
      featureId:
        type: string
      variationId:
        type: string
  featurePrerequisiteChange:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/bucketeerfeatureChangeType'
      prerequisite:
        $ref: '#/definitions/featurePrerequisite'
    required:
      - changeType
      - prerequisite
  featureReason:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureReasonType'
      ruleId:
        type: string
  featureReasonType:
    type: string
    enum:
      - TARGET
      - RULE
      - DEFAULT
      - CLIENT
      - OFF_VARIATION
      - PREREQUISITE
      - ERROR_NO_EVALUATIONS
      - ERROR_FLAG_NOT_FOUND
      - ERROR_WRONG_TYPE
      - ERROR_USER_ID_NOT_SPECIFIED
      - ERROR_FEATURE_FLAG_ID_NOT_SPECIFIED
      - ERROR_EXCEPTION
      - ERROR_CACHE_NOT_FOUND
    default: TARGET
  featureRolloutStrategy:
    type: object
    properties:
      variations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRolloutStrategyVariation'
      audience:
        $ref: '#/definitions/featureAudience'
        title: Optional audience configuration for traffic control
  featureRolloutStrategyVariation:
    type: object
    properties:
      variation:
        type: string
      weight:
        type: integer
        format: int32
  featureRule:
    type: object
    properties:
      id:
        type: string
      strategy:
        $ref: '#/definitions/featureStrategy'
      clauses:
        type: array
        items:
          type: object
          $ref: '#/definitions/bucketeerfeatureClause'
  featureRuleChange:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/bucketeerfeatureChangeType'
      rule:
        $ref: '#/definitions/featureRule'
    required:
      - changeType
      - rule
  featureSegment:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      rules:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureRule'
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      version:
        type: string
        format: int64
      deleted:
        type: boolean
      includedUserCount:
        type: string
        format: int64
      excludedUserCount:
        type: string
        format: int64
      status:
        $ref: '#/definitions/featureSegmentStatus'
      isInUseStatus:
        type: boolean
        description: This field is set only when APIs return.
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
  featureSegmentStatus:
    type: string
    enum:
      - INITIAL
      - UPLOADING
      - SUCEEDED
      - FAILED
    default: INITIAL
  featureSegmentUser:
    type: object
    properties:
      id:
        type: string
      segmentId:
        type: string
      userId:
        type: string
      state:
        $ref: '#/definitions/featureSegmentUserState'
      deleted:
        type: boolean
  featureSegmentUserState:
    type: string
    enum:
      - INCLUDED
      - EXCLUDED
    default: INCLUDED
  featureSegmentUsers:
    type: object
    properties:
      segmentId:
        type: string
      users:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegmentUser'
      updatedAt:
        type: string
        format: int64
  featureStrategy:
    type: object
    properties:
      type:
        $ref: '#/definitions/featureStrategyType'
      fixedStrategy:
        $ref: '#/definitions/featureFixedStrategy'
      rolloutStrategy:
        $ref: '#/definitions/featureRolloutStrategy'
  featureStrategyType:
    type: string
    enum:
      - FIXED
      - ROLLOUT
    default: FIXED
  featureTagChange:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/bucketeerfeatureChangeType'
      tag:
        type: string
    required:
      - changeType
      - tag
  featureTarget:
    type: object
    properties:
      variation:
        type: string
      users:
        type: array
        items:
          type: string
  featureTargetChange:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/bucketeerfeatureChangeType'
      target:
        $ref: '#/definitions/featureTarget'
    required:
      - changeType
      - target
  featureUserEvaluations:
    type: object
    properties:
      id:
        type: string
      evaluations:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureEvaluation'
      createdAt:
        type: string
        format: int64
      archivedFeatureIds:
        type: array
        items:
          type: string
      forceUpdate:
        type: boolean
  featureUserEvaluationsState:
    type: string
    enum:
      - QUEUED
      - PARTIAL
      - FULL
    default: QUEUED
  featureVariationChange:
    type: object
    properties:
      changeType:
        $ref: '#/definitions/bucketeerfeatureChangeType'
      variation:
        $ref: '#/definitions/bucketeerfeatureVariation'
    required:
      - changeType
      - variation
  gatewayGetEvaluationRequest:
    type: object
    properties:
      tag:
        type: string
      user:
        $ref: '#/definitions/userUser'
      featureId:
        type: string
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetEvaluationResponse:
    type: object
    properties:
      evaluation:
        $ref: '#/definitions/featureEvaluation'
  gatewayGetEvaluationsRequest:
    type: object
    properties:
      tag:
        type: string
      user:
        $ref: '#/definitions/userUser'
      userEvaluationsId:
        type: string
      featureId:
        type: string
        title: instead, use GetEvaluation API
      sourceId:
        $ref: '#/definitions/clientSourceId'
      userEvaluationCondition:
        $ref: '#/definitions/GetEvaluationsRequestUserEvaluationCondition'
      sdkVersion:
        type: string
  gatewayGetEvaluationsResponse:
    type: object
    properties:
      state:
        $ref: '#/definitions/featureUserEvaluationsState'
      evaluations:
        $ref: '#/definitions/featureUserEvaluations'
      userEvaluationsId:
        type: string
  gatewayGetFeatureFlagsRequest:
    type: object
    properties:
      tag:
        type: string
      featureFlagsId:
        type: string
      requestedAt:
        type: string
        format: int64
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetFeatureFlagsResponse:
    type: object
    properties:
      featureFlagsId:
        type: string
      features:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureFeature'
      archivedFeatureFlagIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      forceUpdate:
        type: boolean
  gatewayGetSegmentUsersRequest:
    type: object
    properties:
      segmentIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      sourceId:
        $ref: '#/definitions/clientSourceId'
      sdkVersion:
        type: string
  gatewayGetSegmentUsersResponse:
    type: object
    properties:
      segmentUsers:
        type: array
        items:
          type: object
          $ref: '#/definitions/featureSegmentUsers'
      deletedSegmentIds:
        type: array
        items:
          type: string
      requestedAt:
        type: string
        format: int64
      forceUpdate:
        type: boolean
  gatewayPingResponse:
    type: object
    properties:
      time:
        type: string
        format: int64
  gatewayRegisterEventsRequest:
    type: object
    properties:
      events:
        type: array
        items:
          type: object
          $ref: '#/definitions/eventclientEvent'
      sdkVersion:
        type: string
      sourceId:
        $ref: '#/definitions/clientSourceId'
  gatewayRegisterEventsResponse:
    type: object
    properties:
      errors:
        type: object
        additionalProperties:
          $ref: '#/definitions/RegisterEventsResponseError'
  gatewayTrackResponse:
    type: object
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
        description: |-
          A URL/resource name that uniquely identifies the type of the serialized
          protocol buffer message. This string must contain at least
          one "/" character. The last segment of the URL's path must represent
          the fully qualified name of the type (as in
          `path/google.protobuf.Duration`). The name should be in a canonical form
          (e.g., leading "." is not accepted).

          In practice, teams usually precompile into the binary all types that they
          expect it to use in the context of Any. However, for URLs which use the
          scheme `http`, `https`, or no scheme, one can optionally set up a type
          server that maps type URLs to message definitions as follows:

          * If no scheme is provided, `https` is assumed.
          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official
          protobuf release, and it is not used for type URLs beginning with
          type.googleapis.com.

          Schemes other than `http`, `https` (or the empty scheme) might be
          used with implementation specific semantics.
    additionalProperties: {}
    description: |-
      `Any` contains an arbitrary serialized protocol buffer message along with a
      URL that describes the type of the serialized message.

      Protobuf library provides support to pack/unpack Any values in the form
      of utility functions or additional generated methods of the Any type.

      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }
          // or ...
          if (any.isSameTypeAs(Foo.getDefaultInstance())) {
            foo = any.unpack(Foo.getDefaultInstance());
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := anypb.New(foo)
           if err != nil {
             ...
           }
           ...
           foo := &pb.Foo{}
           if err := any.UnmarshalTo(foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use
      'type.googleapis.com/full.type.name' as the type URL and the unpack
      methods only use the fully qualified type name after the last '/'
      in the type URL, for example "foo.bar.com/x/y.z" will yield type
      name "y.z".

      JSON
      ====
      The JSON representation of an `Any` value uses the regular
      representation of the deserialized, embedded message, with an
      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON
      representation, that representation will be embedded adding a field
      `value` which holds the custom JSON in addition to the `@type`
      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  pushListPushesRequestOrderBy:
    type: string
    enum:
      - DEFAULT
      - NAME
      - CREATED_AT
      - UPDATED_AT
      - ENVIRONMENT
      - STATE
    default: DEFAULT
  pushListPushesRequestOrderDirection:
    type: string
    enum:
      - ASC
      - DESC
    default: ASC
  pushPush:
    type: object
    properties:
      id:
        type: string
      tags:
        type: array
        items:
          type: string
      deleted:
        type: boolean
      name:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
      fcmServiceAccount:
        type: string
      disabled:
        type: boolean
      environmentId:
        type: string
      environmentName:
        type: string
  userUser:
    type: object
    properties:
      id:
        type: string
      data:
        type: object
        additionalProperties:
          type: string
        title: used by the sdk client
      taggedData:
        type: object
        additionalProperties:
          $ref: '#/definitions/UserData'
      lastSeen:
        type: string
        format: int64
      createdAt:
        type: string
        format: int64
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    description: The API Key generated on the Admin Console.
    name: authorization
    in: header
security:
  - ApiKeyAuth: []
