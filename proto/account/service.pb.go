// Copyright 2023 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: proto/account/service.proto

package account

import (
	context "context"
	environment "github.com/bucketeer-io/bucketeer/proto/environment"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAccountsV2Request_OrderBy int32

const (
	ListAccountsV2Request_DEFAULT    ListAccountsV2Request_OrderBy = 0
	ListAccountsV2Request_EMAIL      ListAccountsV2Request_OrderBy = 1
	ListAccountsV2Request_CREATED_AT ListAccountsV2Request_OrderBy = 2
	ListAccountsV2Request_UPDATED_AT ListAccountsV2Request_OrderBy = 3
)

// Enum value maps for ListAccountsV2Request_OrderBy.
var (
	ListAccountsV2Request_OrderBy_name = map[int32]string{
		0: "DEFAULT",
		1: "EMAIL",
		2: "CREATED_AT",
		3: "UPDATED_AT",
	}
	ListAccountsV2Request_OrderBy_value = map[string]int32{
		"DEFAULT":    0,
		"EMAIL":      1,
		"CREATED_AT": 2,
		"UPDATED_AT": 3,
	}
)

func (x ListAccountsV2Request_OrderBy) Enum() *ListAccountsV2Request_OrderBy {
	p := new(ListAccountsV2Request_OrderBy)
	*p = x
	return p
}

func (x ListAccountsV2Request_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountsV2Request_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_account_service_proto_enumTypes[0].Descriptor()
}

func (ListAccountsV2Request_OrderBy) Type() protoreflect.EnumType {
	return &file_proto_account_service_proto_enumTypes[0]
}

func (x ListAccountsV2Request_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountsV2Request_OrderBy.Descriptor instead.
func (ListAccountsV2Request_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{19, 0}
}

type ListAccountsV2Request_OrderDirection int32

const (
	ListAccountsV2Request_ASC  ListAccountsV2Request_OrderDirection = 0
	ListAccountsV2Request_DESC ListAccountsV2Request_OrderDirection = 1
)

// Enum value maps for ListAccountsV2Request_OrderDirection.
var (
	ListAccountsV2Request_OrderDirection_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	ListAccountsV2Request_OrderDirection_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x ListAccountsV2Request_OrderDirection) Enum() *ListAccountsV2Request_OrderDirection {
	p := new(ListAccountsV2Request_OrderDirection)
	*p = x
	return p
}

func (x ListAccountsV2Request_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAccountsV2Request_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_account_service_proto_enumTypes[1].Descriptor()
}

func (ListAccountsV2Request_OrderDirection) Type() protoreflect.EnumType {
	return &file_proto_account_service_proto_enumTypes[1]
}

func (x ListAccountsV2Request_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAccountsV2Request_OrderDirection.Descriptor instead.
func (ListAccountsV2Request_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{19, 1}
}

type ListAPIKeysRequest_OrderBy int32

const (
	ListAPIKeysRequest_DEFAULT    ListAPIKeysRequest_OrderBy = 0
	ListAPIKeysRequest_NAME       ListAPIKeysRequest_OrderBy = 1
	ListAPIKeysRequest_CREATED_AT ListAPIKeysRequest_OrderBy = 2
	ListAPIKeysRequest_UPDATED_AT ListAPIKeysRequest_OrderBy = 3
)

// Enum value maps for ListAPIKeysRequest_OrderBy.
var (
	ListAPIKeysRequest_OrderBy_name = map[int32]string{
		0: "DEFAULT",
		1: "NAME",
		2: "CREATED_AT",
		3: "UPDATED_AT",
	}
	ListAPIKeysRequest_OrderBy_value = map[string]int32{
		"DEFAULT":    0,
		"NAME":       1,
		"CREATED_AT": 2,
		"UPDATED_AT": 3,
	}
)

func (x ListAPIKeysRequest_OrderBy) Enum() *ListAPIKeysRequest_OrderBy {
	p := new(ListAPIKeysRequest_OrderBy)
	*p = x
	return p
}

func (x ListAPIKeysRequest_OrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAPIKeysRequest_OrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_account_service_proto_enumTypes[2].Descriptor()
}

func (ListAPIKeysRequest_OrderBy) Type() protoreflect.EnumType {
	return &file_proto_account_service_proto_enumTypes[2]
}

func (x ListAPIKeysRequest_OrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAPIKeysRequest_OrderBy.Descriptor instead.
func (ListAPIKeysRequest_OrderBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{31, 0}
}

type ListAPIKeysRequest_OrderDirection int32

const (
	ListAPIKeysRequest_ASC  ListAPIKeysRequest_OrderDirection = 0
	ListAPIKeysRequest_DESC ListAPIKeysRequest_OrderDirection = 1
)

// Enum value maps for ListAPIKeysRequest_OrderDirection.
var (
	ListAPIKeysRequest_OrderDirection_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	ListAPIKeysRequest_OrderDirection_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x ListAPIKeysRequest_OrderDirection) Enum() *ListAPIKeysRequest_OrderDirection {
	p := new(ListAPIKeysRequest_OrderDirection)
	*p = x
	return p
}

func (x ListAPIKeysRequest_OrderDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAPIKeysRequest_OrderDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_account_service_proto_enumTypes[3].Descriptor()
}

func (ListAPIKeysRequest_OrderDirection) Type() protoreflect.EnumType {
	return &file_proto_account_service_proto_enumTypes[3]
}

func (x ListAPIKeysRequest_OrderDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAPIKeysRequest_OrderDirection.Descriptor instead.
func (ListAPIKeysRequest_OrderDirection) EnumDescriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{31, 1}
}

// account is retrieved by IDToken.
// it's called from WebUI.
type GetMeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetMeRequest) Reset() {
	*x = GetMeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeRequest) ProtoMessage() {}

func (x *GetMeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeRequest.ProtoReflect.Descriptor instead.
func (*GetMeRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetMeRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetMeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *ConsoleAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetMeResponse) Reset() {
	*x = GetMeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeResponse) ProtoMessage() {}

func (x *GetMeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeResponse.ProtoReflect.Descriptor instead.
func (*GetMeResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetMeResponse) GetAccount() *ConsoleAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetMyOrganizationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMyOrganizationsRequest) Reset() {
	*x = GetMyOrganizationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOrganizationsRequest) ProtoMessage() {}

func (x *GetMyOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*GetMyOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{2}
}

// Retrieve the organization to which the account belongs by email.
// it's called from another microservice.
type GetMyOrganizationsByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *GetMyOrganizationsByEmailRequest) Reset() {
	*x = GetMyOrganizationsByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOrganizationsByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOrganizationsByEmailRequest) ProtoMessage() {}

func (x *GetMyOrganizationsByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOrganizationsByEmailRequest.ProtoReflect.Descriptor instead.
func (*GetMyOrganizationsByEmailRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetMyOrganizationsByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GetMyOrganizationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Organizations []*environment.Organization `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
}

func (x *GetMyOrganizationsResponse) Reset() {
	*x = GetMyOrganizationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOrganizationsResponse) ProtoMessage() {}

func (x *GetMyOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*GetMyOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetMyOrganizationsResponse) GetOrganizations() []*environment.Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

type CreateAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId string                  `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Command        *CreateAccountV2Command `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *CreateAccountV2Request) Reset() {
	*x = CreateAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountV2Request) ProtoMessage() {}

func (x *CreateAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountV2Request.ProtoReflect.Descriptor instead.
func (*CreateAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateAccountV2Request) GetCommand() *CreateAccountV2Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type CreateAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountV2 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *CreateAccountV2Response) Reset() {
	*x = CreateAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountV2Response) ProtoMessage() {}

func (x *CreateAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountV2Response.ProtoReflect.Descriptor instead.
func (*CreateAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAccountV2Response) GetAccount() *AccountV2 {
	if x != nil {
		return x.Account
	}
	return nil
}

type EnableAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string                  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OrganizationId string                  `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Command        *EnableAccountV2Command `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *EnableAccountV2Request) Reset() {
	*x = EnableAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAccountV2Request) ProtoMessage() {}

func (x *EnableAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAccountV2Request.ProtoReflect.Descriptor instead.
func (*EnableAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{7}
}

func (x *EnableAccountV2Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EnableAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *EnableAccountV2Request) GetCommand() *EnableAccountV2Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type EnableAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableAccountV2Response) Reset() {
	*x = EnableAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAccountV2Response) ProtoMessage() {}

func (x *EnableAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAccountV2Response.ProtoReflect.Descriptor instead.
func (*EnableAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{8}
}

type DisableAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string                   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OrganizationId string                   `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Command        *DisableAccountV2Command `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *DisableAccountV2Request) Reset() {
	*x = DisableAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAccountV2Request) ProtoMessage() {}

func (x *DisableAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAccountV2Request.ProtoReflect.Descriptor instead.
func (*DisableAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{9}
}

func (x *DisableAccountV2Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DisableAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DisableAccountV2Request) GetCommand() *DisableAccountV2Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type DisableAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableAccountV2Response) Reset() {
	*x = DisableAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAccountV2Response) ProtoMessage() {}

func (x *DisableAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAccountV2Response.ProtoReflect.Descriptor instead.
func (*DisableAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{10}
}

type DeleteAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string                  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OrganizationId string                  `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Command        *DeleteAccountV2Command `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *DeleteAccountV2Request) Reset() {
	*x = DeleteAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountV2Request) ProtoMessage() {}

func (x *DeleteAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountV2Request.ProtoReflect.Descriptor instead.
func (*DeleteAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAccountV2Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeleteAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DeleteAccountV2Request) GetCommand() *DeleteAccountV2Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type DeleteAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAccountV2Response) Reset() {
	*x = DeleteAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountV2Response) ProtoMessage() {}

func (x *DeleteAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountV2Response.ProtoReflect.Descriptor instead.
func (*DeleteAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{12}
}

type UpdateAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email                         string                                  `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OrganizationId                string                                  `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ChangeNameCommand             *ChangeAccountV2NameCommand             `protobuf:"bytes,3,opt,name=change_name_command,json=changeNameCommand,proto3" json:"change_name_command,omitempty"`
	ChangeAvatarUrlCommand        *ChangeAccountV2AvatarImageUrlCommand   `protobuf:"bytes,4,opt,name=change_avatar_url_command,json=changeAvatarUrlCommand,proto3" json:"change_avatar_url_command,omitempty"`
	ChangeOrganizationRoleCommand *ChangeAccountV2OrganizationRoleCommand `protobuf:"bytes,5,opt,name=change_organization_role_command,json=changeOrganizationRoleCommand,proto3" json:"change_organization_role_command,omitempty"`
	ChangeEnvironmentRolesCommand *ChangeAccountV2EnvironmentRolesCommand `protobuf:"bytes,6,opt,name=change_environment_roles_command,json=changeEnvironmentRolesCommand,proto3" json:"change_environment_roles_command,omitempty"`
}

func (x *UpdateAccountV2Request) Reset() {
	*x = UpdateAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountV2Request) ProtoMessage() {}

func (x *UpdateAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountV2Request.ProtoReflect.Descriptor instead.
func (*UpdateAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateAccountV2Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateAccountV2Request) GetChangeNameCommand() *ChangeAccountV2NameCommand {
	if x != nil {
		return x.ChangeNameCommand
	}
	return nil
}

func (x *UpdateAccountV2Request) GetChangeAvatarUrlCommand() *ChangeAccountV2AvatarImageUrlCommand {
	if x != nil {
		return x.ChangeAvatarUrlCommand
	}
	return nil
}

func (x *UpdateAccountV2Request) GetChangeOrganizationRoleCommand() *ChangeAccountV2OrganizationRoleCommand {
	if x != nil {
		return x.ChangeOrganizationRoleCommand
	}
	return nil
}

func (x *UpdateAccountV2Request) GetChangeEnvironmentRolesCommand() *ChangeAccountV2EnvironmentRolesCommand {
	if x != nil {
		return x.ChangeEnvironmentRolesCommand
	}
	return nil
}

type UpdateAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAccountV2Response) Reset() {
	*x = UpdateAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountV2Response) ProtoMessage() {}

func (x *UpdateAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountV2Response.ProtoReflect.Descriptor instead.
func (*UpdateAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{14}
}

type GetAccountV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email          string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
}

func (x *GetAccountV2Request) Reset() {
	*x = GetAccountV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountV2Request) ProtoMessage() {}

func (x *GetAccountV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountV2Request.ProtoReflect.Descriptor instead.
func (*GetAccountV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetAccountV2Request) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetAccountV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetAccountV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountV2 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountV2Response) Reset() {
	*x = GetAccountV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountV2Response) ProtoMessage() {}

func (x *GetAccountV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountV2Response.ProtoReflect.Descriptor instead.
func (*GetAccountV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetAccountV2Response) GetAccount() *AccountV2 {
	if x != nil {
		return x.Account
	}
	return nil
}

type GetAccountV2ByEnvironmentIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email         string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	EnvironmentId string `protobuf:"bytes,2,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
}

func (x *GetAccountV2ByEnvironmentIDRequest) Reset() {
	*x = GetAccountV2ByEnvironmentIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountV2ByEnvironmentIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountV2ByEnvironmentIDRequest) ProtoMessage() {}

func (x *GetAccountV2ByEnvironmentIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountV2ByEnvironmentIDRequest.ProtoReflect.Descriptor instead.
func (*GetAccountV2ByEnvironmentIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetAccountV2ByEnvironmentIDRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetAccountV2ByEnvironmentIDRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type GetAccountV2ByEnvironmentIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *AccountV2 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountV2ByEnvironmentIDResponse) Reset() {
	*x = GetAccountV2ByEnvironmentIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountV2ByEnvironmentIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountV2ByEnvironmentIDResponse) ProtoMessage() {}

func (x *GetAccountV2ByEnvironmentIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountV2ByEnvironmentIDResponse.ProtoReflect.Descriptor instead.
func (*GetAccountV2ByEnvironmentIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetAccountV2ByEnvironmentIDResponse) GetAccount() *AccountV2 {
	if x != nil {
		return x.Account
	}
	return nil
}

type ListAccountsV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize         int64                                `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor           string                               `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	OrganizationId   string                               `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	OrderBy          ListAccountsV2Request_OrderBy        `protobuf:"varint,4,opt,name=order_by,json=orderBy,proto3,enum=bucketeer.account.ListAccountsV2Request_OrderBy" json:"order_by,omitempty"`
	OrderDirection   ListAccountsV2Request_OrderDirection `protobuf:"varint,5,opt,name=order_direction,json=orderDirection,proto3,enum=bucketeer.account.ListAccountsV2Request_OrderDirection" json:"order_direction,omitempty"`
	SearchKeyword    string                               `protobuf:"bytes,6,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"`
	Disabled         *wrapperspb.BoolValue                `protobuf:"bytes,7,opt,name=disabled,proto3" json:"disabled,omitempty"`
	OrganizationRole *wrapperspb.Int32Value               `protobuf:"bytes,8,opt,name=organization_role,json=organizationRole,proto3" json:"organization_role,omitempty"`
	EnvironmentId    *wrapperspb.StringValue              `protobuf:"bytes,9,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	EnvironmentRole  *wrapperspb.Int32Value               `protobuf:"bytes,10,opt,name=environment_role,json=environmentRole,proto3" json:"environment_role,omitempty"`
}

func (x *ListAccountsV2Request) Reset() {
	*x = ListAccountsV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsV2Request) ProtoMessage() {}

func (x *ListAccountsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsV2Request.ProtoReflect.Descriptor instead.
func (*ListAccountsV2Request) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListAccountsV2Request) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccountsV2Request) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAccountsV2Request) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListAccountsV2Request) GetOrderBy() ListAccountsV2Request_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return ListAccountsV2Request_DEFAULT
}

func (x *ListAccountsV2Request) GetOrderDirection() ListAccountsV2Request_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return ListAccountsV2Request_ASC
}

func (x *ListAccountsV2Request) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

func (x *ListAccountsV2Request) GetDisabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Disabled
	}
	return nil
}

func (x *ListAccountsV2Request) GetOrganizationRole() *wrapperspb.Int32Value {
	if x != nil {
		return x.OrganizationRole
	}
	return nil
}

func (x *ListAccountsV2Request) GetEnvironmentId() *wrapperspb.StringValue {
	if x != nil {
		return x.EnvironmentId
	}
	return nil
}

func (x *ListAccountsV2Request) GetEnvironmentRole() *wrapperspb.Int32Value {
	if x != nil {
		return x.EnvironmentRole
	}
	return nil
}

type ListAccountsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts   []*AccountV2 `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Cursor     string       `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount int64        `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAccountsV2Response) Reset() {
	*x = ListAccountsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAccountsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsV2Response) ProtoMessage() {}

func (x *ListAccountsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsV2Response.ProtoReflect.Descriptor instead.
func (*ListAccountsV2Response) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListAccountsV2Response) GetAccounts() []*AccountV2 {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *ListAccountsV2Response) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAccountsV2Response) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command              *CreateAPIKeyCommand `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	EnvironmentNamespace string               `protobuf:"bytes,2,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
}

func (x *CreateAPIKeyRequest) Reset() {
	*x = CreateAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyRequest) ProtoMessage() {}

func (x *CreateAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{21}
}

func (x *CreateAPIKeyRequest) GetCommand() *CreateAPIKeyCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *CreateAPIKeyRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

type CreateAPIKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey *APIKey `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *CreateAPIKeyResponse) Reset() {
	*x = CreateAPIKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPIKeyResponse) ProtoMessage() {}

func (x *CreateAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAPIKeyResponse) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type ChangeAPIKeyNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command              *ChangeAPIKeyNameCommand `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	EnvironmentNamespace string                   `protobuf:"bytes,3,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
}

func (x *ChangeAPIKeyNameRequest) Reset() {
	*x = ChangeAPIKeyNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAPIKeyNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAPIKeyNameRequest) ProtoMessage() {}

func (x *ChangeAPIKeyNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAPIKeyNameRequest.ProtoReflect.Descriptor instead.
func (*ChangeAPIKeyNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{23}
}

func (x *ChangeAPIKeyNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeAPIKeyNameRequest) GetCommand() *ChangeAPIKeyNameCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ChangeAPIKeyNameRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

type ChangeAPIKeyNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeAPIKeyNameResponse) Reset() {
	*x = ChangeAPIKeyNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeAPIKeyNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAPIKeyNameResponse) ProtoMessage() {}

func (x *ChangeAPIKeyNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAPIKeyNameResponse.ProtoReflect.Descriptor instead.
func (*ChangeAPIKeyNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{24}
}

type EnableAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command              *EnableAPIKeyCommand `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	EnvironmentNamespace string               `protobuf:"bytes,3,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
}

func (x *EnableAPIKeyRequest) Reset() {
	*x = EnableAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAPIKeyRequest) ProtoMessage() {}

func (x *EnableAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*EnableAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{25}
}

func (x *EnableAPIKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnableAPIKeyRequest) GetCommand() *EnableAPIKeyCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *EnableAPIKeyRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

type EnableAPIKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableAPIKeyResponse) Reset() {
	*x = EnableAPIKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableAPIKeyResponse) ProtoMessage() {}

func (x *EnableAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*EnableAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{26}
}

type DisableAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Command              *DisableAPIKeyCommand `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	EnvironmentNamespace string                `protobuf:"bytes,3,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
}

func (x *DisableAPIKeyRequest) Reset() {
	*x = DisableAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAPIKeyRequest) ProtoMessage() {}

func (x *DisableAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*DisableAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{27}
}

func (x *DisableAPIKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DisableAPIKeyRequest) GetCommand() *DisableAPIKeyCommand {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *DisableAPIKeyRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

type DisableAPIKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableAPIKeyResponse) Reset() {
	*x = DisableAPIKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableAPIKeyResponse) ProtoMessage() {}

func (x *DisableAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*DisableAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{28}
}

type GetAPIKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvironmentNamespace string `protobuf:"bytes,2,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
}

func (x *GetAPIKeyRequest) Reset() {
	*x = GetAPIKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyRequest) ProtoMessage() {}

func (x *GetAPIKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{29}
}

func (x *GetAPIKeyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAPIKeyRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

type GetAPIKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey *APIKey `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *GetAPIKeyResponse) Reset() {
	*x = GetAPIKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyResponse) ProtoMessage() {}

func (x *GetAPIKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyResponse.ProtoReflect.Descriptor instead.
func (*GetAPIKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{30}
}

func (x *GetAPIKeyResponse) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type ListAPIKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize             int64                             `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor               string                            `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	EnvironmentNamespace string                            `protobuf:"bytes,3,opt,name=environment_namespace,json=environmentNamespace,proto3" json:"environment_namespace,omitempty"`
	OrderBy              ListAPIKeysRequest_OrderBy        `protobuf:"varint,4,opt,name=order_by,json=orderBy,proto3,enum=bucketeer.account.ListAPIKeysRequest_OrderBy" json:"order_by,omitempty"`
	OrderDirection       ListAPIKeysRequest_OrderDirection `protobuf:"varint,5,opt,name=order_direction,json=orderDirection,proto3,enum=bucketeer.account.ListAPIKeysRequest_OrderDirection" json:"order_direction,omitempty"`
	SearchKeyword        string                            `protobuf:"bytes,6,opt,name=search_keyword,json=searchKeyword,proto3" json:"search_keyword,omitempty"`
	Disabled             *wrapperspb.BoolValue             `protobuf:"bytes,7,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *ListAPIKeysRequest) Reset() {
	*x = ListAPIKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysRequest) ProtoMessage() {}

func (x *ListAPIKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysRequest.ProtoReflect.Descriptor instead.
func (*ListAPIKeysRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{31}
}

func (x *ListAPIKeysRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAPIKeysRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAPIKeysRequest) GetEnvironmentNamespace() string {
	if x != nil {
		return x.EnvironmentNamespace
	}
	return ""
}

func (x *ListAPIKeysRequest) GetOrderBy() ListAPIKeysRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return ListAPIKeysRequest_DEFAULT
}

func (x *ListAPIKeysRequest) GetOrderDirection() ListAPIKeysRequest_OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return ListAPIKeysRequest_ASC
}

func (x *ListAPIKeysRequest) GetSearchKeyword() string {
	if x != nil {
		return x.SearchKeyword
	}
	return ""
}

func (x *ListAPIKeysRequest) GetDisabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Disabled
	}
	return nil
}

type ListAPIKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeys    []*APIKey `protobuf:"bytes,1,rep,name=api_keys,json=apiKeys,proto3" json:"api_keys,omitempty"`
	Cursor     string    `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	TotalCount int64     `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListAPIKeysResponse) Reset() {
	*x = ListAPIKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAPIKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAPIKeysResponse) ProtoMessage() {}

func (x *ListAPIKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAPIKeysResponse.ProtoReflect.Descriptor instead.
func (*ListAPIKeysResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListAPIKeysResponse) GetApiKeys() []*APIKey {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *ListAPIKeysResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListAPIKeysResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetAPIKeyBySearchingAllEnvironmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAPIKeyBySearchingAllEnvironmentsRequest) Reset() {
	*x = GetAPIKeyBySearchingAllEnvironmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyBySearchingAllEnvironmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyBySearchingAllEnvironmentsRequest) ProtoMessage() {}

func (x *GetAPIKeyBySearchingAllEnvironmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyBySearchingAllEnvironmentsRequest.ProtoReflect.Descriptor instead.
func (*GetAPIKeyBySearchingAllEnvironmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{33}
}

func (x *GetAPIKeyBySearchingAllEnvironmentsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAPIKeyBySearchingAllEnvironmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvironmentApiKey *EnvironmentAPIKey `protobuf:"bytes,1,opt,name=environment_api_key,json=environmentApiKey,proto3" json:"environment_api_key,omitempty"`
}

func (x *GetAPIKeyBySearchingAllEnvironmentsResponse) Reset() {
	*x = GetAPIKeyBySearchingAllEnvironmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_account_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAPIKeyBySearchingAllEnvironmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAPIKeyBySearchingAllEnvironmentsResponse) ProtoMessage() {}

func (x *GetAPIKeyBySearchingAllEnvironmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_account_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAPIKeyBySearchingAllEnvironmentsResponse.ProtoReflect.Descriptor instead.
func (*GetAPIKeyBySearchingAllEnvironmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_account_service_proto_rawDescGZIP(), []int{34}
}

func (x *GetAPIKeyBySearchingAllEnvironmentsResponse) GetEnvironmentApiKey() *EnvironmentAPIKey {
	if x != nil {
		return x.EnvironmentApiKey
	}
	return nil
}

var File_proto_account_service_proto protoreflect.FileDescriptor

var file_proto_account_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x38, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x67, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x51, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x9c, 0x01, 0x0a, 0x16, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xb4, 0x04, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5d, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x72, 0x0a, 0x19, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x32, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x16, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x82,
	0x01, 0x0a, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x1d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x82, 0x01, 0x0a, 0x20, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x56, 0x32, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x1d, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x22, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x23,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x42, 0x79, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x56, 0x32, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc2, 0x05, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x60, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0d, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x46, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x41, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x22, 0x23, 0x0a, 0x0e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01,
	0x22, 0x8b, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8c,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4a, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x17, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x1a, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9c, 0x01, 0x0a,
	0x13, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x14, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x33, 0x0a, 0x15, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0xed, 0x03, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x65,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x5d, 0x0a, 0x0f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x50,
	0x44, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x10, 0x03, 0x22, 0x23, 0x0a, 0x0e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x22,
	0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3c, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c,
	0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x2b, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x13, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x11, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x32, 0xac, 0x0f, 0x0a, 0x0e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x05, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x2c, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x33, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32,
	0x12, 0x29, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x32, 0x12, 0x2a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56,
	0x32, 0x12, 0x29, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x12, 0x29, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65,
	0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x56, 0x32, 0x12, 0x26, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x32, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x12, 0x35, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x56, 0x32, 0x42, 0x79, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x32, 0x42, 0x79, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x65, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x56, 0x32, 0x12, 0x28, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x10, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x25, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x65, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65,
	0x72, 0x2d, 0x69, 0x6f, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x65, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_account_service_proto_rawDescOnce sync.Once
	file_proto_account_service_proto_rawDescData = file_proto_account_service_proto_rawDesc
)

func file_proto_account_service_proto_rawDescGZIP() []byte {
	file_proto_account_service_proto_rawDescOnce.Do(func() {
		file_proto_account_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_account_service_proto_rawDescData)
	})
	return file_proto_account_service_proto_rawDescData
}

var file_proto_account_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_account_service_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_proto_account_service_proto_goTypes = []interface{}{
	(ListAccountsV2Request_OrderBy)(0),                  // 0: bucketeer.account.ListAccountsV2Request.OrderBy
	(ListAccountsV2Request_OrderDirection)(0),           // 1: bucketeer.account.ListAccountsV2Request.OrderDirection
	(ListAPIKeysRequest_OrderBy)(0),                     // 2: bucketeer.account.ListAPIKeysRequest.OrderBy
	(ListAPIKeysRequest_OrderDirection)(0),              // 3: bucketeer.account.ListAPIKeysRequest.OrderDirection
	(*GetMeRequest)(nil),                                // 4: bucketeer.account.GetMeRequest
	(*GetMeResponse)(nil),                               // 5: bucketeer.account.GetMeResponse
	(*GetMyOrganizationsRequest)(nil),                   // 6: bucketeer.account.GetMyOrganizationsRequest
	(*GetMyOrganizationsByEmailRequest)(nil),            // 7: bucketeer.account.GetMyOrganizationsByEmailRequest
	(*GetMyOrganizationsResponse)(nil),                  // 8: bucketeer.account.GetMyOrganizationsResponse
	(*CreateAccountV2Request)(nil),                      // 9: bucketeer.account.CreateAccountV2Request
	(*CreateAccountV2Response)(nil),                     // 10: bucketeer.account.CreateAccountV2Response
	(*EnableAccountV2Request)(nil),                      // 11: bucketeer.account.EnableAccountV2Request
	(*EnableAccountV2Response)(nil),                     // 12: bucketeer.account.EnableAccountV2Response
	(*DisableAccountV2Request)(nil),                     // 13: bucketeer.account.DisableAccountV2Request
	(*DisableAccountV2Response)(nil),                    // 14: bucketeer.account.DisableAccountV2Response
	(*DeleteAccountV2Request)(nil),                      // 15: bucketeer.account.DeleteAccountV2Request
	(*DeleteAccountV2Response)(nil),                     // 16: bucketeer.account.DeleteAccountV2Response
	(*UpdateAccountV2Request)(nil),                      // 17: bucketeer.account.UpdateAccountV2Request
	(*UpdateAccountV2Response)(nil),                     // 18: bucketeer.account.UpdateAccountV2Response
	(*GetAccountV2Request)(nil),                         // 19: bucketeer.account.GetAccountV2Request
	(*GetAccountV2Response)(nil),                        // 20: bucketeer.account.GetAccountV2Response
	(*GetAccountV2ByEnvironmentIDRequest)(nil),          // 21: bucketeer.account.GetAccountV2ByEnvironmentIDRequest
	(*GetAccountV2ByEnvironmentIDResponse)(nil),         // 22: bucketeer.account.GetAccountV2ByEnvironmentIDResponse
	(*ListAccountsV2Request)(nil),                       // 23: bucketeer.account.ListAccountsV2Request
	(*ListAccountsV2Response)(nil),                      // 24: bucketeer.account.ListAccountsV2Response
	(*CreateAPIKeyRequest)(nil),                         // 25: bucketeer.account.CreateAPIKeyRequest
	(*CreateAPIKeyResponse)(nil),                        // 26: bucketeer.account.CreateAPIKeyResponse
	(*ChangeAPIKeyNameRequest)(nil),                     // 27: bucketeer.account.ChangeAPIKeyNameRequest
	(*ChangeAPIKeyNameResponse)(nil),                    // 28: bucketeer.account.ChangeAPIKeyNameResponse
	(*EnableAPIKeyRequest)(nil),                         // 29: bucketeer.account.EnableAPIKeyRequest
	(*EnableAPIKeyResponse)(nil),                        // 30: bucketeer.account.EnableAPIKeyResponse
	(*DisableAPIKeyRequest)(nil),                        // 31: bucketeer.account.DisableAPIKeyRequest
	(*DisableAPIKeyResponse)(nil),                       // 32: bucketeer.account.DisableAPIKeyResponse
	(*GetAPIKeyRequest)(nil),                            // 33: bucketeer.account.GetAPIKeyRequest
	(*GetAPIKeyResponse)(nil),                           // 34: bucketeer.account.GetAPIKeyResponse
	(*ListAPIKeysRequest)(nil),                          // 35: bucketeer.account.ListAPIKeysRequest
	(*ListAPIKeysResponse)(nil),                         // 36: bucketeer.account.ListAPIKeysResponse
	(*GetAPIKeyBySearchingAllEnvironmentsRequest)(nil),  // 37: bucketeer.account.GetAPIKeyBySearchingAllEnvironmentsRequest
	(*GetAPIKeyBySearchingAllEnvironmentsResponse)(nil), // 38: bucketeer.account.GetAPIKeyBySearchingAllEnvironmentsResponse
	(*ConsoleAccount)(nil),                              // 39: bucketeer.account.ConsoleAccount
	(*environment.Organization)(nil),                    // 40: bucketeer.environment.Organization
	(*CreateAccountV2Command)(nil),                      // 41: bucketeer.account.CreateAccountV2Command
	(*AccountV2)(nil),                                   // 42: bucketeer.account.AccountV2
	(*EnableAccountV2Command)(nil),                      // 43: bucketeer.account.EnableAccountV2Command
	(*DisableAccountV2Command)(nil),                     // 44: bucketeer.account.DisableAccountV2Command
	(*DeleteAccountV2Command)(nil),                      // 45: bucketeer.account.DeleteAccountV2Command
	(*ChangeAccountV2NameCommand)(nil),                  // 46: bucketeer.account.ChangeAccountV2NameCommand
	(*ChangeAccountV2AvatarImageUrlCommand)(nil),        // 47: bucketeer.account.ChangeAccountV2AvatarImageUrlCommand
	(*ChangeAccountV2OrganizationRoleCommand)(nil),      // 48: bucketeer.account.ChangeAccountV2OrganizationRoleCommand
	(*ChangeAccountV2EnvironmentRolesCommand)(nil),      // 49: bucketeer.account.ChangeAccountV2EnvironmentRolesCommand
	(*wrapperspb.BoolValue)(nil),                        // 50: google.protobuf.BoolValue
	(*wrapperspb.Int32Value)(nil),                       // 51: google.protobuf.Int32Value
	(*wrapperspb.StringValue)(nil),                      // 52: google.protobuf.StringValue
	(*CreateAPIKeyCommand)(nil),                         // 53: bucketeer.account.CreateAPIKeyCommand
	(*APIKey)(nil),                                      // 54: bucketeer.account.APIKey
	(*ChangeAPIKeyNameCommand)(nil),                     // 55: bucketeer.account.ChangeAPIKeyNameCommand
	(*EnableAPIKeyCommand)(nil),                         // 56: bucketeer.account.EnableAPIKeyCommand
	(*DisableAPIKeyCommand)(nil),                        // 57: bucketeer.account.DisableAPIKeyCommand
	(*EnvironmentAPIKey)(nil),                           // 58: bucketeer.account.EnvironmentAPIKey
}
var file_proto_account_service_proto_depIdxs = []int32{
	39, // 0: bucketeer.account.GetMeResponse.account:type_name -> bucketeer.account.ConsoleAccount
	40, // 1: bucketeer.account.GetMyOrganizationsResponse.organizations:type_name -> bucketeer.environment.Organization
	41, // 2: bucketeer.account.CreateAccountV2Request.command:type_name -> bucketeer.account.CreateAccountV2Command
	42, // 3: bucketeer.account.CreateAccountV2Response.account:type_name -> bucketeer.account.AccountV2
	43, // 4: bucketeer.account.EnableAccountV2Request.command:type_name -> bucketeer.account.EnableAccountV2Command
	44, // 5: bucketeer.account.DisableAccountV2Request.command:type_name -> bucketeer.account.DisableAccountV2Command
	45, // 6: bucketeer.account.DeleteAccountV2Request.command:type_name -> bucketeer.account.DeleteAccountV2Command
	46, // 7: bucketeer.account.UpdateAccountV2Request.change_name_command:type_name -> bucketeer.account.ChangeAccountV2NameCommand
	47, // 8: bucketeer.account.UpdateAccountV2Request.change_avatar_url_command:type_name -> bucketeer.account.ChangeAccountV2AvatarImageUrlCommand
	48, // 9: bucketeer.account.UpdateAccountV2Request.change_organization_role_command:type_name -> bucketeer.account.ChangeAccountV2OrganizationRoleCommand
	49, // 10: bucketeer.account.UpdateAccountV2Request.change_environment_roles_command:type_name -> bucketeer.account.ChangeAccountV2EnvironmentRolesCommand
	42, // 11: bucketeer.account.GetAccountV2Response.account:type_name -> bucketeer.account.AccountV2
	42, // 12: bucketeer.account.GetAccountV2ByEnvironmentIDResponse.account:type_name -> bucketeer.account.AccountV2
	0,  // 13: bucketeer.account.ListAccountsV2Request.order_by:type_name -> bucketeer.account.ListAccountsV2Request.OrderBy
	1,  // 14: bucketeer.account.ListAccountsV2Request.order_direction:type_name -> bucketeer.account.ListAccountsV2Request.OrderDirection
	50, // 15: bucketeer.account.ListAccountsV2Request.disabled:type_name -> google.protobuf.BoolValue
	51, // 16: bucketeer.account.ListAccountsV2Request.organization_role:type_name -> google.protobuf.Int32Value
	52, // 17: bucketeer.account.ListAccountsV2Request.environment_id:type_name -> google.protobuf.StringValue
	51, // 18: bucketeer.account.ListAccountsV2Request.environment_role:type_name -> google.protobuf.Int32Value
	42, // 19: bucketeer.account.ListAccountsV2Response.accounts:type_name -> bucketeer.account.AccountV2
	53, // 20: bucketeer.account.CreateAPIKeyRequest.command:type_name -> bucketeer.account.CreateAPIKeyCommand
	54, // 21: bucketeer.account.CreateAPIKeyResponse.api_key:type_name -> bucketeer.account.APIKey
	55, // 22: bucketeer.account.ChangeAPIKeyNameRequest.command:type_name -> bucketeer.account.ChangeAPIKeyNameCommand
	56, // 23: bucketeer.account.EnableAPIKeyRequest.command:type_name -> bucketeer.account.EnableAPIKeyCommand
	57, // 24: bucketeer.account.DisableAPIKeyRequest.command:type_name -> bucketeer.account.DisableAPIKeyCommand
	54, // 25: bucketeer.account.GetAPIKeyResponse.api_key:type_name -> bucketeer.account.APIKey
	2,  // 26: bucketeer.account.ListAPIKeysRequest.order_by:type_name -> bucketeer.account.ListAPIKeysRequest.OrderBy
	3,  // 27: bucketeer.account.ListAPIKeysRequest.order_direction:type_name -> bucketeer.account.ListAPIKeysRequest.OrderDirection
	50, // 28: bucketeer.account.ListAPIKeysRequest.disabled:type_name -> google.protobuf.BoolValue
	54, // 29: bucketeer.account.ListAPIKeysResponse.api_keys:type_name -> bucketeer.account.APIKey
	58, // 30: bucketeer.account.GetAPIKeyBySearchingAllEnvironmentsResponse.environment_api_key:type_name -> bucketeer.account.EnvironmentAPIKey
	4,  // 31: bucketeer.account.AccountService.GetMe:input_type -> bucketeer.account.GetMeRequest
	6,  // 32: bucketeer.account.AccountService.GetMyOrganizations:input_type -> bucketeer.account.GetMyOrganizationsRequest
	7,  // 33: bucketeer.account.AccountService.GetMyOrganizationsByEmail:input_type -> bucketeer.account.GetMyOrganizationsByEmailRequest
	9,  // 34: bucketeer.account.AccountService.CreateAccountV2:input_type -> bucketeer.account.CreateAccountV2Request
	11, // 35: bucketeer.account.AccountService.EnableAccountV2:input_type -> bucketeer.account.EnableAccountV2Request
	13, // 36: bucketeer.account.AccountService.DisableAccountV2:input_type -> bucketeer.account.DisableAccountV2Request
	17, // 37: bucketeer.account.AccountService.UpdateAccountV2:input_type -> bucketeer.account.UpdateAccountV2Request
	15, // 38: bucketeer.account.AccountService.DeleteAccountV2:input_type -> bucketeer.account.DeleteAccountV2Request
	19, // 39: bucketeer.account.AccountService.GetAccountV2:input_type -> bucketeer.account.GetAccountV2Request
	21, // 40: bucketeer.account.AccountService.GetAccountV2ByEnvironmentID:input_type -> bucketeer.account.GetAccountV2ByEnvironmentIDRequest
	23, // 41: bucketeer.account.AccountService.ListAccountsV2:input_type -> bucketeer.account.ListAccountsV2Request
	25, // 42: bucketeer.account.AccountService.CreateAPIKey:input_type -> bucketeer.account.CreateAPIKeyRequest
	27, // 43: bucketeer.account.AccountService.ChangeAPIKeyName:input_type -> bucketeer.account.ChangeAPIKeyNameRequest
	29, // 44: bucketeer.account.AccountService.EnableAPIKey:input_type -> bucketeer.account.EnableAPIKeyRequest
	31, // 45: bucketeer.account.AccountService.DisableAPIKey:input_type -> bucketeer.account.DisableAPIKeyRequest
	33, // 46: bucketeer.account.AccountService.GetAPIKey:input_type -> bucketeer.account.GetAPIKeyRequest
	35, // 47: bucketeer.account.AccountService.ListAPIKeys:input_type -> bucketeer.account.ListAPIKeysRequest
	37, // 48: bucketeer.account.AccountService.GetAPIKeyBySearchingAllEnvironments:input_type -> bucketeer.account.GetAPIKeyBySearchingAllEnvironmentsRequest
	5,  // 49: bucketeer.account.AccountService.GetMe:output_type -> bucketeer.account.GetMeResponse
	8,  // 50: bucketeer.account.AccountService.GetMyOrganizations:output_type -> bucketeer.account.GetMyOrganizationsResponse
	8,  // 51: bucketeer.account.AccountService.GetMyOrganizationsByEmail:output_type -> bucketeer.account.GetMyOrganizationsResponse
	10, // 52: bucketeer.account.AccountService.CreateAccountV2:output_type -> bucketeer.account.CreateAccountV2Response
	12, // 53: bucketeer.account.AccountService.EnableAccountV2:output_type -> bucketeer.account.EnableAccountV2Response
	14, // 54: bucketeer.account.AccountService.DisableAccountV2:output_type -> bucketeer.account.DisableAccountV2Response
	18, // 55: bucketeer.account.AccountService.UpdateAccountV2:output_type -> bucketeer.account.UpdateAccountV2Response
	16, // 56: bucketeer.account.AccountService.DeleteAccountV2:output_type -> bucketeer.account.DeleteAccountV2Response
	20, // 57: bucketeer.account.AccountService.GetAccountV2:output_type -> bucketeer.account.GetAccountV2Response
	22, // 58: bucketeer.account.AccountService.GetAccountV2ByEnvironmentID:output_type -> bucketeer.account.GetAccountV2ByEnvironmentIDResponse
	24, // 59: bucketeer.account.AccountService.ListAccountsV2:output_type -> bucketeer.account.ListAccountsV2Response
	26, // 60: bucketeer.account.AccountService.CreateAPIKey:output_type -> bucketeer.account.CreateAPIKeyResponse
	28, // 61: bucketeer.account.AccountService.ChangeAPIKeyName:output_type -> bucketeer.account.ChangeAPIKeyNameResponse
	30, // 62: bucketeer.account.AccountService.EnableAPIKey:output_type -> bucketeer.account.EnableAPIKeyResponse
	32, // 63: bucketeer.account.AccountService.DisableAPIKey:output_type -> bucketeer.account.DisableAPIKeyResponse
	34, // 64: bucketeer.account.AccountService.GetAPIKey:output_type -> bucketeer.account.GetAPIKeyResponse
	36, // 65: bucketeer.account.AccountService.ListAPIKeys:output_type -> bucketeer.account.ListAPIKeysResponse
	38, // 66: bucketeer.account.AccountService.GetAPIKeyBySearchingAllEnvironments:output_type -> bucketeer.account.GetAPIKeyBySearchingAllEnvironmentsResponse
	49, // [49:67] is the sub-list for method output_type
	31, // [31:49] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_proto_account_service_proto_init() }
func file_proto_account_service_proto_init() {
	if File_proto_account_service_proto != nil {
		return
	}
	file_proto_account_account_proto_init()
	file_proto_account_api_key_proto_init()
	file_proto_account_command_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_account_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOrganizationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOrganizationsByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOrganizationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountV2ByEnvironmentIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountV2ByEnvironmentIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountsV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAccountsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPIKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAPIKeyNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeAPIKeyNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableAPIKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableAPIKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAPIKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyBySearchingAllEnvironmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_account_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAPIKeyBySearchingAllEnvironmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_account_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_account_service_proto_goTypes,
		DependencyIndexes: file_proto_account_service_proto_depIdxs,
		EnumInfos:         file_proto_account_service_proto_enumTypes,
		MessageInfos:      file_proto_account_service_proto_msgTypes,
	}.Build()
	File_proto_account_service_proto = out.File
	file_proto_account_service_proto_rawDesc = nil
	file_proto_account_service_proto_goTypes = nil
	file_proto_account_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	GetMe(ctx context.Context, in *GetMeRequest, opts ...grpc.CallOption) (*GetMeResponse, error)
	GetMyOrganizations(ctx context.Context, in *GetMyOrganizationsRequest, opts ...grpc.CallOption) (*GetMyOrganizationsResponse, error)
	GetMyOrganizationsByEmail(ctx context.Context, in *GetMyOrganizationsByEmailRequest, opts ...grpc.CallOption) (*GetMyOrganizationsResponse, error)
	CreateAccountV2(ctx context.Context, in *CreateAccountV2Request, opts ...grpc.CallOption) (*CreateAccountV2Response, error)
	EnableAccountV2(ctx context.Context, in *EnableAccountV2Request, opts ...grpc.CallOption) (*EnableAccountV2Response, error)
	DisableAccountV2(ctx context.Context, in *DisableAccountV2Request, opts ...grpc.CallOption) (*DisableAccountV2Response, error)
	UpdateAccountV2(ctx context.Context, in *UpdateAccountV2Request, opts ...grpc.CallOption) (*UpdateAccountV2Response, error)
	DeleteAccountV2(ctx context.Context, in *DeleteAccountV2Request, opts ...grpc.CallOption) (*DeleteAccountV2Response, error)
	GetAccountV2(ctx context.Context, in *GetAccountV2Request, opts ...grpc.CallOption) (*GetAccountV2Response, error)
	GetAccountV2ByEnvironmentID(ctx context.Context, in *GetAccountV2ByEnvironmentIDRequest, opts ...grpc.CallOption) (*GetAccountV2ByEnvironmentIDResponse, error)
	ListAccountsV2(ctx context.Context, in *ListAccountsV2Request, opts ...grpc.CallOption) (*ListAccountsV2Response, error)
	CreateAPIKey(ctx context.Context, in *CreateAPIKeyRequest, opts ...grpc.CallOption) (*CreateAPIKeyResponse, error)
	ChangeAPIKeyName(ctx context.Context, in *ChangeAPIKeyNameRequest, opts ...grpc.CallOption) (*ChangeAPIKeyNameResponse, error)
	EnableAPIKey(ctx context.Context, in *EnableAPIKeyRequest, opts ...grpc.CallOption) (*EnableAPIKeyResponse, error)
	DisableAPIKey(ctx context.Context, in *DisableAPIKeyRequest, opts ...grpc.CallOption) (*DisableAPIKeyResponse, error)
	GetAPIKey(ctx context.Context, in *GetAPIKeyRequest, opts ...grpc.CallOption) (*GetAPIKeyResponse, error)
	ListAPIKeys(ctx context.Context, in *ListAPIKeysRequest, opts ...grpc.CallOption) (*ListAPIKeysResponse, error)
	GetAPIKeyBySearchingAllEnvironments(ctx context.Context, in *GetAPIKeyBySearchingAllEnvironmentsRequest, opts ...grpc.CallOption) (*GetAPIKeyBySearchingAllEnvironmentsResponse, error)
}

type accountServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountServiceClient(cc grpc.ClientConnInterface) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetMe(ctx context.Context, in *GetMeRequest, opts ...grpc.CallOption) (*GetMeResponse, error) {
	out := new(GetMeResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetMe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetMyOrganizations(ctx context.Context, in *GetMyOrganizationsRequest, opts ...grpc.CallOption) (*GetMyOrganizationsResponse, error) {
	out := new(GetMyOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetMyOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetMyOrganizationsByEmail(ctx context.Context, in *GetMyOrganizationsByEmailRequest, opts ...grpc.CallOption) (*GetMyOrganizationsResponse, error) {
	out := new(GetMyOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetMyOrganizationsByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateAccountV2(ctx context.Context, in *CreateAccountV2Request, opts ...grpc.CallOption) (*CreateAccountV2Response, error) {
	out := new(CreateAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/CreateAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) EnableAccountV2(ctx context.Context, in *EnableAccountV2Request, opts ...grpc.CallOption) (*EnableAccountV2Response, error) {
	out := new(EnableAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/EnableAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DisableAccountV2(ctx context.Context, in *DisableAccountV2Request, opts ...grpc.CallOption) (*DisableAccountV2Response, error) {
	out := new(DisableAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/DisableAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateAccountV2(ctx context.Context, in *UpdateAccountV2Request, opts ...grpc.CallOption) (*UpdateAccountV2Response, error) {
	out := new(UpdateAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/UpdateAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteAccountV2(ctx context.Context, in *DeleteAccountV2Request, opts ...grpc.CallOption) (*DeleteAccountV2Response, error) {
	out := new(DeleteAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/DeleteAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountV2(ctx context.Context, in *GetAccountV2Request, opts ...grpc.CallOption) (*GetAccountV2Response, error) {
	out := new(GetAccountV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetAccountV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountV2ByEnvironmentID(ctx context.Context, in *GetAccountV2ByEnvironmentIDRequest, opts ...grpc.CallOption) (*GetAccountV2ByEnvironmentIDResponse, error) {
	out := new(GetAccountV2ByEnvironmentIDResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetAccountV2ByEnvironmentID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListAccountsV2(ctx context.Context, in *ListAccountsV2Request, opts ...grpc.CallOption) (*ListAccountsV2Response, error) {
	out := new(ListAccountsV2Response)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/ListAccountsV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateAPIKey(ctx context.Context, in *CreateAPIKeyRequest, opts ...grpc.CallOption) (*CreateAPIKeyResponse, error) {
	out := new(CreateAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/CreateAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ChangeAPIKeyName(ctx context.Context, in *ChangeAPIKeyNameRequest, opts ...grpc.CallOption) (*ChangeAPIKeyNameResponse, error) {
	out := new(ChangeAPIKeyNameResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/ChangeAPIKeyName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) EnableAPIKey(ctx context.Context, in *EnableAPIKeyRequest, opts ...grpc.CallOption) (*EnableAPIKeyResponse, error) {
	out := new(EnableAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/EnableAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DisableAPIKey(ctx context.Context, in *DisableAPIKeyRequest, opts ...grpc.CallOption) (*DisableAPIKeyResponse, error) {
	out := new(DisableAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/DisableAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAPIKey(ctx context.Context, in *GetAPIKeyRequest, opts ...grpc.CallOption) (*GetAPIKeyResponse, error) {
	out := new(GetAPIKeyResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetAPIKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListAPIKeys(ctx context.Context, in *ListAPIKeysRequest, opts ...grpc.CallOption) (*ListAPIKeysResponse, error) {
	out := new(ListAPIKeysResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/ListAPIKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAPIKeyBySearchingAllEnvironments(ctx context.Context, in *GetAPIKeyBySearchingAllEnvironmentsRequest, opts ...grpc.CallOption) (*GetAPIKeyBySearchingAllEnvironmentsResponse, error) {
	out := new(GetAPIKeyBySearchingAllEnvironmentsResponse)
	err := c.cc.Invoke(ctx, "/bucketeer.account.AccountService/GetAPIKeyBySearchingAllEnvironments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	GetMe(context.Context, *GetMeRequest) (*GetMeResponse, error)
	GetMyOrganizations(context.Context, *GetMyOrganizationsRequest) (*GetMyOrganizationsResponse, error)
	GetMyOrganizationsByEmail(context.Context, *GetMyOrganizationsByEmailRequest) (*GetMyOrganizationsResponse, error)
	CreateAccountV2(context.Context, *CreateAccountV2Request) (*CreateAccountV2Response, error)
	EnableAccountV2(context.Context, *EnableAccountV2Request) (*EnableAccountV2Response, error)
	DisableAccountV2(context.Context, *DisableAccountV2Request) (*DisableAccountV2Response, error)
	UpdateAccountV2(context.Context, *UpdateAccountV2Request) (*UpdateAccountV2Response, error)
	DeleteAccountV2(context.Context, *DeleteAccountV2Request) (*DeleteAccountV2Response, error)
	GetAccountV2(context.Context, *GetAccountV2Request) (*GetAccountV2Response, error)
	GetAccountV2ByEnvironmentID(context.Context, *GetAccountV2ByEnvironmentIDRequest) (*GetAccountV2ByEnvironmentIDResponse, error)
	ListAccountsV2(context.Context, *ListAccountsV2Request) (*ListAccountsV2Response, error)
	CreateAPIKey(context.Context, *CreateAPIKeyRequest) (*CreateAPIKeyResponse, error)
	ChangeAPIKeyName(context.Context, *ChangeAPIKeyNameRequest) (*ChangeAPIKeyNameResponse, error)
	EnableAPIKey(context.Context, *EnableAPIKeyRequest) (*EnableAPIKeyResponse, error)
	DisableAPIKey(context.Context, *DisableAPIKeyRequest) (*DisableAPIKeyResponse, error)
	GetAPIKey(context.Context, *GetAPIKeyRequest) (*GetAPIKeyResponse, error)
	ListAPIKeys(context.Context, *ListAPIKeysRequest) (*ListAPIKeysResponse, error)
	GetAPIKeyBySearchingAllEnvironments(context.Context, *GetAPIKeyBySearchingAllEnvironmentsRequest) (*GetAPIKeyBySearchingAllEnvironmentsResponse, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) GetMe(context.Context, *GetMeRequest) (*GetMeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMe not implemented")
}
func (*UnimplementedAccountServiceServer) GetMyOrganizations(context.Context, *GetMyOrganizationsRequest) (*GetMyOrganizationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyOrganizations not implemented")
}
func (*UnimplementedAccountServiceServer) GetMyOrganizationsByEmail(context.Context, *GetMyOrganizationsByEmailRequest) (*GetMyOrganizationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyOrganizationsByEmail not implemented")
}
func (*UnimplementedAccountServiceServer) CreateAccountV2(context.Context, *CreateAccountV2Request) (*CreateAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) EnableAccountV2(context.Context, *EnableAccountV2Request) (*EnableAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) DisableAccountV2(context.Context, *DisableAccountV2Request) (*DisableAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) UpdateAccountV2(context.Context, *UpdateAccountV2Request) (*UpdateAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) DeleteAccountV2(context.Context, *DeleteAccountV2Request) (*DeleteAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) GetAccountV2(context.Context, *GetAccountV2Request) (*GetAccountV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountV2 not implemented")
}
func (*UnimplementedAccountServiceServer) GetAccountV2ByEnvironmentID(context.Context, *GetAccountV2ByEnvironmentIDRequest) (*GetAccountV2ByEnvironmentIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountV2ByEnvironmentID not implemented")
}
func (*UnimplementedAccountServiceServer) ListAccountsV2(context.Context, *ListAccountsV2Request) (*ListAccountsV2Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccountsV2 not implemented")
}
func (*UnimplementedAccountServiceServer) CreateAPIKey(context.Context, *CreateAPIKeyRequest) (*CreateAPIKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAPIKey not implemented")
}
func (*UnimplementedAccountServiceServer) ChangeAPIKeyName(context.Context, *ChangeAPIKeyNameRequest) (*ChangeAPIKeyNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeAPIKeyName not implemented")
}
func (*UnimplementedAccountServiceServer) EnableAPIKey(context.Context, *EnableAPIKeyRequest) (*EnableAPIKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnableAPIKey not implemented")
}
func (*UnimplementedAccountServiceServer) DisableAPIKey(context.Context, *DisableAPIKeyRequest) (*DisableAPIKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisableAPIKey not implemented")
}
func (*UnimplementedAccountServiceServer) GetAPIKey(context.Context, *GetAPIKeyRequest) (*GetAPIKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIKey not implemented")
}
func (*UnimplementedAccountServiceServer) ListAPIKeys(context.Context, *ListAPIKeysRequest) (*ListAPIKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAPIKeys not implemented")
}
func (*UnimplementedAccountServiceServer) GetAPIKeyBySearchingAllEnvironments(context.Context, *GetAPIKeyBySearchingAllEnvironmentsRequest) (*GetAPIKeyBySearchingAllEnvironmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAPIKeyBySearchingAllEnvironments not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetMe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetMe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetMe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetMe(ctx, req.(*GetMeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetMyOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMyOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetMyOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetMyOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetMyOrganizations(ctx, req.(*GetMyOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetMyOrganizationsByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMyOrganizationsByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetMyOrganizationsByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetMyOrganizationsByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetMyOrganizationsByEmail(ctx, req.(*GetMyOrganizationsByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/CreateAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccountV2(ctx, req.(*CreateAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_EnableAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).EnableAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/EnableAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).EnableAccountV2(ctx, req.(*EnableAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DisableAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DisableAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/DisableAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DisableAccountV2(ctx, req.(*DisableAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/UpdateAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateAccountV2(ctx, req.(*UpdateAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/DeleteAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteAccountV2(ctx, req.(*DeleteAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetAccountV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountV2(ctx, req.(*GetAccountV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountV2ByEnvironmentID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountV2ByEnvironmentIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountV2ByEnvironmentID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetAccountV2ByEnvironmentID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountV2ByEnvironmentID(ctx, req.(*GetAccountV2ByEnvironmentIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListAccountsV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAccountsV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListAccountsV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/ListAccountsV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListAccountsV2(ctx, req.(*ListAccountsV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAPIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/CreateAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAPIKey(ctx, req.(*CreateAPIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ChangeAPIKeyName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeAPIKeyNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ChangeAPIKeyName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/ChangeAPIKeyName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ChangeAPIKeyName(ctx, req.(*ChangeAPIKeyNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_EnableAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableAPIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).EnableAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/EnableAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).EnableAPIKey(ctx, req.(*EnableAPIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DisableAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableAPIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DisableAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/DisableAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DisableAPIKey(ctx, req.(*DisableAPIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAPIKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAPIKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAPIKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetAPIKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAPIKey(ctx, req.(*GetAPIKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListAPIKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPIKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListAPIKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/ListAPIKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListAPIKeys(ctx, req.(*ListAPIKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAPIKeyBySearchingAllEnvironments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAPIKeyBySearchingAllEnvironmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAPIKeyBySearchingAllEnvironments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bucketeer.account.AccountService/GetAPIKeyBySearchingAllEnvironments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAPIKeyBySearchingAllEnvironments(ctx, req.(*GetAPIKeyBySearchingAllEnvironmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bucketeer.account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMe",
			Handler:    _AccountService_GetMe_Handler,
		},
		{
			MethodName: "GetMyOrganizations",
			Handler:    _AccountService_GetMyOrganizations_Handler,
		},
		{
			MethodName: "GetMyOrganizationsByEmail",
			Handler:    _AccountService_GetMyOrganizationsByEmail_Handler,
		},
		{
			MethodName: "CreateAccountV2",
			Handler:    _AccountService_CreateAccountV2_Handler,
		},
		{
			MethodName: "EnableAccountV2",
			Handler:    _AccountService_EnableAccountV2_Handler,
		},
		{
			MethodName: "DisableAccountV2",
			Handler:    _AccountService_DisableAccountV2_Handler,
		},
		{
			MethodName: "UpdateAccountV2",
			Handler:    _AccountService_UpdateAccountV2_Handler,
		},
		{
			MethodName: "DeleteAccountV2",
			Handler:    _AccountService_DeleteAccountV2_Handler,
		},
		{
			MethodName: "GetAccountV2",
			Handler:    _AccountService_GetAccountV2_Handler,
		},
		{
			MethodName: "GetAccountV2ByEnvironmentID",
			Handler:    _AccountService_GetAccountV2ByEnvironmentID_Handler,
		},
		{
			MethodName: "ListAccountsV2",
			Handler:    _AccountService_ListAccountsV2_Handler,
		},
		{
			MethodName: "CreateAPIKey",
			Handler:    _AccountService_CreateAPIKey_Handler,
		},
		{
			MethodName: "ChangeAPIKeyName",
			Handler:    _AccountService_ChangeAPIKeyName_Handler,
		},
		{
			MethodName: "EnableAPIKey",
			Handler:    _AccountService_EnableAPIKey_Handler,
		},
		{
			MethodName: "DisableAPIKey",
			Handler:    _AccountService_DisableAPIKey_Handler,
		},
		{
			MethodName: "GetAPIKey",
			Handler:    _AccountService_GetAPIKey_Handler,
		},
		{
			MethodName: "ListAPIKeys",
			Handler:    _AccountService_ListAPIKeys_Handler,
		},
		{
			MethodName: "GetAPIKeyBySearchingAllEnvironments",
			Handler:    _AccountService_GetAPIKeyBySearchingAllEnvironments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/account/service.proto",
}
