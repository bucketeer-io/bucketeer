# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.notification import service_pb2 as proto_dot_notification_dot_service__pb2


class NotificationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/GetAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.GetAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.GetAdminSubscriptionResponse.FromString,
                )
        self.ListAdminSubscriptions = channel.unary_unary(
                '/bucketeer.notification.NotificationService/ListAdminSubscriptions',
                request_serializer=proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsResponse.FromString,
                )
        self.ListEnabledAdminSubscriptions = channel.unary_unary(
                '/bucketeer.notification.NotificationService/ListEnabledAdminSubscriptions',
                request_serializer=proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsResponse.FromString,
                )
        self.CreateAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/CreateAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionResponse.FromString,
                )
        self.DeleteAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/DeleteAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionResponse.FromString,
                )
        self.EnableAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/EnableAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionResponse.FromString,
                )
        self.DisableAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/DisableAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionResponse.FromString,
                )
        self.UpdateAdminSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/UpdateAdminSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionResponse.FromString,
                )
        self.GetSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/GetSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.GetSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.GetSubscriptionResponse.FromString,
                )
        self.ListSubscriptions = channel.unary_unary(
                '/bucketeer.notification.NotificationService/ListSubscriptions',
                request_serializer=proto_dot_notification_dot_service__pb2.ListSubscriptionsRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.ListSubscriptionsResponse.FromString,
                )
        self.ListEnabledSubscriptions = channel.unary_unary(
                '/bucketeer.notification.NotificationService/ListEnabledSubscriptions',
                request_serializer=proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsResponse.FromString,
                )
        self.CreateSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/CreateSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.CreateSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.CreateSubscriptionResponse.FromString,
                )
        self.DeleteSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/DeleteSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.DeleteSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.DeleteSubscriptionResponse.FromString,
                )
        self.EnableSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/EnableSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.EnableSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.EnableSubscriptionResponse.FromString,
                )
        self.DisableSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/DisableSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.DisableSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.DisableSubscriptionResponse.FromString,
                )
        self.UpdateSubscription = channel.unary_unary(
                '/bucketeer.notification.NotificationService/UpdateSubscription',
                request_serializer=proto_dot_notification_dot_service__pb2.UpdateSubscriptionRequest.SerializeToString,
                response_deserializer=proto_dot_notification_dot_service__pb2.UpdateSubscriptionResponse.FromString,
                )


class NotificationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAdminSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnabledAdminSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAdminSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnabledSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.GetAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.GetAdminSubscriptionResponse.SerializeToString,
            ),
            'ListAdminSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAdminSubscriptions,
                    request_deserializer=proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsResponse.SerializeToString,
            ),
            'ListEnabledAdminSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnabledAdminSubscriptions,
                    request_deserializer=proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsResponse.SerializeToString,
            ),
            'CreateAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionResponse.SerializeToString,
            ),
            'DeleteAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionResponse.SerializeToString,
            ),
            'EnableAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionResponse.SerializeToString,
            ),
            'DisableAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionResponse.SerializeToString,
            ),
            'UpdateAdminSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAdminSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionResponse.SerializeToString,
            ),
            'GetSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.GetSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.GetSubscriptionResponse.SerializeToString,
            ),
            'ListSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscriptions,
                    request_deserializer=proto_dot_notification_dot_service__pb2.ListSubscriptionsRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.ListSubscriptionsResponse.SerializeToString,
            ),
            'ListEnabledSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnabledSubscriptions,
                    request_deserializer=proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsResponse.SerializeToString,
            ),
            'CreateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.CreateSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.CreateSubscriptionResponse.SerializeToString,
            ),
            'DeleteSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.DeleteSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.DeleteSubscriptionResponse.SerializeToString,
            ),
            'EnableSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.EnableSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.EnableSubscriptionResponse.SerializeToString,
            ),
            'DisableSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.DisableSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.DisableSubscriptionResponse.SerializeToString,
            ),
            'UpdateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSubscription,
                    request_deserializer=proto_dot_notification_dot_service__pb2.UpdateSubscriptionRequest.FromString,
                    response_serializer=proto_dot_notification_dot_service__pb2.UpdateSubscriptionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bucketeer.notification.NotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NotificationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/GetAdminSubscription',
            proto_dot_notification_dot_service__pb2.GetAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.GetAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAdminSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/ListAdminSubscriptions',
            proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.ListAdminSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEnabledAdminSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/ListEnabledAdminSubscriptions',
            proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.ListEnabledAdminSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/CreateAdminSubscription',
            proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.CreateAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/DeleteAdminSubscription',
            proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.DeleteAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/EnableAdminSubscription',
            proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.EnableAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/DisableAdminSubscription',
            proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.DisableAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAdminSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/UpdateAdminSubscription',
            proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.UpdateAdminSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/GetSubscription',
            proto_dot_notification_dot_service__pb2.GetSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.GetSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/ListSubscriptions',
            proto_dot_notification_dot_service__pb2.ListSubscriptionsRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.ListSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEnabledSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/ListEnabledSubscriptions',
            proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.ListEnabledSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/CreateSubscription',
            proto_dot_notification_dot_service__pb2.CreateSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.CreateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/DeleteSubscription',
            proto_dot_notification_dot_service__pb2.DeleteSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.DeleteSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/EnableSubscription',
            proto_dot_notification_dot_service__pb2.EnableSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.EnableSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/DisableSubscription',
            proto_dot_notification_dot_service__pb2.DisableSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.DisableSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.notification.NotificationService/UpdateSubscription',
            proto_dot_notification_dot_service__pb2.UpdateSubscriptionRequest.SerializeToString,
            proto_dot_notification_dot_service__pb2.UpdateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
