apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "web-gateway.fullname" . }}-envoy-config
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "web-gateway.name" . }}
    chart: {{ template "web-gateway.chart" . }}
    release: {{ template "web-gateway.fullname" . }}
    heritage: {{ .Release.Service }}
data:
  config.yaml: |-
    admin:
      access_log:
      - name: envoy.access_loggers.file
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
          path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
    static_resources:
      clusters:
        - name: backend
          dns_lookup_family: V4_ONLY
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          type: strict_dns
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: backend.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 9000
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key

        - name: dex
          dns_lookup_family: V4_ONLY
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          type: strict_dns
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
            cluster_name: dex
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: dex.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 9000
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key

        - name: experiment-calculator
          dns_lookup_family: V4_ONLY
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          type: strict_dns
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
            cluster_name: experiment-calculator
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: experiment-calculator.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 9000
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key

        - name: web
          dns_lookup_family: V4_ONLY
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          type: strict_dns
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
            cluster_name: web
            endpoints:
              - lb_endpoints:
                - endpoint:
                    address:
                      socket_address:
                        address: web.{{ .Values.namespace }}.svc.cluster.local
                        port_value: 443
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: ["h2"]
                tls_certificates:
                - certificate_chain:
                    filename: /usr/local/certs/service/tls.crt
                  private_key:
                    filename: /usr/local/certs/service/tls.key

      listeners:
        - name: ingress
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 9000
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  stat_prefix: ingress_http
                  access_log:
                    name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                  codec_type: auto
                  common_http_protocol_options:
                    # set longer timeout than lb session timeout (600s)
                    idle_timeout: 620s
                  stream_idle_timeout: 10800s
                  request_timeout: 10800s
                  http_filters:
                    - name: envoy.filters.http.cors
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                    - name: envoy.filters.http.grpc_web
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/account-secret/account_proto_descriptor.pb
                        services:
                          - bucketeer.account.AccountService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/auditlog-secret/auditlog_proto_descriptor.pb
                        services:
                          - bucketeer.auditlog.AuditLogService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/auth-secret/auth_proto_descriptor.pb
                        services:
                          - bucketeer.auth.AuthService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/autoops-secret/autoops_proto_descriptor.pb
                        services:
                          - bucketeer.autoops.AutoOpsService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/environment-secret/environment_proto_descriptor.pb
                        services:
                          - bucketeer.environment.EnvironmentService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/eventcounter-secret/eventcounter_proto_descriptor.pb
                        services:
                          - bucketeer.eventcounter.EventCounterService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/experiment-secret/experiment_proto_descriptor.pb
                        services:
                          - bucketeer.experiment.ExperimentService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/experiment-calculator-secret/experiment_calculator_proto_descriptor.pb
                        services:
                          - bucketeer.experimentcalculator.ExperimentCalculatorService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/feature-secret/feature_proto_descriptor.pb
                        services:
                          - bucketeer.feature.FeatureService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/notification-secret/notification_proto_descriptor.pb
                        services:
                          - bucketeer.notification.NotificationService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/push-secret/push_proto_descriptor.pb
                        services:
                          - bucketeer.push.PushService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.grpc_json_transcoder
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                        auto_mapping: true
                        proto_descriptor: /usr/local/migration-secret/migration_proto_descriptor.pb
                        services:
                          - bucketeer.migration.MigrationMySQLService
                        print_options:
                          always_print_primitive_fields: true
                    - name: envoy.filters.http.router
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                  route_config:
                    virtual_hosts:
                      - name: web-gateway
                        domains:
                          - "*"
                        cors:
                          allow_origin_string_match:
                            - prefix: "*"
                          allow_headers: "content-type, x-grpc-web, authorization"
                          allow_methods: "POST"
                          allow_credentials: true
                        routes:
                          - match:
                              prefix: /bucketeer.account.AccountService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.auditlog.AuditLogService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.auth.AuthService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.autoops.AutoOpsService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /hook
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.environment.EnvironmentService
                            route:
                              cluster: backend
                              timeout: 60s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.eventcounter.EventCounterService
                            route:
                              cluster: backend
                              timeout: 10800s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.experimentcalculator.ExperimentCalculatorService
                            route:
                              cluster: experiment-calculator
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.experiment.ExperimentService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.feature.FeatureService
                            route:
                              cluster: backend
                              timeout: 60s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.notification.NotificationService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.push.PushService
                            route:
                              cluster: backend
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /bucketeer.migration.MigrationMySQLService
                            route:
                              cluster: backend
                              timeout: 600s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /dex
                            route:
                              cluster: dex
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
                          - match:
                              prefix: /
                            route:
                              cluster: web
                              timeout: 15s
                              retry_policy:
                                retry_on: 5xx
                                num_retries: 3
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  require_client_certificate: true
                  common_tls_context:
                    alpn_protocols: ["h2"]
                    tls_certificates:
                      - certificate_chain:
                          filename: /usr/local/certs/service/tls.crt
                        private_key:
                          filename: /usr/local/certs/service/tls.key
