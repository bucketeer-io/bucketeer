// Code generated by MockGen. DO NOT EDIT.
// Source: supervisor_creator.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSupervisorCreator is a mock of SupervisorCreator interface.
type MockSupervisorCreator struct {
	ctrl     *gomock.Controller
	recorder *MockSupervisorCreatorMockRecorder
}

// MockSupervisorCreatorMockRecorder is the mock recorder for MockSupervisorCreator.
type MockSupervisorCreatorMockRecorder struct {
	mock *MockSupervisorCreator
}

// NewMockSupervisorCreator creates a new mock instance.
func NewMockSupervisorCreator(ctrl *gomock.Controller) *MockSupervisorCreator {
	mock := &MockSupervisorCreator{ctrl: ctrl}
	mock.recorder = &MockSupervisorCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSupervisorCreator) EXPECT() *MockSupervisorCreatorMockRecorder {
	return m.recorder
}

// CreateSupervisors mocks base method.
func (m *MockSupervisorCreator) CreateSupervisors(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSupervisors", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateSupervisors indicates an expected call of CreateSupervisors.
func (mr *MockSupervisorCreatorMockRecorder) CreateSupervisors(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSupervisors", reflect.TypeOf((*MockSupervisorCreator)(nil).CreateSupervisors), ctx)
}
