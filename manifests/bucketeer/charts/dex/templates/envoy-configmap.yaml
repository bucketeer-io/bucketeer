apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "dex.fullname" . }}-envoy-config
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ template "dex.name" . }}
    chart: {{ template "dex.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  config.yaml: |-
    admin:
      access_log:
        - name: envoy.access_loggers.file
          typed_config:
            '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
            path: "/dev/stdout"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
    static_resources:
      clusters:
        - name: dex
          type: strict_dns
          connect_timeout: 5s
          ignore_health_on_host_removal: true
          dns_lookup_family: V4_ONLY
          lb_policy: round_robin
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
                cluster_name: dex
                endpoints:
                - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: localhost
                          port_value: 5556
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
              common_tls_context:
                alpn_protocols:
                - h2
                tls_certificates:
                - certificate_chain:
                    filename: /etc/dex/tls/tls.crt
                  private_key:
                    filename: /etc/dex/tls/tls.key
          health_checks:
            - http_health_check:
                path: /dex/healthz
                codec_client_type: HTTP2
              healthy_threshold: 2
              interval: 10s
              interval_jitter: 1s
              no_traffic_interval: 2s
              timeout: 1s
              unhealthy_threshold: 2
      listeners:
        - name: ingress
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 9000
          filter_chains:
            - filters:
              - name: envoy.filters.network.http_connection_manager
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                  access_log:
                    name: envoy.access_loggers.file
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                  codec_type: auto
                  http_filters:
                  - name: envoy.filters.http.health_check
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                      cluster_min_healthy_percentages:
                        dex:
                          value: 100
                      headers:
                        - name: :path
                          string_match:
                            exact: /health
                      pass_through_mode: false
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                  route_config:
                    virtual_hosts:
                      - domains:
                          - "*"
                        name: ingress_services
                        routes:
                          - match:
                              prefix: /
                            route:
                              cluster: dex
                  stat_prefix: ingress_http
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  common_tls_context:
                    alpn_protocols:
                    - h2
                    tls_certificates:
                    - certificate_chain:
                        filename: /etc/dex/tls/tls.crt
                      private_key:
                        filename: /etc/dex/tls/tls.key
                  require_client_certificate: true
