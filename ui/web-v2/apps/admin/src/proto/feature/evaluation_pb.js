// source: proto/feature/evaluation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_feature_variation_pb = require('../../proto/feature/variation_pb.js');
goog.object.extend(proto, proto_feature_variation_pb);
var proto_feature_reason_pb = require('../../proto/feature/reason_pb.js');
goog.object.extend(proto, proto_feature_reason_pb);
goog.exportSymbol('proto.bucketeer.feature.Evaluation', null, global);
goog.exportSymbol('proto.bucketeer.feature.UserEvaluations', null, global);
goog.exportSymbol('proto.bucketeer.feature.UserEvaluations.State', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.feature.Evaluation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.feature.Evaluation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.feature.Evaluation.displayName = 'proto.bucketeer.feature.Evaluation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.feature.UserEvaluations = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.feature.UserEvaluations.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.feature.UserEvaluations, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.feature.UserEvaluations.displayName = 'proto.bucketeer.feature.UserEvaluations';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.feature.Evaluation.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.feature.Evaluation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.feature.Evaluation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.feature.Evaluation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    featureVersion: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    variationId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    variation: (f = msg.getVariation()) && proto_feature_variation_pb.Variation.toObject(includeInstance, f),
    reason: (f = msg.getReason()) && proto_feature_reason_pb.Reason.toObject(includeInstance, f),
    variationValue: jspb.Message.getFieldWithDefault(msg, 8, ""),
    variationName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.feature.Evaluation}
 */
proto.bucketeer.feature.Evaluation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.feature.Evaluation;
  return proto.bucketeer.feature.Evaluation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.feature.Evaluation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.feature.Evaluation}
 */
proto.bucketeer.feature.Evaluation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeatureVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationId(value);
      break;
    case 6:
      var value = new proto_feature_variation_pb.Variation;
      reader.readMessage(value,proto_feature_variation_pb.Variation.deserializeBinaryFromReader);
      msg.setVariation(value);
      break;
    case 7:
      var value = new proto_feature_reason_pb.Reason;
      reader.readMessage(value,proto_feature_reason_pb.Reason.deserializeBinaryFromReader);
      msg.setReason(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.feature.Evaluation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.feature.Evaluation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.feature.Evaluation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.feature.Evaluation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFeatureVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getVariationId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVariation();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_feature_variation_pb.Variation.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_feature_reason_pb.Reason.serializeBinaryToWriter
    );
  }
  f = message.getVariationValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getVariationName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string feature_id = 2;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getFeatureId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 feature_version = 3;
 * @return {number}
 */
proto.bucketeer.feature.Evaluation.prototype.getFeatureVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setFeatureVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string variation_id = 5;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getVariationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setVariationId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Variation variation = 6;
 * @return {?proto.bucketeer.feature.Variation}
 */
proto.bucketeer.feature.Evaluation.prototype.getVariation = function() {
  return /** @type{?proto.bucketeer.feature.Variation} */ (
    jspb.Message.getWrapperField(this, proto_feature_variation_pb.Variation, 6));
};


/**
 * @param {?proto.bucketeer.feature.Variation|undefined} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
*/
proto.bucketeer.feature.Evaluation.prototype.setVariation = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.clearVariation = function() {
  return this.setVariation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.feature.Evaluation.prototype.hasVariation = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Reason reason = 7;
 * @return {?proto.bucketeer.feature.Reason}
 */
proto.bucketeer.feature.Evaluation.prototype.getReason = function() {
  return /** @type{?proto.bucketeer.feature.Reason} */ (
    jspb.Message.getWrapperField(this, proto_feature_reason_pb.Reason, 7));
};


/**
 * @param {?proto.bucketeer.feature.Reason|undefined} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
*/
proto.bucketeer.feature.Evaluation.prototype.setReason = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.clearReason = function() {
  return this.setReason(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.feature.Evaluation.prototype.hasReason = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string variation_value = 8;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getVariationValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setVariationValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string variation_name = 9;
 * @return {string}
 */
proto.bucketeer.feature.Evaluation.prototype.getVariationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.Evaluation} returns this
 */
proto.bucketeer.feature.Evaluation.prototype.setVariationName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.feature.UserEvaluations.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.feature.UserEvaluations.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.feature.UserEvaluations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.feature.UserEvaluations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.feature.UserEvaluations.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    evaluationsList: jspb.Message.toObjectList(msg.getEvaluationsList(),
    proto.bucketeer.feature.Evaluation.toObject, includeInstance),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    archivedFeatureIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    forceUpdate: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.feature.UserEvaluations}
 */
proto.bucketeer.feature.UserEvaluations.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.feature.UserEvaluations;
  return proto.bucketeer.feature.UserEvaluations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.feature.UserEvaluations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.feature.UserEvaluations}
 */
proto.bucketeer.feature.UserEvaluations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.bucketeer.feature.Evaluation;
      reader.readMessage(value,proto.bucketeer.feature.Evaluation.deserializeBinaryFromReader);
      msg.addEvaluations(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addArchivedFeatureIds(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceUpdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.feature.UserEvaluations.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.feature.UserEvaluations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.feature.UserEvaluations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.feature.UserEvaluations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvaluationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bucketeer.feature.Evaluation.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getArchivedFeatureIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getForceUpdate();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.feature.UserEvaluations.State = {
  QUEUED: 0,
  PARTIAL: 1,
  FULL: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.feature.UserEvaluations.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Evaluation evaluations = 2;
 * @return {!Array<!proto.bucketeer.feature.Evaluation>}
 */
proto.bucketeer.feature.UserEvaluations.prototype.getEvaluationsList = function() {
  return /** @type{!Array<!proto.bucketeer.feature.Evaluation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bucketeer.feature.Evaluation, 2));
};


/**
 * @param {!Array<!proto.bucketeer.feature.Evaluation>} value
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
*/
proto.bucketeer.feature.UserEvaluations.prototype.setEvaluationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bucketeer.feature.Evaluation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.feature.Evaluation}
 */
proto.bucketeer.feature.UserEvaluations.prototype.addEvaluations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bucketeer.feature.Evaluation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.clearEvaluationsList = function() {
  return this.setEvaluationsList([]);
};


/**
 * optional int64 created_at = 3;
 * @return {number}
 */
proto.bucketeer.feature.UserEvaluations.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated string archived_feature_ids = 4;
 * @return {!Array<string>}
 */
proto.bucketeer.feature.UserEvaluations.prototype.getArchivedFeatureIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.setArchivedFeatureIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.addArchivedFeatureIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.clearArchivedFeatureIdsList = function() {
  return this.setArchivedFeatureIdsList([]);
};


/**
 * optional bool force_update = 5;
 * @return {boolean}
 */
proto.bucketeer.feature.UserEvaluations.prototype.getForceUpdate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.bucketeer.feature.UserEvaluations} returns this
 */
proto.bucketeer.feature.UserEvaluations.prototype.setForceUpdate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


goog.object.extend(exports, proto.bucketeer.feature);
