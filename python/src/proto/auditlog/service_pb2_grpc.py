# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.auditlog import service_pb2 as proto_dot_auditlog_dot_service__pb2


class AuditLogServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAuditLogs = channel.unary_unary(
                '/bucketeer.auditlog.AuditLogService/ListAuditLogs',
                request_serializer=proto_dot_auditlog_dot_service__pb2.ListAuditLogsRequest.SerializeToString,
                response_deserializer=proto_dot_auditlog_dot_service__pb2.ListAuditLogsResponse.FromString,
                )
        self.ListAdminAuditLogs = channel.unary_unary(
                '/bucketeer.auditlog.AuditLogService/ListAdminAuditLogs',
                request_serializer=proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsRequest.SerializeToString,
                response_deserializer=proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsResponse.FromString,
                )
        self.ListFeatureHistory = channel.unary_unary(
                '/bucketeer.auditlog.AuditLogService/ListFeatureHistory',
                request_serializer=proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryRequest.SerializeToString,
                response_deserializer=proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryResponse.FromString,
                )


class AuditLogServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListAuditLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAdminAuditLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatureHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuditLogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAuditLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAuditLogs,
                    request_deserializer=proto_dot_auditlog_dot_service__pb2.ListAuditLogsRequest.FromString,
                    response_serializer=proto_dot_auditlog_dot_service__pb2.ListAuditLogsResponse.SerializeToString,
            ),
            'ListAdminAuditLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAdminAuditLogs,
                    request_deserializer=proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsRequest.FromString,
                    response_serializer=proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsResponse.SerializeToString,
            ),
            'ListFeatureHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeatureHistory,
                    request_deserializer=proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryRequest.FromString,
                    response_serializer=proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bucketeer.auditlog.AuditLogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuditLogService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListAuditLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.auditlog.AuditLogService/ListAuditLogs',
            proto_dot_auditlog_dot_service__pb2.ListAuditLogsRequest.SerializeToString,
            proto_dot_auditlog_dot_service__pb2.ListAuditLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAdminAuditLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.auditlog.AuditLogService/ListAdminAuditLogs',
            proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsRequest.SerializeToString,
            proto_dot_auditlog_dot_service__pb2.ListAdminAuditLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeatureHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bucketeer.auditlog.AuditLogService/ListFeatureHistory',
            proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryRequest.SerializeToString,
            proto_dot_auditlog_dot_service__pb2.ListFeatureHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
