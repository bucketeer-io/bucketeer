// source: proto/event/service/segment.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var proto_feature_segment_pb = require('../../../proto/feature/segment_pb.js');
goog.object.extend(proto, proto_feature_segment_pb);
var proto_event_domain_event_pb = require('../../../proto/event/domain/event_pb.js');
goog.object.extend(proto, proto_event_domain_event_pb);
goog.exportSymbol('proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.displayName = 'proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    environmentNamespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    segmentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    data: msg.getData_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 5, 0),
    editor: (f = msg.getEditor()) && proto_event_domain_event_pb.Editor.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent;
  return proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironmentNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSegmentId(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 5:
      var value = /** @type {!proto.bucketeer.feature.SegmentUser.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 6:
      var value = new proto_event_domain_event_pb.Editor;
      reader.readMessage(value,proto_event_domain_event_pb.Editor.deserializeBinaryFromReader);
      msg.setEditor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnvironmentNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSegmentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getEditor();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_event_domain_event_pb.Editor.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string environment_namespace = 2;
 * @return {string}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getEnvironmentNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setEnvironmentNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string segment_id = 3;
 * @return {string}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getSegmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setSegmentId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bucketeer.feature.SegmentUser.State state = 5;
 * @return {!proto.bucketeer.feature.SegmentUser.State}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getState = function() {
  return /** @type {!proto.bucketeer.feature.SegmentUser.State} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.bucketeer.feature.SegmentUser.State} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional bucketeer.event.domain.Editor editor = 6;
 * @return {?proto.bucketeer.event.domain.Editor}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.getEditor = function() {
  return /** @type{?proto.bucketeer.event.domain.Editor} */ (
    jspb.Message.getWrapperField(this, proto_event_domain_event_pb.Editor, 6));
};


/**
 * @param {?proto.bucketeer.event.domain.Editor|undefined} value
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
*/
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.setEditor = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent} returns this
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.clearEditor = function() {
  return this.setEditor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.event.service.BulkSegmentUsersReceivedEvent.prototype.hasEditor = function() {
  return jspb.Message.getField(this, 6) != null;
};


goog.object.extend(exports, proto.bucketeer.event.service);
