// source: proto/autoops/clause.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.bucketeer.autoops.Clause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.DatetimeClause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.OpsEventRateClause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.OpsEventRateClause.Operator', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ProgressiveRolloutSchedule', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval', null, global);
goog.exportSymbol('proto.bucketeer.autoops.WebhookClause', null, global);
goog.exportSymbol('proto.bucketeer.autoops.WebhookClause.Condition', null, global);
goog.exportSymbol('proto.bucketeer.autoops.WebhookClause.Condition.Operator', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.Clause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.Clause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.Clause.displayName = 'proto.bucketeer.autoops.Clause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.OpsEventRateClause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.OpsEventRateClause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.OpsEventRateClause.displayName = 'proto.bucketeer.autoops.OpsEventRateClause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.DatetimeClause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.DatetimeClause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.DatetimeClause.displayName = 'proto.bucketeer.autoops.DatetimeClause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.WebhookClause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.autoops.WebhookClause.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.autoops.WebhookClause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.WebhookClause.displayName = 'proto.bucketeer.autoops.WebhookClause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.WebhookClause.Condition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.WebhookClause.Condition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.WebhookClause.Condition.displayName = 'proto.bucketeer.autoops.WebhookClause.Condition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bucketeer.autoops.ProgressiveRolloutSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ProgressiveRolloutSchedule.displayName = 'proto.bucketeer.autoops.ProgressiveRolloutSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.displayName = 'proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.repeatedFields_, null);
};
goog.inherits(proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.displayName = 'proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.Clause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.Clause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.Clause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.Clause.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clause: (f = msg.getClause()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.Clause}
 */
proto.bucketeer.autoops.Clause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.Clause;
  return proto.bucketeer.autoops.Clause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.Clause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.Clause}
 */
proto.bucketeer.autoops.Clause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setClause(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.Clause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.Clause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.Clause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.Clause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClause();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.Clause.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.Clause} returns this
 */
proto.bucketeer.autoops.Clause.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Any clause = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.bucketeer.autoops.Clause.prototype.getClause = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.bucketeer.autoops.Clause} returns this
*/
proto.bucketeer.autoops.Clause.prototype.setClause = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.bucketeer.autoops.Clause} returns this
 */
proto.bucketeer.autoops.Clause.prototype.clearClause = function() {
  return this.setClause(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.bucketeer.autoops.Clause.prototype.hasClause = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.OpsEventRateClause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.OpsEventRateClause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.OpsEventRateClause.toObject = function(includeInstance, msg) {
  var f, obj = {
    variationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    goalId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    minCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    threadsholdRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    operator: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.OpsEventRateClause}
 */
proto.bucketeer.autoops.OpsEventRateClause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.OpsEventRateClause;
  return proto.bucketeer.autoops.OpsEventRateClause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.OpsEventRateClause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.OpsEventRateClause}
 */
proto.bucketeer.autoops.OpsEventRateClause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoalId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setThreadsholdRate(value);
      break;
    case 6:
      var value = /** @type {!proto.bucketeer.autoops.OpsEventRateClause.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.OpsEventRateClause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.OpsEventRateClause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.OpsEventRateClause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVariationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGoalId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMinCount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getThreadsholdRate();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.autoops.OpsEventRateClause.Operator = {
  GREATER_OR_EQUAL: 0,
  LESS_OR_EQUAL: 1
};

/**
 * optional string variation_id = 2;
 * @return {string}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.getVariationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.OpsEventRateClause} returns this
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.setVariationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string goal_id = 3;
 * @return {string}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.getGoalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.OpsEventRateClause} returns this
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.setGoalId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 min_count = 4;
 * @return {number}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.getMinCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.OpsEventRateClause} returns this
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.setMinCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double threadshold_rate = 5;
 * @return {number}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.getThreadsholdRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.OpsEventRateClause} returns this
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.setThreadsholdRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional Operator operator = 6;
 * @return {!proto.bucketeer.autoops.OpsEventRateClause.Operator}
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.getOperator = function() {
  return /** @type {!proto.bucketeer.autoops.OpsEventRateClause.Operator} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.bucketeer.autoops.OpsEventRateClause.Operator} value
 * @return {!proto.bucketeer.autoops.OpsEventRateClause} returns this
 */
proto.bucketeer.autoops.OpsEventRateClause.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.DatetimeClause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.DatetimeClause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.DatetimeClause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DatetimeClause.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.DatetimeClause}
 */
proto.bucketeer.autoops.DatetimeClause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.DatetimeClause;
  return proto.bucketeer.autoops.DatetimeClause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.DatetimeClause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.DatetimeClause}
 */
proto.bucketeer.autoops.DatetimeClause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.DatetimeClause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.DatetimeClause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.DatetimeClause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.DatetimeClause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 time = 1;
 * @return {number}
 */
proto.bucketeer.autoops.DatetimeClause.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.DatetimeClause} returns this
 */
proto.bucketeer.autoops.DatetimeClause.prototype.setTime = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.autoops.WebhookClause.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.WebhookClause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.WebhookClause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.WebhookClause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.WebhookClause.toObject = function(includeInstance, msg) {
  var f, obj = {
    webhookId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.bucketeer.autoops.WebhookClause.Condition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.WebhookClause}
 */
proto.bucketeer.autoops.WebhookClause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.WebhookClause;
  return proto.bucketeer.autoops.WebhookClause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.WebhookClause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.WebhookClause}
 */
proto.bucketeer.autoops.WebhookClause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebhookId(value);
      break;
    case 2:
      var value = new proto.bucketeer.autoops.WebhookClause.Condition;
      reader.readMessage(value,proto.bucketeer.autoops.WebhookClause.Condition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.WebhookClause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.WebhookClause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.WebhookClause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.WebhookClause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWebhookId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.bucketeer.autoops.WebhookClause.Condition.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.WebhookClause.Condition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.WebhookClause.Condition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.WebhookClause.Condition.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operator: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition}
 */
proto.bucketeer.autoops.WebhookClause.Condition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.WebhookClause.Condition;
  return proto.bucketeer.autoops.WebhookClause.Condition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.WebhookClause.Condition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition}
 */
proto.bucketeer.autoops.WebhookClause.Condition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.bucketeer.autoops.WebhookClause.Condition.Operator} */ (reader.readEnum());
      msg.setOperator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.WebhookClause.Condition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.WebhookClause.Condition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.WebhookClause.Condition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperator();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.autoops.WebhookClause.Condition.Operator = {
  EQUAL: 0,
  NOT_EQUAL: 1,
  MORE_THAN: 2,
  MORE_THAN_OR_EQUAL: 3,
  LESS_THAN: 4,
  LESS_THAN_OR_EQUAL: 5
};

/**
 * optional string filter = 1;
 * @return {string}
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition} returns this
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition} returns this
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Operator operator = 3;
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition.Operator}
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.getOperator = function() {
  return /** @type {!proto.bucketeer.autoops.WebhookClause.Condition.Operator} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.bucketeer.autoops.WebhookClause.Condition.Operator} value
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition} returns this
 */
proto.bucketeer.autoops.WebhookClause.Condition.prototype.setOperator = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string webhook_id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.WebhookClause.prototype.getWebhookId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.WebhookClause} returns this
 */
proto.bucketeer.autoops.WebhookClause.prototype.setWebhookId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Condition conditions = 2;
 * @return {!Array<!proto.bucketeer.autoops.WebhookClause.Condition>}
 */
proto.bucketeer.autoops.WebhookClause.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.WebhookClause.Condition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bucketeer.autoops.WebhookClause.Condition, 2));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.WebhookClause.Condition>} value
 * @return {!proto.bucketeer.autoops.WebhookClause} returns this
*/
proto.bucketeer.autoops.WebhookClause.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.bucketeer.autoops.WebhookClause.Condition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.WebhookClause.Condition}
 */
proto.bucketeer.autoops.WebhookClause.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.bucketeer.autoops.WebhookClause.Condition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.WebhookClause} returns this
 */
proto.bucketeer.autoops.WebhookClause.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ProgressiveRolloutSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    executeAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    weight: jspb.Message.getFieldWithDefault(msg, 3, 0),
    triggeredAt: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ProgressiveRolloutSchedule;
  return proto.bucketeer.autoops.ProgressiveRolloutSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScheduleId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecuteAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTriggeredAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ProgressiveRolloutSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExecuteAt();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTriggeredAt();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string schedule_id = 1;
 * @return {string}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.getScheduleId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.setScheduleId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 execute_at = 2;
 * @return {number}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.getExecuteAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.setExecuteAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 weight = 3;
 * @return {number}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.setWeight = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 triggered_at = 4;
 * @return {number}
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.getTriggeredAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutSchedule.prototype.setTriggeredAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedulesList: jspb.Message.toObjectList(msg.getSchedulesList(),
    proto.bucketeer.autoops.ProgressiveRolloutSchedule.toObject, includeInstance),
    variationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause;
  return proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bucketeer.autoops.ProgressiveRolloutSchedule;
      reader.readMessage(value,proto.bucketeer.autoops.ProgressiveRolloutSchedule.deserializeBinaryFromReader);
      msg.addSchedules(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bucketeer.autoops.ProgressiveRolloutSchedule.serializeBinaryToWriter
    );
  }
  f = message.getVariationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ProgressiveRolloutSchedule schedules = 1;
 * @return {!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.getSchedulesList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bucketeer.autoops.ProgressiveRolloutSchedule, 1));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} returns this
*/
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.setSchedulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutSchedule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.addSchedules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bucketeer.autoops.ProgressiveRolloutSchedule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.clearSchedulesList = function() {
  return this.setSchedulesList([]);
};


/**
 * optional string variation_id = 2;
 * @return {string}
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.getVariationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutManualScheduleClause.prototype.setVariationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.toObject = function(opt_includeInstance) {
  return proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.toObject = function(includeInstance, msg) {
  var f, obj = {
    schedulesList: jspb.Message.toObjectList(msg.getSchedulesList(),
    proto.bucketeer.autoops.ProgressiveRolloutSchedule.toObject, includeInstance),
    interval: jspb.Message.getFieldWithDefault(msg, 2, 0),
    increments: jspb.Message.getFieldWithDefault(msg, 3, 0),
    variationId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause;
  return proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.bucketeer.autoops.ProgressiveRolloutSchedule;
      reader.readMessage(value,proto.bucketeer.autoops.ProgressiveRolloutSchedule.deserializeBinaryFromReader);
      msg.addSchedules(value);
      break;
    case 2:
      var value = /** @type {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIncrements(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVariationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchedulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.bucketeer.autoops.ProgressiveRolloutSchedule.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIncrements();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVariationId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval = {
  UNKNOWN: 0,
  HOURLY: 1,
  DAILY: 2,
  WEEKLY: 3
};

/**
 * repeated ProgressiveRolloutSchedule schedules = 1;
 * @return {!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.getSchedulesList = function() {
  return /** @type{!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.bucketeer.autoops.ProgressiveRolloutSchedule, 1));
};


/**
 * @param {!Array<!proto.bucketeer.autoops.ProgressiveRolloutSchedule>} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} returns this
*/
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.setSchedulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutSchedule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutSchedule}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.addSchedules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.bucketeer.autoops.ProgressiveRolloutSchedule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.clearSchedulesList = function() {
  return this.setSchedulesList([]);
};


/**
 * optional Interval interval = 2;
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.getInterval = function() {
  return /** @type {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.Interval} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 increments = 3;
 * @return {number}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.getIncrements = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.setIncrements = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string variation_id = 4;
 * @return {string}
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.getVariationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause} returns this
 */
proto.bucketeer.autoops.ProgressiveRolloutTemplateScheduleClause.prototype.setVariationId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.bucketeer.autoops);
