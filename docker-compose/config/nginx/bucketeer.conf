# Bucketeer upstream servers (HTTPS with TLS direct to services)
# Web service individual microservice ports
upstream web_account_backend {
    server web:9091;  # Account service
}

upstream web_auth_backend {
    server web:9092;  # Auth service
}

upstream web_auditlog_backend {
    server web:9093;  # Audit log service
}

upstream web_autoops_backend {
    server web:9094;  # Auto ops service
}

upstream web_environment_backend {
    server web:9095;  # Environment service
}

upstream web_eventcounter_backend {
    server web:9096;  # Event counter service
}

upstream web_experiment_backend {
    server web:9097;  # Experiment service
}

upstream web_feature_backend {
    server web:9098;  # Feature service
}

upstream web_notification_backend {
    server web:9100;  # Notification service
}

upstream web_push_backend {
    server web:9101;  # Push service
}

upstream web_console_backend {
    server web:9102;  # Web console service
}

upstream web_dashboard_backend {
    server web:9103;  # Dashboard service
}

upstream web_tag_backend {
    server web:9104;  # Tag service
}

upstream web_team_backend {
    server web:9107; # Team service
}

upstream web_coderef_backend {
    server web:9105;  # Code reference service
}

upstream web_grpc_gateway_backend {
    server web:9089;  # Web gRPC Gateway
}

# API service ports
upstream api_grpc_backend {
    server api:9090;  # API main gRPC service
}

upstream api_grpc_gateway_backend {
    server api:9089;  # API gRPC Gateway
}

# Health check backends
upstream web_health_backend {
    server web:8000;  # Web health check port
}

upstream api_health_backend {
    server api:9090;  # API main gRPC service port
}

# Batch service backend (for web service batch routing)
upstream batch_backend {
    server batch:9000;  # Batch service port
}

# HTTP server for redirecting to HTTPS (web)
server {
    listen 80;
    listen [::]:80;
    server_name web-gateway.bucketeer.io;
    return 301 https://$host$request_uri;
}

# HTTP server for redirecting to HTTPS (API)
server {
    listen 80;
    listen [::]:80;
    server_name api-gateway.bucketeer.io;
    return 301 https://$host$request_uri;
}

# HTTPS server for web services
server {
    # SSL Configuration
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name web-gateway.bucketeer.io;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_certificate /etc/nginx/certs/tls.crt;
    ssl_certificate_key /etc/nginx/certs/tls.key;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # CORS headers for gRPC-Web support
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'Content-Type, x-grpc-web, authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Encoding, grpc-message, grpc-status' always;

    # Handle preflight OPTIONS requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Health check endpoint
    location /health {
        proxy_pass https://web_health_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # gRPC service routes (following transcoder-ingress pattern)
    location /bucketeer.account.AccountService {
        grpc_pass grpcs://web_account_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.auditlog.AuditLogService {
        grpc_pass grpcs://web_auditlog_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.auth.AuthService {
        grpc_pass grpcs://web_auth_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.autoops.AutoOpsService {
        grpc_pass grpcs://web_autoops_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    # Hook endpoints for auto ops (from transcoder-ingress)
    location /hook {
        proxy_pass https://web_autoops_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 15s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }

    # Batch service (from transcoder-ingress)
    location /bucketeer.batch.BatchService {
        grpc_pass grpcs://batch_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 3600s;
        grpc_read_timeout 3600s; # Long timeout for batch operations
    }

    location /bucketeer.environment.EnvironmentService {
        grpc_pass grpcs://web_environment_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    location /bucketeer.eventcounter.EventCounterService {
        grpc_pass grpcs://web_eventcounter_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 1800s;
        grpc_read_timeout 1800s; # Long timeout for event counter
    }

    location /bucketeer.experiment.ExperimentService {
        grpc_pass grpcs://web_experiment_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    location /bucketeer.feature.FeatureService {
        grpc_pass grpcs://web_feature_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    # Webhook endpoints (routes to gRPC Gateway, not directly to feature)
    location /webhook {
        proxy_pass https://web_grpc_gateway_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /bucketeer.notification.NotificationService {
        grpc_pass grpcs://web_notification_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.push.PushService {
        grpc_pass grpcs://web_push_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.tag.TagService {
        grpc_pass grpcs://web_tag_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.coderef.CodeReferenceService {
        grpc_pass grpcs://web_coderef_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.team.TeamService {
        grpc_pass grpcs://web_team_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    # Dashboard v3 endpoints
    location /v3 {
        proxy_pass https://web_dashboard_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 15s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }

    # Web gRPC Gateway REST API (v1)
    location /v1/ {
        proxy_pass https://web_grpc_gateway_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Default route to web console
    location / {
        proxy_pass https://web_console_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 15s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }
}

# HTTPS server for internal gRPC connections (from web service)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name nginx;

    # SSL configuration
    ssl_certificate /etc/nginx/certs/tls.crt;
    ssl_certificate_key /etc/nginx/certs/tls.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # gRPC service routes for internal connections
    location /bucketeer.account.AccountService {
        grpc_pass grpcs://web_account_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.auth.AuthService {
        grpc_pass grpcs://web_auth_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.environment.EnvironmentService {
        grpc_pass grpcs://web_environment_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    location /bucketeer.experiment.ExperimentService {
        grpc_pass grpcs://web_experiment_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    location /bucketeer.feature.FeatureService {
        grpc_pass grpcs://web_feature_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    location /bucketeer.autoops.AutoOpsService {
        grpc_pass grpcs://web_autoops_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.coderef.CodeReferenceService {
        grpc_pass grpcs://web_coderef_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    location /bucketeer.team.TeamService {
        grpc_pass grpcs://web_team_backend;
        grpc_connect_timeout 15s;
        grpc_send_timeout 15s;
        grpc_read_timeout 15s;
    }

    # Batch service for internal connections
    location /bucketeer.batch.BatchService {
        grpc_pass grpcs://batch_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 3600s;
        grpc_read_timeout 3600s;
    }
}

# HTTPS server for API services
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api-gateway.bucketeer.io;

    # SSL configuration
    ssl_certificate /etc/nginx/certs/tls.crt;
    ssl_certificate_key /etc/nginx/certs/tls.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Health check endpoint
    location /health {
        proxy_pass https://api_health_backend;
        proxy_ssl_verify off;  # Disable SSL verification for internal communication
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API Gateway gRPC service (main API)
    location /bucketeer.gateway.Gateway {
        grpc_pass grpcs://api_grpc_backend;
        grpc_connect_timeout 60s;
        grpc_send_timeout 60s;
        grpc_read_timeout 60s;
    }

    # API Gateway REST endpoints (deprecated v1/gateway)
    location /v1/gateway {
        proxy_pass https://api_grpc_gateway_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # All other API requests go to gRPC Gateway
    location / {
        proxy_pass https://api_grpc_gateway_backend;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
} 