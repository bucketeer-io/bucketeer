// Copyright 2023 The Bucketeer Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package bucketeer.experiment;
option go_package = "github.com/bucketeer-io/bucketeer/proto/experiment";

import "google/protobuf/wrappers.proto";

import "proto/experiment/command.proto";
import "proto/experiment/goal.proto";
import "proto/experiment/experiment.proto";

message GetGoalRequest {
  string id = 1;
  string environment_namespace = 2;
}

message GetGoalResponse {
  Goal goal = 1;
}

message ListGoalsRequest {
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    CREATED_AT = 2;
    UPDATED_AT = 3;
  }
  enum OrderDirection {
    ASC = 0;
    DESC = 1;
  }
  int64 page_size = 1;
  string cursor = 2;
  string environment_namespace = 3;
  OrderBy order_by = 4;
  OrderDirection order_direction = 5;
  string search_keyword = 6;
  google.protobuf.BoolValue is_in_use_status = 7;
  google.protobuf.BoolValue archived = 8;
}

message ListGoalsResponse {
  repeated Goal goals = 1;
  string cursor = 2;
  int64 total_count = 3;
}

message CreateGoalRequest {
  CreateGoalCommand command = 1;
  string environment_namespace = 2;
}

message CreateGoalResponse {}

message ArchiveGoalRequest {
  string id = 1;
  ArchiveGoalCommand command = 2;
  string environment_namespace = 3;
}

message ArchiveGoalResponse {}

message DeleteGoalRequest {
  string id = 1;
  DeleteGoalCommand command = 2;
  string environment_namespace = 3;
}

message DeleteGoalResponse {}

message UpdateGoalRequest {
  string id = 1;
  RenameGoalCommand rename_command = 2;
  ChangeDescriptionGoalCommand change_description_command = 3;
  string environment_namespace = 4;
}

message UpdateGoalResponse {}

message GetExperimentRequest {
  string id = 1;
  string environment_namespace = 2;
}

message GetExperimentResponse {
  Experiment experiment = 1;
}

message ListExperimentsRequest {
  enum OrderBy {
    DEFAULT = 0;
    NAME = 1;
    CREATED_AT = 2;
    UPDATED_AT = 3;
  }
  enum OrderDirection {
    ASC = 0;
    DESC = 1;
  }
  string feature_id = 1;
  google.protobuf.Int32Value feature_version = 2;
  int64 from = 3;
  int64 to = 4;
  int64 page_size = 5;
  string cursor = 6;
  string environment_namespace = 7;
  google.protobuf.Int32Value status = 8;  // [deprecated = true];
  string maintainer = 9;
  OrderBy order_by = 10;
  OrderDirection order_direction = 11;
  string search_keyword = 12;
  google.protobuf.BoolValue archived = 13;
  repeated Experiment.Status statuses = 14;
}

message ListExperimentsResponse {
  repeated Experiment experiments = 1;
  string cursor = 2;
  int64 total_count = 3;
}

message CreateExperimentRequest {
  CreateExperimentCommand command = 1;
  string environment_namespace = 2;
}

message CreateExperimentResponse {
  Experiment experiment = 1;
}

message UpdateExperimentRequest {
  string id = 1;
  reserved 2;  // ChangeStartAtExperimentCommand change_start_at_command = 2
               // [deprecated = true];
  reserved 3;  // ChangeStopAtExperimentCommand change_stop_at_command = 3
               // [deprecated = true];
  string environment_namespace = 4;
  ChangeExperimentPeriodCommand change_experiment_period_command = 5;
  ChangeExperimentNameCommand change_name_command = 6;
  ChangeExperimentDescriptionCommand change_description_command = 7;
}

message UpdateExperimentResponse {}

message StartExperimentRequest {
  string environment_namespace = 1;
  string id = 2;
  StartExperimentCommand command = 3;
}

message StartExperimentResponse {}

message FinishExperimentRequest {
  string environment_namespace = 1;
  string id = 2;
  FinishExperimentCommand command = 3;
}

message FinishExperimentResponse {}

message StopExperimentRequest {
  string id = 1;
  StopExperimentCommand command = 2;
  string environment_namespace = 3;
}

message StopExperimentResponse {}

message ArchiveExperimentRequest {
  string id = 1;
  ArchiveExperimentCommand command = 2;
  string environment_namespace = 3;
}

message ArchiveExperimentResponse {}

message DeleteExperimentRequest {
  string id = 1;
  DeleteExperimentCommand command = 2;
  string environment_namespace = 3;
}

message DeleteExperimentResponse {}

service ExperimentService {
  rpc GetGoal(GetGoalRequest) returns (GetGoalResponse) {}
  rpc ListGoals(ListGoalsRequest) returns (ListGoalsResponse) {}
  rpc CreateGoal(CreateGoalRequest) returns (CreateGoalResponse) {}
  rpc UpdateGoal(UpdateGoalRequest) returns (UpdateGoalResponse) {}
  rpc ArchiveGoal(ArchiveGoalRequest) returns (ArchiveGoalResponse) {}
  rpc DeleteGoal(DeleteGoalRequest) returns (DeleteGoalResponse) {}

  rpc GetExperiment(GetExperimentRequest) returns (GetExperimentResponse) {}
  rpc ListExperiments(ListExperimentsRequest)
      returns (ListExperimentsResponse) {}
  rpc CreateExperiment(CreateExperimentRequest)
      returns (CreateExperimentResponse) {}
  rpc UpdateExperiment(UpdateExperimentRequest)
      returns (UpdateExperimentResponse) {}
  rpc StartExperiment(StartExperimentRequest)
      returns (StartExperimentResponse) {}
  rpc FinishExperiment(FinishExperimentRequest)
      returns (FinishExperimentResponse) {}
  rpc StopExperiment(StopExperimentRequest) returns (StopExperimentResponse) {}
  rpc ArchiveExperiment(ArchiveExperimentRequest)
      returns (ArchiveExperimentResponse) {}
  rpc DeleteExperiment(DeleteExperimentRequest)
      returns (DeleteExperimentResponse) {}
}
