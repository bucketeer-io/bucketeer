global:
  image:
    tag: localenv
    imagePullSecrets:

env:
  project: bucketeer-test
  profile: false
  gcpEnabled: false
  mysqlUser: bucketeer
  mysqlPass: bucketeer
  mysqlHost: localenv-mysql-headless.default.svc.cluster.local
  mysqlPort: 3306
  mysqlDbName: bucketeer
  bigqueryEmulatorHost: localenv-bq.default.svc.cluster.local:9060
  pubsubEmulatorHost: localenv-pubsub.default.svc.cluster.local:8089
  notificationService: localhost:9001
  environmentService: localhost:9001
  pushService: localhost:9001
  autoOpsService: localhost:9001
  experimentService: localhost:9001
  eventCounterService: localhost:9001
  featureService: localhost:9001
  webURL: http://localhost:3000
  logLevel: debug
  port: 9090
  metricsPort: 9002
  timezone: UTC
  refreshInterval: 10m
  domainTopic: domain
  domainSubscription: domain-subscription
  pullerNumGoroutines: 5
  pullerMaxOutstandingMessages: "1000"
  pullerMaxOutstandingBytes: "1000000000"
  runningDurationPerBatch: 15s
  # redis settings
  persistentRedis:
    serverName: batch-peristent-redis
    addr: localenv-redis-headless.default.svc.cluster.local:6379
    poolMaxIdle: 25
    poolMaxActive: 25
  nonPersistentRedis:
    serverName: batch-non-peristent-redis
    addr: localenv-redis-headless.default.svc.cluster.local:6379
    poolMaxIdle: 25
    poolMaxActive: 25

tls:
  service:
    secret: bucketeer-service-cert

serviceToken:
  secret: bucketeer-service-token

oauth:
  key:
    secret: bucketeer-oauth-key
    public:
  issuer: https://localhost
  audience: bucketeer

cronjob:
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  webGatewayAddress: https://web-gateway.default.svc.cluster.local:9000
  jobs:
    - name: experiment-status-updater
      jobId: ExperimentStatusUpdater
      schedule: "* * * * *"
    - name: experiment-running-watcher
      jobId: ExperimentRunningWatcher
      schedule: "0 1 * * *"
    - name: feature-stale-watcher
      jobId: FeatureStaleWatcher
      schedule: "0 1 * * MON"
    - name: mau-count-watcher
      jobId: MauCountWatcher
      schedule: "0 1 1 * *"
    - name: ops-datetime-watcher
      jobId: DatetimeWatcher
      schedule: "* * * * *"
    - name: ops-event-count-watcher
      jobId: EventCountWatcher
      schedule: "* * * * *"
    - name: ops-progressive-rollout-watcher
      jobId: ProgressiveRolloutWatcher
      schedule: "* * * * *"
    - name: redis-counter-deleter
      jobId: RedisCounterDeleter
      schedule: "0 0 * * *"
    - name: experiment-calculator
      jobId: ExperimentCalculator
      schedule: "* * * * *"
    - name: mau-summarizer
      jobId: MauSummarizer
      schedule: "30 0 * * *"
    - name: mau-partition-deleter
      jobId: MauPartitionDeleter
      schedule: "0 2 1 * *"
    - name: mau-partition-creator
      jobId: MauPartitionCreator
      schedule: "0 2 2 * *"

subscribers:
  # This is the processor's name. It must match the same name defined in the
  # pkg/batch/subscriber/processor/processors.go
  auditLogPersister:
    project: bucketeer-test
    topic: domain
    subscription: auditlog-persister
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  domainEventInformer:
    project: bucketeer-test
    topic: domain
    subscription: domain-subscription
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  evaluationCountEventPersister:
    project: bucketeer-test
    topic: evaluation
    subscription: evaluation-count-sub
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  metricsEventPersister:
    project: bucketeer-test
    topic: metrics
    subscription: metrics-sub
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  pushSender:
    project: bucketeer-test
    topic: domain
    subscription: push-sender-domain-sub
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  segmentUserPersister:
    project: bucketeer-test
    topic: bulk-segment-users-received
    subscription: bulk-segment-users-received-subscription
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
  userEventPersister:
    project: bucketeer-test
    topic: user
    subscription: user-sub
    pullerNumGoroutines: 5
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1

onDemandSubscribers:
  evaluationCountEventDWHPersister:
    project: bucketeer-test
    topic: evaluation
    subscription: evaluation-dwh-sub
    pullerNumGoroutines: 1
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
    checkInterval: 5
  evaluationCountEventOPSPersister:
    project: bucketeer-test
    topic: evaluation
    subscription: evaluation-ops-sub
    pullerNumGoroutines: 1
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
    checkInterval: 5
  goalCountEventDWHPersister:
    project: bucketeer-test
    topic: goal
    subscription: goal-dwh-sub
    pullerNumGoroutines: 1
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
    checkInterval: 5
  goalCountEventOPSPersister:
    project: bucketeer-test
    topic: goal
    subscription: goal-ops-sub
    pullerNumGoroutines: 1
    pullerMaxOutstandingMessages: 1000
    pullerMaxOutstandingBytes: 1000000000
    maxMps: 50
    workerNum: 1
    checkInterval: 5

# This configuration is used for add custom params to Processors
processors:
  # This is the processor's name. It must match the same name defined in the
  # pkg/batch/subscriber/processor/processors.go
  auditLogPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
  evaluationCountEventPersister:
    flushSize: 100
    flushInterval: 10
    writeCacheInterval: 10
  segmentUserPersister:
    domainEventProject: bucketeer-test
    domainEventTopic: domain
    flushSize: 100
    flushInterval: 10
  userEventPersister:
    flushSize: 100
    flushInterval: 10

onDemandProcessors:
  evaluationCountEventDWHPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
    project: bucketeer-test
    bigQueryDataSet: bucketeer
    bigQueryBatchSize: 10
    timezone: UTC
  evaluationCountEventOPSPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
  goalCountEventDWHPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
    project: bucketeer-test
    bigQueryDataSet: bucketeer
    bigQueryBatchSize: 10
    timezone: UTC
  goalCountEventOPSPersister:
    flushSize: 100
    flushInterval: 10
    flushTimeout: 10
